"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/jspdf";
exports.ids = ["vendor-chunks/jspdf"];
exports.modules = {

/***/ "(ssr)/../../../../node_modules/jspdf/dist/jspdf.es.min.js":
/*!***********************************************************!*\
  !*** ../../../../node_modules/jspdf/dist/jspdf.es.min.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AcroForm: () => (/* binding */ St),\n/* harmony export */   AcroFormAppearance: () => (/* binding */ xt),\n/* harmony export */   AcroFormButton: () => (/* binding */ mt),\n/* harmony export */   AcroFormCheckBox: () => (/* binding */ wt),\n/* harmony export */   AcroFormChoiceField: () => (/* binding */ ft),\n/* harmony export */   AcroFormComboBox: () => (/* binding */ pt),\n/* harmony export */   AcroFormEditBox: () => (/* binding */ gt),\n/* harmony export */   AcroFormListBox: () => (/* binding */ dt),\n/* harmony export */   AcroFormPasswordField: () => (/* binding */ Lt),\n/* harmony export */   AcroFormPushButton: () => (/* binding */ vt),\n/* harmony export */   AcroFormRadioButton: () => (/* binding */ bt),\n/* harmony export */   AcroFormTextField: () => (/* binding */ Nt),\n/* harmony export */   GState: () => (/* binding */ O),\n/* harmony export */   ShadingPattern: () => (/* binding */ M),\n/* harmony export */   TilingPattern: () => (/* binding */ q),\n/* harmony export */   \"default\": () => (/* binding */ E),\n/* harmony export */   jsPDF: () => (/* binding */ E)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/typeof */ \"(ssr)/../../../../node_modules/@babel/runtime/helpers/typeof.js\");\n/* harmony import */ var _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fflate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fflate */ \"(ssr)/../../../../node_modules/fflate/esm/index.mjs\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"(ssr)/../../../../node_modules/@babel/runtime/helpers/slicedToArray.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var fast_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! fast-png */ \"(ssr)/../../../../node_modules/fast-png/lib-esm/index.js\");\n/** @license\n *\n * jsPDF - PDF Document creation from JavaScript\n * Version 3.0.3 Built on 2025-09-18T08:03:54.261Z\n *                      CommitID 00000000\n *\n * Copyright (c) 2010-2025 James Hall <james@parall.ax>, https://github.com/MrRio/jsPDF\n *               2015-2025 yWorks GmbH, http://www.yworks.com\n *               2015-2025 Lukas Holl√§nder <lukas.hollaender@yworks.com>, https://github.com/HackbrettXXX\n *               2016-2018 Aras Abbasi <aras.abbasi@gmail.com>\n *               2010 Aaron Spike, https://github.com/acspike\n *               2012 Willow Systems Corporation, https://github.com/willowsystems\n *               2012 Pablo Hess, https://github.com/pablohess\n *               2012 Florian Jenett, https://github.com/fjenett\n *               2013 Warren Weckesser, https://github.com/warrenweckesser\n *               2013 Youssef Beddad, https://github.com/lifof\n *               2013 Lee Driscoll, https://github.com/lsdriscoll\n *               2013 Stefan Slonevskiy, https://github.com/stefslon\n *               2013 Jeremy Morel, https://github.com/jmorel\n *               2013 Christoph Hartmann, https://github.com/chris-rock\n *               2014 Juan Pablo Gaviria, https://github.com/juanpgaviria\n *               2014 James Makes, https://github.com/dollaruw\n *               2014 Diego Casorran, https://github.com/diegocr\n *               2014 Steven Spungin, https://github.com/Flamenco\n *               2014 Kenneth Glassey, https://github.com/Gavvers\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * Contributor(s):\n *    siefkenj, ahwolf, rickygu, Midnith, saintclair, eaparango,\n *    kim3er, mfo, alnorth, Flamenco\n */ \n\n\n\nvar i = function() {\n    return  false ? 0 : \"undefined\" != typeof global ? global : \"undefined\" != typeof self ? self : this;\n}();\nfunction a() {\n    i.console && \"function\" == typeof i.console.log && i.console.log.apply(i.console, arguments);\n}\nvar o = {\n    log: a,\n    warn: function(t) {\n        i.console && (\"function\" == typeof i.console.warn ? i.console.warn.apply(i.console, arguments) : a.call(null, arguments));\n    },\n    error: function(t) {\n        i.console && (\"function\" == typeof i.console.error ? i.console.error.apply(i.console, arguments) : a(t));\n    }\n};\nfunction s(t, e, n) {\n    var r = new XMLHttpRequest;\n    r.open(\"GET\", t), r.responseType = \"blob\", r.onload = function() {\n        l(r.response, e, n);\n    }, r.onerror = function() {\n        o.error(\"could not download file\");\n    }, r.send();\n}\nfunction u(t) {\n    var e = new XMLHttpRequest;\n    e.open(\"HEAD\", t, !1);\n    try {\n        e.send();\n    } catch (n) {}\n    return e.status >= 200 && e.status <= 299;\n}\nfunction c(t) {\n    try {\n        t.dispatchEvent(new MouseEvent(\"click\"));\n    } catch (n) {\n        var e = document.createEvent(\"MouseEvents\");\n        e.initMouseEvent(\"click\", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), t.dispatchEvent(e);\n    }\n}\nvar l = i.saveAs || ( true ? function() {} : 0);\n/**\n * A class to parse color values\n * @author Stoyan Stefanov <sstoo@gmail.com>\n * {@link   http://www.phpied.com/rgb-color-parser-in-javascript/}\n * @license Use it if you like it\n */ function h(t) {\n    var e;\n    t = t || \"\", this.ok = !1, \"#\" == t.charAt(0) && (t = t.substr(1, 6)), t = ({\n        aliceblue: \"f0f8ff\",\n        antiquewhite: \"faebd7\",\n        aqua: \"00ffff\",\n        aquamarine: \"7fffd4\",\n        azure: \"f0ffff\",\n        beige: \"f5f5dc\",\n        bisque: \"ffe4c4\",\n        black: \"000000\",\n        blanchedalmond: \"ffebcd\",\n        blue: \"0000ff\",\n        blueviolet: \"8a2be2\",\n        brown: \"a52a2a\",\n        burlywood: \"deb887\",\n        cadetblue: \"5f9ea0\",\n        chartreuse: \"7fff00\",\n        chocolate: \"d2691e\",\n        coral: \"ff7f50\",\n        cornflowerblue: \"6495ed\",\n        cornsilk: \"fff8dc\",\n        crimson: \"dc143c\",\n        cyan: \"00ffff\",\n        darkblue: \"00008b\",\n        darkcyan: \"008b8b\",\n        darkgoldenrod: \"b8860b\",\n        darkgray: \"a9a9a9\",\n        darkgreen: \"006400\",\n        darkkhaki: \"bdb76b\",\n        darkmagenta: \"8b008b\",\n        darkolivegreen: \"556b2f\",\n        darkorange: \"ff8c00\",\n        darkorchid: \"9932cc\",\n        darkred: \"8b0000\",\n        darksalmon: \"e9967a\",\n        darkseagreen: \"8fbc8f\",\n        darkslateblue: \"483d8b\",\n        darkslategray: \"2f4f4f\",\n        darkturquoise: \"00ced1\",\n        darkviolet: \"9400d3\",\n        deeppink: \"ff1493\",\n        deepskyblue: \"00bfff\",\n        dimgray: \"696969\",\n        dodgerblue: \"1e90ff\",\n        feldspar: \"d19275\",\n        firebrick: \"b22222\",\n        floralwhite: \"fffaf0\",\n        forestgreen: \"228b22\",\n        fuchsia: \"ff00ff\",\n        gainsboro: \"dcdcdc\",\n        ghostwhite: \"f8f8ff\",\n        gold: \"ffd700\",\n        goldenrod: \"daa520\",\n        gray: \"808080\",\n        green: \"008000\",\n        greenyellow: \"adff2f\",\n        honeydew: \"f0fff0\",\n        hotpink: \"ff69b4\",\n        indianred: \"cd5c5c\",\n        indigo: \"4b0082\",\n        ivory: \"fffff0\",\n        khaki: \"f0e68c\",\n        lavender: \"e6e6fa\",\n        lavenderblush: \"fff0f5\",\n        lawngreen: \"7cfc00\",\n        lemonchiffon: \"fffacd\",\n        lightblue: \"add8e6\",\n        lightcoral: \"f08080\",\n        lightcyan: \"e0ffff\",\n        lightgoldenrodyellow: \"fafad2\",\n        lightgrey: \"d3d3d3\",\n        lightgreen: \"90ee90\",\n        lightpink: \"ffb6c1\",\n        lightsalmon: \"ffa07a\",\n        lightseagreen: \"20b2aa\",\n        lightskyblue: \"87cefa\",\n        lightslateblue: \"8470ff\",\n        lightslategray: \"778899\",\n        lightsteelblue: \"b0c4de\",\n        lightyellow: \"ffffe0\",\n        lime: \"00ff00\",\n        limegreen: \"32cd32\",\n        linen: \"faf0e6\",\n        magenta: \"ff00ff\",\n        maroon: \"800000\",\n        mediumaquamarine: \"66cdaa\",\n        mediumblue: \"0000cd\",\n        mediumorchid: \"ba55d3\",\n        mediumpurple: \"9370d8\",\n        mediumseagreen: \"3cb371\",\n        mediumslateblue: \"7b68ee\",\n        mediumspringgreen: \"00fa9a\",\n        mediumturquoise: \"48d1cc\",\n        mediumvioletred: \"c71585\",\n        midnightblue: \"191970\",\n        mintcream: \"f5fffa\",\n        mistyrose: \"ffe4e1\",\n        moccasin: \"ffe4b5\",\n        navajowhite: \"ffdead\",\n        navy: \"000080\",\n        oldlace: \"fdf5e6\",\n        olive: \"808000\",\n        olivedrab: \"6b8e23\",\n        orange: \"ffa500\",\n        orangered: \"ff4500\",\n        orchid: \"da70d6\",\n        palegoldenrod: \"eee8aa\",\n        palegreen: \"98fb98\",\n        paleturquoise: \"afeeee\",\n        palevioletred: \"d87093\",\n        papayawhip: \"ffefd5\",\n        peachpuff: \"ffdab9\",\n        peru: \"cd853f\",\n        pink: \"ffc0cb\",\n        plum: \"dda0dd\",\n        powderblue: \"b0e0e6\",\n        purple: \"800080\",\n        red: \"ff0000\",\n        rosybrown: \"bc8f8f\",\n        royalblue: \"4169e1\",\n        saddlebrown: \"8b4513\",\n        salmon: \"fa8072\",\n        sandybrown: \"f4a460\",\n        seagreen: \"2e8b57\",\n        seashell: \"fff5ee\",\n        sienna: \"a0522d\",\n        silver: \"c0c0c0\",\n        skyblue: \"87ceeb\",\n        slateblue: \"6a5acd\",\n        slategray: \"708090\",\n        snow: \"fffafa\",\n        springgreen: \"00ff7f\",\n        steelblue: \"4682b4\",\n        tan: \"d2b48c\",\n        teal: \"008080\",\n        thistle: \"d8bfd8\",\n        tomato: \"ff6347\",\n        turquoise: \"40e0d0\",\n        violet: \"ee82ee\",\n        violetred: \"d02090\",\n        wheat: \"f5deb3\",\n        white: \"ffffff\",\n        whitesmoke: \"f5f5f5\",\n        yellow: \"ffff00\",\n        yellowgreen: \"9acd32\"\n    })[t = (t = t.replace(/ /g, \"\")).toLowerCase()] || t;\n    for(var n = [\n        {\n            re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\n            example: [\n                \"rgb(123, 234, 45)\",\n                \"rgb(255,234,245)\"\n            ],\n            process: function(t) {\n                return [\n                    parseInt(t[1]),\n                    parseInt(t[2]),\n                    parseInt(t[3])\n                ];\n            }\n        },\n        {\n            re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n            example: [\n                \"#00ff00\",\n                \"336699\"\n            ],\n            process: function(t) {\n                return [\n                    parseInt(t[1], 16),\n                    parseInt(t[2], 16),\n                    parseInt(t[3], 16)\n                ];\n            }\n        },\n        {\n            re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n            example: [\n                \"#fb0\",\n                \"f0f\"\n            ],\n            process: function(t) {\n                return [\n                    parseInt(t[1] + t[1], 16),\n                    parseInt(t[2] + t[2], 16),\n                    parseInt(t[3] + t[3], 16)\n                ];\n            }\n        }\n    ], r = 0; r < n.length; r++){\n        var i = n[r].re, a = n[r].process, o = i.exec(t);\n        o && (e = a(o), this.r = e[0], this.g = e[1], this.b = e[2], this.ok = !0);\n    }\n    this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r, this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g, this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b, this.toRGB = function() {\n        return \"rgb(\" + this.r + \", \" + this.g + \", \" + this.b + \")\";\n    }, this.toHex = function() {\n        var t = this.r.toString(16), e = this.g.toString(16), n = this.b.toString(16);\n        return 1 == t.length && (t = \"0\" + t), 1 == e.length && (e = \"0\" + e), 1 == n.length && (n = \"0\" + n), \"#\" + t + e + n;\n    };\n}\nvar f = i.atob.bind(i), d = i.btoa.bind(i);\n/**\n * @license\n * Joseph Myers does not specify a particular license for his work.\n *\n * Author: Joseph Myers\n * Accessed from: http://www.myersdaily.org/joseph/javascript/md5.js\n *\n * Modified by: Owen Leong\n */ function p(t, e) {\n    var n = t[0], r = t[1], i = t[2], a = t[3];\n    n = m(n, r, i, a, e[0], 7, -680876936), a = m(a, n, r, i, e[1], 12, -389564586), i = m(i, a, n, r, e[2], 17, 606105819), r = m(r, i, a, n, e[3], 22, -1044525330), n = m(n, r, i, a, e[4], 7, -176418897), a = m(a, n, r, i, e[5], 12, 1200080426), i = m(i, a, n, r, e[6], 17, -1473231341), r = m(r, i, a, n, e[7], 22, -45705983), n = m(n, r, i, a, e[8], 7, 1770035416), a = m(a, n, r, i, e[9], 12, -1958414417), i = m(i, a, n, r, e[10], 17, -42063), r = m(r, i, a, n, e[11], 22, -1990404162), n = m(n, r, i, a, e[12], 7, 1804603682), a = m(a, n, r, i, e[13], 12, -40341101), i = m(i, a, n, r, e[14], 17, -1502002290), n = v(n, r = m(r, i, a, n, e[15], 22, 1236535329), i, a, e[1], 5, -165796510), a = v(a, n, r, i, e[6], 9, -1069501632), i = v(i, a, n, r, e[11], 14, 643717713), r = v(r, i, a, n, e[0], 20, -373897302), n = v(n, r, i, a, e[5], 5, -701558691), a = v(a, n, r, i, e[10], 9, 38016083), i = v(i, a, n, r, e[15], 14, -660478335), r = v(r, i, a, n, e[4], 20, -405537848), n = v(n, r, i, a, e[9], 5, 568446438), a = v(a, n, r, i, e[14], 9, -1019803690), i = v(i, a, n, r, e[3], 14, -187363961), r = v(r, i, a, n, e[8], 20, 1163531501), n = v(n, r, i, a, e[13], 5, -1444681467), a = v(a, n, r, i, e[2], 9, -51403784), i = v(i, a, n, r, e[7], 14, 1735328473), n = b(n, r = v(r, i, a, n, e[12], 20, -1926607734), i, a, e[5], 4, -378558), a = b(a, n, r, i, e[8], 11, -2022574463), i = b(i, a, n, r, e[11], 16, 1839030562), r = b(r, i, a, n, e[14], 23, -35309556), n = b(n, r, i, a, e[1], 4, -1530992060), a = b(a, n, r, i, e[4], 11, 1272893353), i = b(i, a, n, r, e[7], 16, -155497632), r = b(r, i, a, n, e[10], 23, -1094730640), n = b(n, r, i, a, e[13], 4, 681279174), a = b(a, n, r, i, e[0], 11, -358537222), i = b(i, a, n, r, e[3], 16, -722521979), r = b(r, i, a, n, e[6], 23, 76029189), n = b(n, r, i, a, e[9], 4, -640364487), a = b(a, n, r, i, e[12], 11, -421815835), i = b(i, a, n, r, e[15], 16, 530742520), n = y(n, r = b(r, i, a, n, e[2], 23, -995338651), i, a, e[0], 6, -198630844), a = y(a, n, r, i, e[7], 10, 1126891415), i = y(i, a, n, r, e[14], 15, -1416354905), r = y(r, i, a, n, e[5], 21, -57434055), n = y(n, r, i, a, e[12], 6, 1700485571), a = y(a, n, r, i, e[3], 10, -1894986606), i = y(i, a, n, r, e[10], 15, -1051523), r = y(r, i, a, n, e[1], 21, -2054922799), n = y(n, r, i, a, e[8], 6, 1873313359), a = y(a, n, r, i, e[15], 10, -30611744), i = y(i, a, n, r, e[6], 15, -1560198380), r = y(r, i, a, n, e[13], 21, 1309151649), n = y(n, r, i, a, e[4], 6, -145523070), a = y(a, n, r, i, e[11], 10, -1120210379), i = y(i, a, n, r, e[2], 15, 718787259), r = y(r, i, a, n, e[9], 21, -343485551), t[0] = P(n, t[0]), t[1] = P(r, t[1]), t[2] = P(i, t[2]), t[3] = P(a, t[3]);\n}\nfunction g(t, e, n, r, i, a) {\n    return e = P(P(e, t), P(r, a)), P(e << i | e >>> 32 - i, n);\n}\nfunction m(t, e, n, r, i, a, o) {\n    return g(e & n | ~e & r, t, e, i, a, o);\n}\nfunction v(t, e, n, r, i, a, o) {\n    return g(e & r | n & ~r, t, e, i, a, o);\n}\nfunction b(t, e, n, r, i, a, o) {\n    return g(e ^ n ^ r, t, e, i, a, o);\n}\nfunction y(t, e, n, r, i, a, o) {\n    return g(n ^ (e | ~r), t, e, i, a, o);\n}\nfunction w(t) {\n    var e, n = t.length, r = [\n        1732584193,\n        -271733879,\n        -1732584194,\n        271733878\n    ];\n    for(e = 64; e <= t.length; e += 64)p(r, N(t.substring(e - 64, e)));\n    t = t.substring(e - 64);\n    var i = [\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ];\n    for(e = 0; e < t.length; e++)i[e >> 2] |= t.charCodeAt(e) << (e % 4 << 3);\n    if (i[e >> 2] |= 128 << (e % 4 << 3), e > 55) for(p(r, i), e = 0; e < 16; e++)i[e] = 0;\n    return i[14] = 8 * n, p(r, i), r;\n}\nfunction N(t) {\n    var e, n = [];\n    for(e = 0; e < 64; e += 4)n[e >> 2] = t.charCodeAt(e) + (t.charCodeAt(e + 1) << 8) + (t.charCodeAt(e + 2) << 16) + (t.charCodeAt(e + 3) << 24);\n    return n;\n}\nvar L = \"0123456789abcdef\".split(\"\");\nfunction x(t) {\n    for(var e = \"\", n = 0; n < 4; n++)e += L[t >> 8 * n + 4 & 15] + L[t >> 8 * n & 15];\n    return e;\n}\nfunction A(t) {\n    return String.fromCharCode(255 & t, (65280 & t) >> 8, (16711680 & t) >> 16, (4278190080 & t) >> 24);\n}\nfunction S(t) {\n    return w(t).map(A).join(\"\");\n}\nvar _ = \"5d41402abc4b2a76b9719d911017c592\" != function(t) {\n    for(var e = 0; e < t.length; e++)t[e] = x(t[e]);\n    return t.join(\"\");\n}(w(\"hello\"));\nfunction P(t, e) {\n    if (_) {\n        var n = (65535 & t) + (65535 & e);\n        return (t >> 16) + (e >> 16) + (n >> 16) << 16 | 65535 & n;\n    }\n    return t + e & 4294967295;\n}\n/**\n * @license\n * FPDF is released under a permissive license: there is no usage restriction.\n * You may embed it freely in your application (commercial or not), with or\n * without modifications.\n *\n * Reference: http://www.fpdf.org/en/script/script37.php\n */ function k(t, e) {\n    var n, r, i, a;\n    if (t !== n) {\n        for(var o = (i = t, a = 1 + (256 / t.length | 0), new Array(a + 1).join(i)), s = [], u = 0; u < 256; u++)s[u] = u;\n        var c = 0;\n        for(u = 0; u < 256; u++){\n            var l = s[u];\n            c = (c + l + o.charCodeAt(u)) % 256, s[u] = s[c], s[c] = l;\n        }\n        n = t, r = s;\n    } else s = r;\n    var h = e.length, f = 0, d = 0, p = \"\";\n    for(u = 0; u < h; u++)d = (d + (l = s[f = (f + 1) % 256])) % 256, s[f] = s[d], s[d] = l, o = s[(s[f] + s[d]) % 256], p += String.fromCharCode(e.charCodeAt(u) ^ o);\n    return p;\n}\n/**\n * @license\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n * Author: Owen Leong (@owenl131)\n * Date: 15 Oct 2020\n * References:\n * https://www.cs.cmu.edu/~dst/Adobe/Gallery/anon21jul01-pdf-encryption.txt\n * https://github.com/foliojs/pdfkit/blob/master/lib/security.js\n * http://www.fpdf.org/en/script/script37.php\n */ var F = {\n    print: 4,\n    modify: 8,\n    copy: 16,\n    \"annot-forms\": 32\n};\nfunction I(t, e, n, r) {\n    this.v = 1, this.r = 2;\n    var i = 192;\n    t.forEach(function(t) {\n        if (void 0 !== F.perm) throw new Error(\"Invalid permission: \" + t);\n        i += F[t];\n    }), this.padding = \"(\\xbfN^Nu\\x8aAd\\x00NV\\xff\\xfa\\x01\\b..\\x00\\xb6\\xd0h>\\x80/\\f\\xa9\\xfedSiz\";\n    var a = (e + this.padding).substr(0, 32), o = (n + this.padding).substr(0, 32);\n    this.O = this.processOwnerPassword(a, o), this.P = -(1 + (255 ^ i)), this.encryptionKey = S(a + this.O + this.lsbFirstWord(this.P) + this.hexToBytes(r)).substr(0, 5), this.U = k(this.encryptionKey, this.padding);\n}\nfunction j(t) {\n    if (/[^\\u0000-\\u00ff]/.test(t)) throw new Error(\"Invalid PDF Name Object: \" + t + \", Only accept ASCII characters.\");\n    for(var e = \"\", n = t.length, r = 0; r < n; r++){\n        var i = t.charCodeAt(r);\n        e += i < 33 || 35 === i || 37 === i || 40 === i || 41 === i || 47 === i || 60 === i || 62 === i || 91 === i || 93 === i || 123 === i || 125 === i || i > 126 ? \"#\" + (\"0\" + i.toString(16)).slice(-2) : t[r];\n    }\n    return e;\n}\nfunction C(e) {\n    if (\"object\" !== _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e)) throw new Error(\"Invalid Context passed to initialize PubSub (jsPDF-module)\");\n    var n = {};\n    this.subscribe = function(t, e, r) {\n        if (r = r || !1, \"string\" != typeof t || \"function\" != typeof e || \"boolean\" != typeof r) throw new Error(\"Invalid arguments passed to PubSub.subscribe (jsPDF-module)\");\n        n.hasOwnProperty(t) || (n[t] = {});\n        var i = Math.random().toString(35);\n        return n[t][i] = [\n            e,\n            !!r\n        ], i;\n    }, this.unsubscribe = function(t) {\n        for(var e in n)if (n[e][t]) return delete n[e][t], 0 === Object.keys(n[e]).length && delete n[e], !0;\n        return !1;\n    }, this.publish = function(t) {\n        if (n.hasOwnProperty(t)) {\n            var r = Array.prototype.slice.call(arguments, 1), a = [];\n            for(var s in n[t]){\n                var u = n[t][s];\n                try {\n                    u[0].apply(e, r);\n                } catch (c) {\n                    i.console && o.error(\"jsPDF PubSub Error\", c.message, c);\n                }\n                u[1] && a.push(s);\n            }\n            a.length && a.forEach(this.unsubscribe);\n        }\n    }, this.getTopics = function() {\n        return n;\n    };\n}\nfunction O(t) {\n    if (!(this instanceof O)) return new O(t);\n    var e = \"opacity,stroke-opacity\".split(\",\");\n    for(var n in t)t.hasOwnProperty(n) && e.indexOf(n) >= 0 && (this[n] = t[n]);\n    this.id = \"\", this.objectNumber = -1;\n}\nfunction B(t, e) {\n    this.gState = t, this.matrix = e, this.id = \"\", this.objectNumber = -1;\n}\nfunction M(t, e, n, r, i) {\n    if (!(this instanceof M)) return new M(t, e, n, r, i);\n    this.type = \"axial\" === t ? 2 : 3, this.coords = e, this.colors = n, B.call(this, r, i);\n}\nfunction q(t, e, n, r, i) {\n    if (!(this instanceof q)) return new q(t, e, n, r, i);\n    this.boundingBox = t, this.xStep = e, this.yStep = n, this.stream = \"\", this.cloneIndex = 0, B.call(this, r, i);\n}\nfunction E(e) {\n    var n, r = \"string\" == typeof arguments[0] ? arguments[0] : \"p\", a = arguments[1], s = arguments[2], u = arguments[3], c = [], f = 1, p = 16, g = \"S\", m = null;\n    \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e = e || {}) && (r = e.orientation, a = e.unit || a, s = e.format || s, u = e.compress || e.compressPdf || u, null !== (m = e.encryption || null) && (m.userPassword = m.userPassword || \"\", m.ownerPassword = m.ownerPassword || \"\", m.userPermissions = m.userPermissions || []), f = \"number\" == typeof e.userUnit ? Math.abs(e.userUnit) : 1, void 0 !== e.precision && (n = e.precision), void 0 !== e.floatPrecision && (p = e.floatPrecision), g = e.defaultPathOperation || \"S\"), c = e.filters || (!0 === u ? [\n        \"FlateEncode\"\n    ] : c), a = a || \"mm\", r = (\"\" + (r || \"P\")).toLowerCase();\n    var v = e.putOnlyUsedFonts || !1, b = {}, y = {\n        internal: {},\n        __private__: {}\n    };\n    y.__private__.PubSub = C;\n    var w = \"1.3\", N = y.__private__.getPdfVersion = function() {\n        return w;\n    };\n    y.__private__.setPdfVersion = function(t) {\n        w = t;\n    };\n    var L = {\n        a0: [\n            2383.94,\n            3370.39\n        ],\n        a1: [\n            1683.78,\n            2383.94\n        ],\n        a2: [\n            1190.55,\n            1683.78\n        ],\n        a3: [\n            841.89,\n            1190.55\n        ],\n        a4: [\n            595.28,\n            841.89\n        ],\n        a5: [\n            419.53,\n            595.28\n        ],\n        a6: [\n            297.64,\n            419.53\n        ],\n        a7: [\n            209.76,\n            297.64\n        ],\n        a8: [\n            147.4,\n            209.76\n        ],\n        a9: [\n            104.88,\n            147.4\n        ],\n        a10: [\n            73.7,\n            104.88\n        ],\n        b0: [\n            2834.65,\n            4008.19\n        ],\n        b1: [\n            2004.09,\n            2834.65\n        ],\n        b2: [\n            1417.32,\n            2004.09\n        ],\n        b3: [\n            1000.63,\n            1417.32\n        ],\n        b4: [\n            708.66,\n            1000.63\n        ],\n        b5: [\n            498.9,\n            708.66\n        ],\n        b6: [\n            354.33,\n            498.9\n        ],\n        b7: [\n            249.45,\n            354.33\n        ],\n        b8: [\n            175.75,\n            249.45\n        ],\n        b9: [\n            124.72,\n            175.75\n        ],\n        b10: [\n            87.87,\n            124.72\n        ],\n        c0: [\n            2599.37,\n            3676.54\n        ],\n        c1: [\n            1836.85,\n            2599.37\n        ],\n        c2: [\n            1298.27,\n            1836.85\n        ],\n        c3: [\n            918.43,\n            1298.27\n        ],\n        c4: [\n            649.13,\n            918.43\n        ],\n        c5: [\n            459.21,\n            649.13\n        ],\n        c6: [\n            323.15,\n            459.21\n        ],\n        c7: [\n            229.61,\n            323.15\n        ],\n        c8: [\n            161.57,\n            229.61\n        ],\n        c9: [\n            113.39,\n            161.57\n        ],\n        c10: [\n            79.37,\n            113.39\n        ],\n        dl: [\n            311.81,\n            623.62\n        ],\n        letter: [\n            612,\n            792\n        ],\n        \"government-letter\": [\n            576,\n            756\n        ],\n        legal: [\n            612,\n            1008\n        ],\n        \"junior-legal\": [\n            576,\n            360\n        ],\n        ledger: [\n            1224,\n            792\n        ],\n        tabloid: [\n            792,\n            1224\n        ],\n        \"credit-card\": [\n            153,\n            243\n        ]\n    };\n    y.__private__.getPageFormats = function() {\n        return L;\n    };\n    var x = y.__private__.getPageFormat = function(t) {\n        return L[t];\n    };\n    s = s || \"a4\";\n    var A = \"compat\", S = \"advanced\", _ = A;\n    function P() {\n        this.saveGraphicsState(), lt(new Wt(St, 0, 0, -St, 0, _n() * St).toString() + \" cm\"), this.setFontSize(this.getFontSize() / St), g = \"n\", _ = S;\n    }\n    function k() {\n        this.restoreGraphicsState(), g = \"S\", _ = A;\n    }\n    var F = y.__private__.combineFontStyleAndFontWeight = function(t, e) {\n        if (\"bold\" == t && \"normal\" == e || \"bold\" == t && 400 == e || \"normal\" == t && \"italic\" == e || \"bold\" == t && \"italic\" == e) throw new Error(\"Invalid Combination of fontweight and fontstyle\");\n        return e && (t = 400 == e || \"normal\" === e ? \"italic\" === t ? \"italic\" : \"normal\" : 700 != e && \"bold\" !== e || \"normal\" !== t ? (700 == e ? \"bold\" : e) + \"\" + t : \"bold\"), t;\n    };\n    y.advancedAPI = function(t) {\n        var e = _ === A;\n        return e && P.call(this), \"function\" != typeof t || (t(this), e && k.call(this)), this;\n    }, y.compatAPI = function(t) {\n        var e = _ === S;\n        return e && k.call(this), \"function\" != typeof t || (t(this), e && P.call(this)), this;\n    }, y.isAdvancedAPI = function() {\n        return _ === S;\n    };\n    var B, R = function(t) {\n        if (_ !== S) throw new Error(t + \" is only available in 'advanced' API mode. You need to call advancedAPI() first.\");\n    }, D = y.roundToPrecision = y.__private__.roundToPrecision = function(t, e) {\n        var r = n || e;\n        if (isNaN(t) || isNaN(r)) throw new Error(\"Invalid argument passed to jsPDF.roundToPrecision\");\n        return t.toFixed(r).replace(/0+$/, \"\");\n    };\n    B = y.hpf = y.__private__.hpf = \"number\" == typeof p ? function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.hpf\");\n        return D(t, p);\n    } : \"smart\" === p ? function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.hpf\");\n        return D(t, t > -1 && t < 1 ? 16 : 5);\n    } : function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.hpf\");\n        return D(t, 16);\n    };\n    var T = y.f2 = y.__private__.f2 = function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.f2\");\n        return D(t, 2);\n    }, z = y.__private__.f3 = function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.f3\");\n        return D(t, 3);\n    }, U = y.scale = y.__private__.scale = function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.scale\");\n        return _ === A ? t * St : _ === S ? t : void 0;\n    }, H = function(t) {\n        return U(function(t) {\n            return _ === A ? _n() - t : _ === S ? t : void 0;\n        }(t));\n    };\n    y.__private__.setPrecision = y.setPrecision = function(t) {\n        \"number\" == typeof parseInt(t, 10) && (n = parseInt(t, 10));\n    };\n    var W, V = \"00000000000000000000000000000000\", G = y.__private__.getFileId = function() {\n        return V;\n    }, Y = y.__private__.setFileId = function(t) {\n        return V = void 0 !== t && /^[a-fA-F0-9]{32}$/.test(t) ? t.toUpperCase() : V.split(\"\").map(function() {\n            return \"ABCDEF0123456789\".charAt(Math.floor(16 * Math.random()));\n        }).join(\"\"), null !== m && (je = new I(m.userPermissions, m.userPassword, m.ownerPassword, V)), V;\n    };\n    y.setFileId = function(t) {\n        return Y(t), this;\n    }, y.getFileId = function() {\n        return G();\n    };\n    var J = y.__private__.convertDateToPDFDate = function(t) {\n        var e = t.getTimezoneOffset(), n = e < 0 ? \"+\" : \"-\", r = Math.floor(Math.abs(e / 60)), i = Math.abs(e % 60), a = [\n            n,\n            Q(r),\n            \"'\",\n            Q(i),\n            \"'\"\n        ].join(\"\");\n        return [\n            \"D:\",\n            t.getFullYear(),\n            Q(t.getMonth() + 1),\n            Q(t.getDate()),\n            Q(t.getHours()),\n            Q(t.getMinutes()),\n            Q(t.getSeconds()),\n            a\n        ].join(\"\");\n    }, X = y.__private__.convertPDFDateToDate = function(t) {\n        var e = parseInt(t.substr(2, 4), 10), n = parseInt(t.substr(6, 2), 10) - 1, r = parseInt(t.substr(8, 2), 10), i = parseInt(t.substr(10, 2), 10), a = parseInt(t.substr(12, 2), 10), o = parseInt(t.substr(14, 2), 10);\n        return new Date(e, n, r, i, a, o, 0);\n    }, K = y.__private__.setCreationDate = function(t) {\n        var e;\n        if (void 0 === t && (t = new Date), t instanceof Date) e = J(t);\n        else {\n            if (!/^D:(20[0-2][0-9]|203[0-7]|19[7-9][0-9])(0[0-9]|1[0-2])([0-2][0-9]|3[0-1])(0[0-9]|1[0-9]|2[0-3])(0[0-9]|[1-5][0-9])(0[0-9]|[1-5][0-9])(\\+0[0-9]|\\+1[0-4]|-0[0-9]|-1[0-1])'(0[0-9]|[1-5][0-9])'?$/.test(t)) throw new Error(\"Invalid argument passed to jsPDF.setCreationDate\");\n            e = t;\n        }\n        return W = e;\n    }, Z = y.__private__.getCreationDate = function(t) {\n        var e = W;\n        return \"jsDate\" === t && (e = X(W)), e;\n    };\n    y.setCreationDate = function(t) {\n        return K(t), this;\n    }, y.getCreationDate = function(t) {\n        return Z(t);\n    };\n    var $, Q = y.__private__.padd2 = function(t) {\n        return (\"0\" + parseInt(t)).slice(-2);\n    }, tt = y.__private__.padd2Hex = function(t) {\n        return (\"00\" + (t = t.toString())).substr(t.length);\n    }, et = 0, nt = [], rt = [], it = 0, at = [], ot = [], st = !1, ut = rt;\n    y.__private__.setCustomOutputDestination = function(t) {\n        st = !0, ut = t;\n    };\n    var ct = function(t) {\n        st || (ut = t);\n    };\n    y.__private__.resetCustomOutputDestination = function() {\n        st = !1, ut = rt;\n    };\n    var lt = y.__private__.out = function(t) {\n        return t = t.toString(), it += t.length + 1, ut.push(t), ut;\n    }, ht = y.__private__.write = function(t) {\n        return lt(1 === arguments.length ? t.toString() : Array.prototype.join.call(arguments, \" \"));\n    }, ft = y.__private__.getArrayBuffer = function(t) {\n        for(var e = t.length, n = new ArrayBuffer(e), r = new Uint8Array(n); e--;)r[e] = t.charCodeAt(e);\n        return n;\n    }, dt = [\n        [\n            \"Helvetica\",\n            \"helvetica\",\n            \"normal\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Helvetica-Bold\",\n            \"helvetica\",\n            \"bold\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Helvetica-Oblique\",\n            \"helvetica\",\n            \"italic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Helvetica-BoldOblique\",\n            \"helvetica\",\n            \"bolditalic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Courier\",\n            \"courier\",\n            \"normal\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Courier-Bold\",\n            \"courier\",\n            \"bold\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Courier-Oblique\",\n            \"courier\",\n            \"italic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Courier-BoldOblique\",\n            \"courier\",\n            \"bolditalic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Times-Roman\",\n            \"times\",\n            \"normal\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Times-Bold\",\n            \"times\",\n            \"bold\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Times-Italic\",\n            \"times\",\n            \"italic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"Times-BoldItalic\",\n            \"times\",\n            \"bolditalic\",\n            \"WinAnsiEncoding\"\n        ],\n        [\n            \"ZapfDingbats\",\n            \"zapfdingbats\",\n            \"normal\",\n            null\n        ],\n        [\n            \"Symbol\",\n            \"symbol\",\n            \"normal\",\n            null\n        ]\n    ];\n    y.__private__.getStandardFonts = function() {\n        return dt;\n    };\n    var pt = e.fontSize || 16;\n    y.__private__.setFontSize = y.setFontSize = function(t) {\n        return pt = _ === S ? t / St : t, this;\n    };\n    var gt, mt = y.__private__.getFontSize = y.getFontSize = function() {\n        return _ === A ? pt : pt * St;\n    }, vt = e.R2L || !1;\n    y.__private__.setR2L = y.setR2L = function(t) {\n        return vt = t, this;\n    }, y.__private__.getR2L = y.getR2L = function() {\n        return vt;\n    };\n    var bt, yt = y.__private__.setZoomMode = function(t) {\n        if (/^(?:\\d+\\.\\d*|\\d*\\.\\d+|\\d+)%$/.test(t)) gt = t;\n        else if (isNaN(t)) {\n            if (-1 === [\n                void 0,\n                null,\n                \"fullwidth\",\n                \"fullheight\",\n                \"fullpage\",\n                \"original\"\n            ].indexOf(t)) throw new Error('zoom must be Integer (e.g. 2), a percentage Value (e.g. 300%) or fullwidth, fullheight, fullpage, original. \"' + t + '\" is not recognized.');\n            gt = t;\n        } else gt = parseInt(t, 10);\n    };\n    y.__private__.getZoomMode = function() {\n        return gt;\n    };\n    var wt, Nt = y.__private__.setPageMode = function(t) {\n        if (-1 == [\n            void 0,\n            null,\n            \"UseNone\",\n            \"UseOutlines\",\n            \"UseThumbs\",\n            \"FullScreen\"\n        ].indexOf(t)) throw new Error('Page mode must be one of UseNone, UseOutlines, UseThumbs, or FullScreen. \"' + t + '\" is not recognized.');\n        bt = t;\n    };\n    y.__private__.getPageMode = function() {\n        return bt;\n    };\n    var Lt = y.__private__.setLayoutMode = function(t) {\n        if (-1 == [\n            void 0,\n            null,\n            \"continuous\",\n            \"single\",\n            \"twoleft\",\n            \"tworight\",\n            \"two\"\n        ].indexOf(t)) throw new Error('Layout mode must be one of continuous, single, twoleft, tworight. \"' + t + '\" is not recognized.');\n        wt = t;\n    };\n    y.__private__.getLayoutMode = function() {\n        return wt;\n    }, y.__private__.setDisplayMode = y.setDisplayMode = function(t, e, n) {\n        return yt(t), Lt(e), Nt(n), this;\n    };\n    var xt = {\n        title: \"\",\n        subject: \"\",\n        author: \"\",\n        keywords: \"\",\n        creator: \"\"\n    };\n    y.__private__.getDocumentProperty = function(t) {\n        if (-1 === Object.keys(xt).indexOf(t)) throw new Error(\"Invalid argument passed to jsPDF.getDocumentProperty\");\n        return xt[t];\n    }, y.__private__.getDocumentProperties = function() {\n        return xt;\n    }, y.__private__.setDocumentProperties = y.setProperties = y.setDocumentProperties = function(t) {\n        for(var e in xt)xt.hasOwnProperty(e) && t[e] && (xt[e] = t[e]);\n        return this;\n    }, y.__private__.setDocumentProperty = function(t, e) {\n        if (-1 === Object.keys(xt).indexOf(t)) throw new Error(\"Invalid arguments passed to jsPDF.setDocumentProperty\");\n        return xt[t] = e;\n    };\n    var At, St, _t, Pt, kt, Ft = {}, It = {}, jt = [], Ct = {}, Ot = {}, Bt = {}, Mt = {}, qt = null, Et = 0, Rt = [], Dt = new C(y), Tt = e.hotfixes || [], zt = {}, Ut = {}, Ht = [], Wt = function t(e, n, r, i, a, o) {\n        if (!(this instanceof t)) return new t(e, n, r, i, a, o);\n        isNaN(e) && (e = 1), isNaN(n) && (n = 0), isNaN(r) && (r = 0), isNaN(i) && (i = 1), isNaN(a) && (a = 0), isNaN(o) && (o = 0), this._matrix = [\n            e,\n            n,\n            r,\n            i,\n            a,\n            o\n        ];\n    };\n    Object.defineProperty(Wt.prototype, \"sx\", {\n        get: function() {\n            return this._matrix[0];\n        },\n        set: function(t) {\n            this._matrix[0] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"shy\", {\n        get: function() {\n            return this._matrix[1];\n        },\n        set: function(t) {\n            this._matrix[1] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"shx\", {\n        get: function() {\n            return this._matrix[2];\n        },\n        set: function(t) {\n            this._matrix[2] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"sy\", {\n        get: function() {\n            return this._matrix[3];\n        },\n        set: function(t) {\n            this._matrix[3] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"tx\", {\n        get: function() {\n            return this._matrix[4];\n        },\n        set: function(t) {\n            this._matrix[4] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"ty\", {\n        get: function() {\n            return this._matrix[5];\n        },\n        set: function(t) {\n            this._matrix[5] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"a\", {\n        get: function() {\n            return this._matrix[0];\n        },\n        set: function(t) {\n            this._matrix[0] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"b\", {\n        get: function() {\n            return this._matrix[1];\n        },\n        set: function(t) {\n            this._matrix[1] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"c\", {\n        get: function() {\n            return this._matrix[2];\n        },\n        set: function(t) {\n            this._matrix[2] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"d\", {\n        get: function() {\n            return this._matrix[3];\n        },\n        set: function(t) {\n            this._matrix[3] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"e\", {\n        get: function() {\n            return this._matrix[4];\n        },\n        set: function(t) {\n            this._matrix[4] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"f\", {\n        get: function() {\n            return this._matrix[5];\n        },\n        set: function(t) {\n            this._matrix[5] = t;\n        }\n    }), Object.defineProperty(Wt.prototype, \"rotation\", {\n        get: function() {\n            return Math.atan2(this.shx, this.sx);\n        }\n    }), Object.defineProperty(Wt.prototype, \"scaleX\", {\n        get: function() {\n            return this.decompose().scale.sx;\n        }\n    }), Object.defineProperty(Wt.prototype, \"scaleY\", {\n        get: function() {\n            return this.decompose().scale.sy;\n        }\n    }), Object.defineProperty(Wt.prototype, \"isIdentity\", {\n        get: function() {\n            return 1 === this.sx && 0 === this.shy && 0 === this.shx && 1 === this.sy && 0 === this.tx && 0 === this.ty;\n        }\n    }), Wt.prototype.join = function(t) {\n        return [\n            this.sx,\n            this.shy,\n            this.shx,\n            this.sy,\n            this.tx,\n            this.ty\n        ].map(B).join(t);\n    }, Wt.prototype.multiply = function(t) {\n        var e = t.sx * this.sx + t.shy * this.shx, n = t.sx * this.shy + t.shy * this.sy, r = t.shx * this.sx + t.sy * this.shx, i = t.shx * this.shy + t.sy * this.sy, a = t.tx * this.sx + t.ty * this.shx + this.tx, o = t.tx * this.shy + t.ty * this.sy + this.ty;\n        return new Wt(e, n, r, i, a, o);\n    }, Wt.prototype.decompose = function() {\n        var t = this.sx, e = this.shy, n = this.shx, r = this.sy, i = this.tx, a = this.ty, o = Math.sqrt(t * t + e * e), s = (t /= o) * n + (e /= o) * r;\n        n -= t * s, r -= e * s;\n        var u = Math.sqrt(n * n + r * r);\n        return s /= u, t * (r /= u) < e * (n /= u) && (t = -t, e = -e, s = -s, o = -o), {\n            scale: new Wt(o, 0, 0, u, 0, 0),\n            translate: new Wt(1, 0, 0, 1, i, a),\n            rotate: new Wt(t, e, -e, t, 0, 0),\n            skew: new Wt(1, 0, s, 1, 0, 0)\n        };\n    }, Wt.prototype.toString = function(t) {\n        return this.join(\" \");\n    }, Wt.prototype.inversed = function() {\n        var t = this.sx, e = this.shy, n = this.shx, r = this.sy, i = this.tx, a = this.ty, o = 1 / (t * r - e * n), s = r * o, u = -e * o, c = -n * o, l = t * o;\n        return new Wt(s, u, c, l, -s * i - c * a, -u * i - l * a);\n    }, Wt.prototype.applyToPoint = function(t) {\n        var e = t.x * this.sx + t.y * this.shx + this.tx, n = t.x * this.shy + t.y * this.sy + this.ty;\n        return new gn(e, n);\n    }, Wt.prototype.applyToRectangle = function(t) {\n        var e = this.applyToPoint(t), n = this.applyToPoint(new gn(t.x + t.w, t.y + t.h));\n        return new mn(e.x, e.y, n.x - e.x, n.y - e.y);\n    }, Wt.prototype.clone = function() {\n        var t = this.sx, e = this.shy, n = this.shx, r = this.sy, i = this.tx, a = this.ty;\n        return new Wt(t, e, n, r, i, a);\n    }, y.Matrix = Wt;\n    var Vt = y.matrixMult = function(t, e) {\n        return e.multiply(t);\n    }, Gt = new Wt(1, 0, 0, 1, 0, 0);\n    y.unitMatrix = y.identityMatrix = Gt;\n    var Yt = function(t, e) {\n        if (!Ot[t]) {\n            var n = (e instanceof M ? \"Sh\" : \"P\") + (Object.keys(Ct).length + 1).toString(10);\n            e.id = n, Ot[t] = n, Ct[n] = e, Dt.publish(\"addPattern\", e);\n        }\n    };\n    y.ShadingPattern = M, y.TilingPattern = q, y.addShadingPattern = function(t, e) {\n        return R(\"addShadingPattern()\"), Yt(t, e), this;\n    }, y.beginTilingPattern = function(t) {\n        R(\"beginTilingPattern()\"), bn(t.boundingBox[0], t.boundingBox[1], t.boundingBox[2] - t.boundingBox[0], t.boundingBox[3] - t.boundingBox[1], t.matrix);\n    }, y.endTilingPattern = function(t, e) {\n        R(\"endTilingPattern()\"), e.stream = ot[$].join(\"\\n\"), Yt(t, e), Dt.publish(\"endTilingPattern\", e), Ht.pop().restore();\n    };\n    var Jt, Xt = y.__private__.newObject = function() {\n        var t = Kt();\n        return Zt(t, !0), t;\n    }, Kt = y.__private__.newObjectDeferred = function() {\n        return et++, nt[et] = function() {\n            return it;\n        }, et;\n    }, Zt = function(t, e) {\n        return e = \"boolean\" == typeof e && e, nt[t] = it, e && lt(t + \" 0 obj\"), t;\n    }, $t = y.__private__.newAdditionalObject = function() {\n        var t = {\n            objId: Kt(),\n            content: \"\"\n        };\n        return at.push(t), t;\n    }, Qt = Kt(), te = Kt(), ee = y.__private__.decodeColorString = function(t) {\n        var e = t.split(\" \");\n        if (2 !== e.length || \"g\" !== e[1] && \"G\" !== e[1]) 5 !== e.length || \"k\" !== e[4] && \"K\" !== e[4] || (e = [\n            (1 - e[0]) * (1 - e[3]),\n            (1 - e[1]) * (1 - e[3]),\n            (1 - e[2]) * (1 - e[3]),\n            \"r\"\n        ]);\n        else {\n            var n = parseFloat(e[0]);\n            e = [\n                n,\n                n,\n                n,\n                \"r\"\n            ];\n        }\n        for(var r = \"#\", i = 0; i < 3; i++)r += (\"0\" + Math.floor(255 * parseFloat(e[i])).toString(16)).slice(-2);\n        return r;\n    }, ne = y.__private__.encodeColorString = function(e) {\n        var n;\n        \"string\" == typeof e && (e = {\n            ch1: e\n        });\n        var r = e.ch1, i = e.ch2, a = e.ch3, o = e.ch4, s = \"draw\" === e.pdfColorType ? [\n            \"G\",\n            \"RG\",\n            \"K\"\n        ] : [\n            \"g\",\n            \"rg\",\n            \"k\"\n        ];\n        if (\"string\" == typeof r && \"#\" !== r.charAt(0)) {\n            var u = new h(r);\n            if (u.ok) r = u.toHex();\n            else if (!/^\\d*\\.?\\d*$/.test(r)) throw new Error('Invalid color \"' + r + '\" passed to jsPDF.encodeColorString.');\n        }\n        if (\"string\" == typeof r && /^#[0-9A-Fa-f]{3}$/.test(r) && (r = \"#\" + r[1] + r[1] + r[2] + r[2] + r[3] + r[3]), \"string\" == typeof r && /^#[0-9A-Fa-f]{6}$/.test(r)) {\n            var c = parseInt(r.substr(1), 16);\n            r = c >> 16 & 255, i = c >> 8 & 255, a = 255 & c;\n        }\n        if (void 0 === i || void 0 === o && r === i && i === a) n = \"string\" == typeof r ? r + \" \" + s[0] : 2 === e.precision ? T(r / 255) + \" \" + s[0] : z(r / 255) + \" \" + s[0];\n        else if (void 0 === o || \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(o)) {\n            if (o && !isNaN(o.a) && 0 === o.a) return [\n                \"1.\",\n                \"1.\",\n                \"1.\",\n                s[1]\n            ].join(\" \");\n            n = \"string\" == typeof r ? [\n                r,\n                i,\n                a,\n                s[1]\n            ].join(\" \") : 2 === e.precision ? [\n                T(r / 255),\n                T(i / 255),\n                T(a / 255),\n                s[1]\n            ].join(\" \") : [\n                z(r / 255),\n                z(i / 255),\n                z(a / 255),\n                s[1]\n            ].join(\" \");\n        } else n = \"string\" == typeof r ? [\n            r,\n            i,\n            a,\n            o,\n            s[2]\n        ].join(\" \") : 2 === e.precision ? [\n            T(r),\n            T(i),\n            T(a),\n            T(o),\n            s[2]\n        ].join(\" \") : [\n            z(r),\n            z(i),\n            z(a),\n            z(o),\n            s[2]\n        ].join(\" \");\n        return n;\n    }, re = y.__private__.getFilters = function() {\n        return c;\n    }, ie = y.__private__.putStream = function(t) {\n        var e = (t = t || {}).data || \"\", n = t.filters || re(), r = t.alreadyAppliedFilters || [], i = t.addLength1 || !1, a = e.length, o = t.objectId, s = function(t) {\n            return t;\n        };\n        if (null !== m && void 0 === o) throw new Error(\"ObjectId must be passed to putStream for file encryption\");\n        null !== m && (s = je.encryptor(o, 0));\n        var u = {};\n        !0 === n && (n = [\n            \"FlateEncode\"\n        ]);\n        var c = t.additionalKeyValues || [], l = (u = void 0 !== E.API.processDataByFilters ? E.API.processDataByFilters(e, n) : {\n            data: e,\n            reverseChain: []\n        }).reverseChain + (Array.isArray(r) ? r.join(\" \") : r.toString());\n        if (0 !== u.data.length && (c.push({\n            key: \"Length\",\n            value: u.data.length\n        }), !0 === i && c.push({\n            key: \"Length1\",\n            value: a\n        })), 0 != l.length) if (l.split(\"/\").length - 1 == 1) c.push({\n            key: \"Filter\",\n            value: l\n        });\n        else {\n            c.push({\n                key: \"Filter\",\n                value: \"[\" + l + \"]\"\n            });\n            for(var h = 0; h < c.length; h += 1)if (\"DecodeParms\" === c[h].key) {\n                for(var f = [], d = 0; d < u.reverseChain.split(\"/\").length - 1; d += 1)f.push(\"null\");\n                f.push(c[h].value), c[h].value = \"[\" + f.join(\" \") + \"]\";\n            }\n        }\n        lt(\"<<\");\n        for(var p = 0; p < c.length; p++)lt(\"/\" + c[p].key + \" \" + c[p].value);\n        lt(\">>\"), 0 !== u.data.length && (lt(\"stream\"), lt(s(u.data)), lt(\"endstream\"));\n    }, ae = y.__private__.putPage = function(t) {\n        var e = t.number, n = t.data, r = t.objId, i = t.contentsObjId;\n        Zt(r, !0), lt(\"<</Type /Page\"), lt(\"/Parent \" + t.rootDictionaryObjId + \" 0 R\"), lt(\"/Resources \" + t.resourceDictionaryObjId + \" 0 R\"), lt(\"/MediaBox [\" + parseFloat(B(t.mediaBox.bottomLeftX)) + \" \" + parseFloat(B(t.mediaBox.bottomLeftY)) + \" \" + B(t.mediaBox.topRightX) + \" \" + B(t.mediaBox.topRightY) + \"]\"), null !== t.cropBox && lt(\"/CropBox [\" + B(t.cropBox.bottomLeftX) + \" \" + B(t.cropBox.bottomLeftY) + \" \" + B(t.cropBox.topRightX) + \" \" + B(t.cropBox.topRightY) + \"]\"), null !== t.bleedBox && lt(\"/BleedBox [\" + B(t.bleedBox.bottomLeftX) + \" \" + B(t.bleedBox.bottomLeftY) + \" \" + B(t.bleedBox.topRightX) + \" \" + B(t.bleedBox.topRightY) + \"]\"), null !== t.trimBox && lt(\"/TrimBox [\" + B(t.trimBox.bottomLeftX) + \" \" + B(t.trimBox.bottomLeftY) + \" \" + B(t.trimBox.topRightX) + \" \" + B(t.trimBox.topRightY) + \"]\"), null !== t.artBox && lt(\"/ArtBox [\" + B(t.artBox.bottomLeftX) + \" \" + B(t.artBox.bottomLeftY) + \" \" + B(t.artBox.topRightX) + \" \" + B(t.artBox.topRightY) + \"]\"), \"number\" == typeof t.userUnit && 1 !== t.userUnit && lt(\"/UserUnit \" + t.userUnit), Dt.publish(\"putPage\", {\n            objId: r,\n            pageContext: Rt[e],\n            pageNumber: e,\n            page: n\n        }), lt(\"/Contents \" + i + \" 0 R\"), lt(\">>\"), lt(\"endobj\");\n        var a = n.join(\"\\n\");\n        return _ === S && (a += \"\\nQ\"), Zt(i, !0), ie({\n            data: a,\n            filters: re(),\n            objectId: i\n        }), lt(\"endobj\"), r;\n    }, oe = y.__private__.putPages = function() {\n        var t, e, n = [];\n        for(t = 1; t <= Et; t++)Rt[t].objId = Kt(), Rt[t].contentsObjId = Kt();\n        for(t = 1; t <= Et; t++)n.push(ae({\n            number: t,\n            data: ot[t],\n            objId: Rt[t].objId,\n            contentsObjId: Rt[t].contentsObjId,\n            mediaBox: Rt[t].mediaBox,\n            cropBox: Rt[t].cropBox,\n            bleedBox: Rt[t].bleedBox,\n            trimBox: Rt[t].trimBox,\n            artBox: Rt[t].artBox,\n            userUnit: Rt[t].userUnit,\n            rootDictionaryObjId: Qt,\n            resourceDictionaryObjId: te\n        }));\n        Zt(Qt, !0), lt(\"<</Type /Pages\");\n        var r = \"/Kids [\";\n        for(e = 0; e < Et; e++)r += n[e] + \" 0 R \";\n        lt(r + \"]\"), lt(\"/Count \" + Et), lt(\">>\"), lt(\"endobj\"), Dt.publish(\"postPutPages\");\n    }, se = function(t) {\n        Dt.publish(\"putFont\", {\n            font: t,\n            out: lt,\n            newObject: Xt,\n            putStream: ie\n        }), !0 !== t.isAlreadyPutted && (t.objectNumber = Xt(), lt(\"<<\"), lt(\"/Type /Font\"), lt(\"/BaseFont /\" + j(t.postScriptName)), lt(\"/Subtype /Type1\"), \"string\" == typeof t.encoding && lt(\"/Encoding /\" + t.encoding), lt(\"/FirstChar 32\"), lt(\"/LastChar 255\"), lt(\">>\"), lt(\"endobj\"));\n    }, ue = function(t) {\n        t.objectNumber = Xt();\n        var e = [];\n        e.push({\n            key: \"Type\",\n            value: \"/XObject\"\n        }), e.push({\n            key: \"Subtype\",\n            value: \"/Form\"\n        }), e.push({\n            key: \"BBox\",\n            value: \"[\" + [\n                B(t.x),\n                B(t.y),\n                B(t.x + t.width),\n                B(t.y + t.height)\n            ].join(\" \") + \"]\"\n        }), e.push({\n            key: \"Matrix\",\n            value: \"[\" + t.matrix.toString() + \"]\"\n        });\n        var n = t.pages[1].join(\"\\n\");\n        ie({\n            data: n,\n            additionalKeyValues: e,\n            objectId: t.objectNumber\n        }), lt(\"endobj\");\n    }, ce = function(t, e) {\n        e || (e = 21);\n        var n = Xt(), r = function(t, e) {\n            var n, r = [], i = 1 / (e - 1);\n            for(n = 0; n < 1; n += i)r.push(n);\n            if (r.push(1), 0 != t[0].offset) {\n                var a = {\n                    offset: 0,\n                    color: t[0].color\n                };\n                t.unshift(a);\n            }\n            if (1 != t[t.length - 1].offset) {\n                var o = {\n                    offset: 1,\n                    color: t[t.length - 1].color\n                };\n                t.push(o);\n            }\n            for(var s = \"\", u = 0, c = 0; c < r.length; c++){\n                for(n = r[c]; n > t[u + 1].offset;)u++;\n                var l = t[u].offset, h = (n - l) / (t[u + 1].offset - l), f = t[u].color, d = t[u + 1].color;\n                s += tt(Math.round((1 - h) * f[0] + h * d[0]).toString(16)) + tt(Math.round((1 - h) * f[1] + h * d[1]).toString(16)) + tt(Math.round((1 - h) * f[2] + h * d[2]).toString(16));\n            }\n            return s.trim();\n        }(t.colors, e), i = [];\n        i.push({\n            key: \"FunctionType\",\n            value: \"0\"\n        }), i.push({\n            key: \"Domain\",\n            value: \"[0.0 1.0]\"\n        }), i.push({\n            key: \"Size\",\n            value: \"[\" + e + \"]\"\n        }), i.push({\n            key: \"BitsPerSample\",\n            value: \"8\"\n        }), i.push({\n            key: \"Range\",\n            value: \"[0.0 1.0 0.0 1.0 0.0 1.0]\"\n        }), i.push({\n            key: \"Decode\",\n            value: \"[0.0 1.0 0.0 1.0 0.0 1.0]\"\n        }), ie({\n            data: r,\n            additionalKeyValues: i,\n            alreadyAppliedFilters: [\n                \"/ASCIIHexDecode\"\n            ],\n            objectId: n\n        }), lt(\"endobj\"), t.objectNumber = Xt(), lt(\"<< /ShadingType \" + t.type), lt(\"/ColorSpace /DeviceRGB\");\n        var a = \"/Coords [\" + B(parseFloat(t.coords[0])) + \" \" + B(parseFloat(t.coords[1])) + \" \";\n        2 === t.type ? a += B(parseFloat(t.coords[2])) + \" \" + B(parseFloat(t.coords[3])) : a += B(parseFloat(t.coords[2])) + \" \" + B(parseFloat(t.coords[3])) + \" \" + B(parseFloat(t.coords[4])) + \" \" + B(parseFloat(t.coords[5])), lt(a += \"]\"), t.matrix && lt(\"/Matrix [\" + t.matrix.toString() + \"]\"), lt(\"/Function \" + n + \" 0 R\"), lt(\"/Extend [true true]\"), lt(\">>\"), lt(\"endobj\");\n    }, le = function(t, e) {\n        var n = Kt(), r = Xt();\n        e.push({\n            resourcesOid: n,\n            objectOid: r\n        }), t.objectNumber = r;\n        var i = [];\n        i.push({\n            key: \"Type\",\n            value: \"/Pattern\"\n        }), i.push({\n            key: \"PatternType\",\n            value: \"1\"\n        }), i.push({\n            key: \"PaintType\",\n            value: \"1\"\n        }), i.push({\n            key: \"TilingType\",\n            value: \"1\"\n        }), i.push({\n            key: \"BBox\",\n            value: \"[\" + t.boundingBox.map(B).join(\" \") + \"]\"\n        }), i.push({\n            key: \"XStep\",\n            value: B(t.xStep)\n        }), i.push({\n            key: \"YStep\",\n            value: B(t.yStep)\n        }), i.push({\n            key: \"Resources\",\n            value: n + \" 0 R\"\n        }), t.matrix && i.push({\n            key: \"Matrix\",\n            value: \"[\" + t.matrix.toString() + \"]\"\n        }), ie({\n            data: t.stream,\n            additionalKeyValues: i,\n            objectId: t.objectNumber\n        }), lt(\"endobj\");\n    }, he = function(t) {\n        for(var e in t.objectNumber = Xt(), lt(\"<<\"), t)switch(e){\n            case \"opacity\":\n                lt(\"/ca \" + T(t[e]));\n                break;\n            case \"stroke-opacity\":\n                lt(\"/CA \" + T(t[e]));\n        }\n        lt(\">>\"), lt(\"endobj\");\n    }, fe = function(t) {\n        Zt(t.resourcesOid, !0), lt(\"<<\"), lt(\"/ProcSet [/PDF /Text /ImageB /ImageC /ImageI]\"), function() {\n            for(var t in lt(\"/Font <<\"), Ft)Ft.hasOwnProperty(t) && (!1 === v || !0 === v && b.hasOwnProperty(t)) && lt(\"/\" + t + \" \" + Ft[t].objectNumber + \" 0 R\");\n            lt(\">>\");\n        }(), function() {\n            if (Object.keys(Ct).length > 0) {\n                for(var t in lt(\"/Shading <<\"), Ct)Ct.hasOwnProperty(t) && Ct[t] instanceof M && Ct[t].objectNumber >= 0 && lt(\"/\" + t + \" \" + Ct[t].objectNumber + \" 0 R\");\n                Dt.publish(\"putShadingPatternDict\"), lt(\">>\");\n            }\n        }(), function(t) {\n            if (Object.keys(Ct).length > 0) {\n                for(var e in lt(\"/Pattern <<\"), Ct)Ct.hasOwnProperty(e) && Ct[e] instanceof y.TilingPattern && Ct[e].objectNumber >= 0 && Ct[e].objectNumber < t && lt(\"/\" + e + \" \" + Ct[e].objectNumber + \" 0 R\");\n                Dt.publish(\"putTilingPatternDict\"), lt(\">>\");\n            }\n        }(t.objectOid), function() {\n            if (Object.keys(Bt).length > 0) {\n                var t;\n                for(t in lt(\"/ExtGState <<\"), Bt)Bt.hasOwnProperty(t) && Bt[t].objectNumber >= 0 && lt(\"/\" + t + \" \" + Bt[t].objectNumber + \" 0 R\");\n                Dt.publish(\"putGStateDict\"), lt(\">>\");\n            }\n        }(), function() {\n            for(var t in lt(\"/XObject <<\"), zt)zt.hasOwnProperty(t) && zt[t].objectNumber >= 0 && lt(\"/\" + t + \" \" + zt[t].objectNumber + \" 0 R\");\n            Dt.publish(\"putXobjectDict\"), lt(\">>\");\n        }(), lt(\">>\"), lt(\"endobj\");\n    }, de = function(t) {\n        It[t.fontName] = It[t.fontName] || {}, It[t.fontName][t.fontStyle] = t.id;\n    }, pe = function(t, e, n, r, i) {\n        var a = {\n            id: \"F\" + (Object.keys(Ft).length + 1).toString(10),\n            postScriptName: t,\n            fontName: e,\n            fontStyle: n,\n            encoding: r,\n            isStandardFont: i || !1,\n            metadata: {}\n        };\n        return Dt.publish(\"addFont\", {\n            font: a,\n            instance: this\n        }), Ft[a.id] = a, de(a), a.id;\n    }, ge = y.__private__.pdfEscape = y.pdfEscape = function(t, e) {\n        return (function(t, e) {\n            var n, r, i, a, o, s, u, c, l;\n            if (i = (e = e || {}).sourceEncoding || \"Unicode\", o = e.outputEncoding, (e.autoencode || o) && Ft[At].metadata && Ft[At].metadata[i] && Ft[At].metadata[i].encoding && (a = Ft[At].metadata[i].encoding, !o && Ft[At].encoding && (o = Ft[At].encoding), !o && a.codePages && (o = a.codePages[0]), \"string\" == typeof o && (o = a[o]), o)) {\n                for(u = !1, s = [], n = 0, r = t.length; n < r; n++)(c = o[t.charCodeAt(n)]) ? s.push(String.fromCharCode(c)) : s.push(t[n]), s[n].charCodeAt(0) >> 8 && (u = !0);\n                t = s.join(\"\");\n            }\n            for(n = t.length; void 0 === u && 0 !== n;)t.charCodeAt(n - 1) >> 8 && (u = !0), n--;\n            if (!u) return t;\n            for(s = e.noBOM ? [] : [\n                254,\n                255\n            ], n = 0, r = t.length; n < r; n++){\n                if ((l = (c = t.charCodeAt(n)) >> 8) >> 8) throw new Error(\"Character at position \" + n + \" of string '\" + t + \"' exceeds 16bits. Cannot be encoded into UCS-2 BE\");\n                s.push(l), s.push(c - (l << 8));\n            }\n            return String.fromCharCode.apply(void 0, s);\n        })(t, e).replace(/\\\\/g, \"\\\\\\\\\").replace(/\\(/g, \"\\\\(\").replace(/\\)/g, \"\\\\)\");\n    }, me = y.__private__.beginPage = function(t) {\n        ot[++Et] = [], Rt[Et] = {\n            objId: 0,\n            contentsObjId: 0,\n            userUnit: Number(f),\n            artBox: null,\n            bleedBox: null,\n            cropBox: null,\n            trimBox: null,\n            mediaBox: {\n                bottomLeftX: 0,\n                bottomLeftY: 0,\n                topRightX: Number(t[0]),\n                topRightY: Number(t[1])\n            }\n        }, ye(Et), ct(ot[$]);\n    }, ve = function(t, e) {\n        var n, i, a;\n        switch(r = e || r, \"string\" == typeof t && (n = x(t.toLowerCase()), Array.isArray(n) && (i = n[0], a = n[1])), Array.isArray(t) && (i = t[0] * St, a = t[1] * St), isNaN(i) && (i = s[0], a = s[1]), (i > 14400 || a > 14400) && (o.warn(\"A page in a PDF can not be wider or taller than 14400 userUnit. jsPDF limits the width/height to 14400\"), i = Math.min(14400, i), a = Math.min(14400, a)), s = [\n            i,\n            a\n        ], r.substr(0, 1)){\n            case \"l\":\n                a > i && (s = [\n                    a,\n                    i\n                ]);\n                break;\n            case \"p\":\n                i > a && (s = [\n                    a,\n                    i\n                ]);\n        }\n        me(s), Ze(Xe), lt(on), 0 !== fn && lt(fn + \" J\"), 0 !== dn && lt(dn + \" j\"), Dt.publish(\"addPage\", {\n            pageNumber: Et\n        });\n    }, be = function(t) {\n        t > 0 && t <= Et && (ot.splice(t, 1), Rt.splice(t, 1), Et--, $ > Et && ($ = Et), this.setPage($));\n    }, ye = function(t) {\n        t > 0 && t <= Et && ($ = t);\n    }, we = y.__private__.getNumberOfPages = y.getNumberOfPages = function() {\n        return ot.length - 1;\n    }, Ne = function(t, e, n) {\n        var r, i = void 0;\n        return n = n || {}, t = void 0 !== t ? t : Ft[At].fontName, e = void 0 !== e ? e : Ft[At].fontStyle, r = t.toLowerCase(), void 0 !== It[r] && void 0 !== It[r][e] ? i = It[r][e] : void 0 !== It[t] && void 0 !== It[t][e] ? i = It[t][e] : !1 === n.disableWarning && o.warn(\"Unable to look up font label for font '\" + t + \"', '\" + e + \"'. Refer to getFontList() for available fonts.\"), i || n.noFallback || null == (i = It.times[e]) && (i = It.times.normal), i;\n    }, Le = y.__private__.putInfo = function() {\n        var t = Xt(), e = function(t) {\n            return t;\n        };\n        for(var n in null !== m && (e = je.encryptor(t, 0)), lt(\"<<\"), lt(\"/Producer (\" + ge(e(\"jsPDF \" + E.version)) + \")\"), xt)xt.hasOwnProperty(n) && xt[n] && lt(\"/\" + n.substr(0, 1).toUpperCase() + n.substr(1) + \" (\" + ge(e(xt[n])) + \")\");\n        lt(\"/CreationDate (\" + ge(e(W)) + \")\"), lt(\">>\"), lt(\"endobj\");\n    }, xe = y.__private__.putCatalog = function(t) {\n        var e = (t = t || {}).rootDictionaryObjId || Qt;\n        switch(Xt(), lt(\"<<\"), lt(\"/Type /Catalog\"), lt(\"/Pages \" + e + \" 0 R\"), gt || (gt = \"fullwidth\"), gt){\n            case \"fullwidth\":\n                lt(\"/OpenAction [3 0 R /FitH null]\");\n                break;\n            case \"fullheight\":\n                lt(\"/OpenAction [3 0 R /FitV null]\");\n                break;\n            case \"fullpage\":\n                lt(\"/OpenAction [3 0 R /Fit]\");\n                break;\n            case \"original\":\n                lt(\"/OpenAction [3 0 R /XYZ null null 1]\");\n                break;\n            default:\n                var n = \"\" + gt;\n                \"%\" === n.substr(n.length - 1) && (gt = parseInt(gt) / 100), \"number\" == typeof gt && lt(\"/OpenAction [3 0 R /XYZ null null \" + T(gt) + \"]\");\n        }\n        switch(wt || (wt = \"continuous\"), wt){\n            case \"continuous\":\n                lt(\"/PageLayout /OneColumn\");\n                break;\n            case \"single\":\n                lt(\"/PageLayout /SinglePage\");\n                break;\n            case \"two\":\n            case \"twoleft\":\n                lt(\"/PageLayout /TwoColumnLeft\");\n                break;\n            case \"tworight\":\n                lt(\"/PageLayout /TwoColumnRight\");\n        }\n        bt && lt(\"/PageMode /\" + bt), Dt.publish(\"putCatalog\"), lt(\">>\"), lt(\"endobj\");\n    }, Ae = y.__private__.putTrailer = function() {\n        lt(\"trailer\"), lt(\"<<\"), lt(\"/Size \" + (et + 1)), lt(\"/Root \" + et + \" 0 R\"), lt(\"/Info \" + (et - 1) + \" 0 R\"), null !== m && lt(\"/Encrypt \" + je.oid + \" 0 R\"), lt(\"/ID [ <\" + V + \"> <\" + V + \"> ]\"), lt(\">>\");\n    }, Se = y.__private__.putHeader = function() {\n        lt(\"%PDF-\" + w), lt(\"%\\xba\\xdf\\xac\\xe0\");\n    }, _e = y.__private__.putXRef = function() {\n        var t = \"0000000000\";\n        lt(\"xref\"), lt(\"0 \" + (et + 1)), lt(\"0000000000 65535 f \");\n        for(var e = 1; e <= et; e++)\"function\" == typeof nt[e] ? lt((t + nt[e]()).slice(-10) + \" 00000 n \") : void 0 !== nt[e] ? lt((t + nt[e]).slice(-10) + \" 00000 n \") : lt(\"0000000000 00000 n \");\n    }, Pe = y.__private__.buildDocument = function() {\n        var t;\n        et = 0, it = 0, rt = [], nt = [], at = [], Qt = Kt(), te = Kt(), ct(rt), Dt.publish(\"buildDocument\"), Se(), oe(), function() {\n            Dt.publish(\"putAdditionalObjects\");\n            for(var t = 0; t < at.length; t++){\n                var e = at[t];\n                Zt(e.objId, !0), lt(e.content), lt(\"endobj\");\n            }\n            Dt.publish(\"postPutAdditionalObjects\");\n        }(), t = [], function() {\n            for(var t in Ft)Ft.hasOwnProperty(t) && (!1 === v || !0 === v && b.hasOwnProperty(t)) && se(Ft[t]);\n        }(), function() {\n            var t;\n            for(t in Bt)Bt.hasOwnProperty(t) && he(Bt[t]);\n        }(), function() {\n            for(var t in zt)zt.hasOwnProperty(t) && ue(zt[t]);\n        }(), function(t) {\n            var e;\n            for(e in Ct)Ct.hasOwnProperty(e) && (Ct[e] instanceof M ? ce(Ct[e]) : Ct[e] instanceof q && le(Ct[e], t));\n        }(t), Dt.publish(\"putResources\"), t.forEach(fe), fe({\n            resourcesOid: te,\n            objectOid: Number.MAX_SAFE_INTEGER\n        }), Dt.publish(\"postPutResources\"), null !== m && (je.oid = Xt(), lt(\"<<\"), lt(\"/Filter /Standard\"), lt(\"/V \" + je.v), lt(\"/R \" + je.r), lt(\"/U <\" + je.toHexString(je.U) + \">\"), lt(\"/O <\" + je.toHexString(je.O) + \">\"), lt(\"/P \" + je.P), lt(\">>\"), lt(\"endobj\")), Le(), xe();\n        var e = it;\n        return _e(), Ae(), lt(\"startxref\"), lt(\"\" + e), lt(\"%%EOF\"), ct(ot[$]), rt.join(\"\\n\");\n    }, ke = y.__private__.getBlob = function(t) {\n        return new Blob([\n            ft(t)\n        ], {\n            type: \"application/pdf\"\n        });\n    }, Fe = y.output = y.__private__.output = (Jt = function(t, e) {\n        switch(\"string\" == typeof (e = e || {}) ? e = {\n            filename: e\n        } : e.filename = e.filename || \"generated.pdf\", t){\n            case void 0:\n                return Pe();\n            case \"save\":\n                y.save(e.filename);\n                break;\n            case \"arraybuffer\":\n                return ft(Pe());\n            case \"blob\":\n                return ke(Pe());\n            case \"bloburi\":\n            case \"bloburl\":\n                if (void 0 !== i.URL && \"function\" == typeof i.URL.createObjectURL) return i.URL && i.URL.createObjectURL(ke(Pe())) || void 0;\n                o.warn(\"bloburl is not supported by your system, because URL.createObjectURL is not supported by your browser.\");\n                break;\n            case \"datauristring\":\n            case \"dataurlstring\":\n                var n = \"\", r = Pe();\n                try {\n                    n = d(r);\n                } catch (m) {\n                    n = d(unescape(encodeURIComponent(r)));\n                }\n                return \"data:application/pdf;filename=\" + e.filename + \";base64,\" + n;\n            case \"pdfobjectnewwindow\":\n                if (\"[object Window]\" === Object.prototype.toString.call(i)) {\n                    var a = \"https://cdnjs.cloudflare.com/ajax/libs/pdfobject/2.1.1/pdfobject.min.js\", s = ' integrity=\"sha512-4ze/a9/4jqu+tX9dfOqJYSvyYd5M6qum/3HpCLr+/Jqf0whc37VUbkpNGHR7/8pSnCFw47T1fmIpwBV7UySh3g==\" crossorigin=\"anonymous\"';\n                    e.pdfObjectUrl && (a = e.pdfObjectUrl, s = \"\");\n                    var u = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><script src=\"' + a + '\"' + s + '></script><script >PDFObject.embed(\"' + this.output(\"dataurlstring\") + '\", ' + JSON.stringify(e) + \");</script></body></html>\", c = i.open();\n                    return null !== c && c.document.write(u), c;\n                }\n                throw new Error(\"The option pdfobjectnewwindow just works in a browser-environment.\");\n            case \"pdfjsnewwindow\":\n                if (\"[object Window]\" === Object.prototype.toString.call(i)) {\n                    var l = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe id=\"pdfViewer\" src=\"' + (e.pdfJsUrl || \"examples/PDF.js/web/viewer.html\") + \"?file=&downloadName=\" + e.filename + '\" width=\"500px\" height=\"400px\" /></body></html>', h = i.open();\n                    if (null !== h) {\n                        h.document.write(l);\n                        var f = this;\n                        h.document.documentElement.querySelector(\"#pdfViewer\").onload = function() {\n                            h.document.title = e.filename, h.document.documentElement.querySelector(\"#pdfViewer\").contentWindow.PDFViewerApplication.open(f.output(\"bloburl\"));\n                        };\n                    }\n                    return h;\n                }\n                throw new Error(\"The option pdfjsnewwindow just works in a browser-environment.\");\n            case \"dataurlnewwindow\":\n                if (\"[object Window]\" !== Object.prototype.toString.call(i)) throw new Error(\"The option dataurlnewwindow just works in a browser-environment.\");\n                var p = '<html><style>html, body { padding: 0; margin: 0; } iframe { width: 100%; height: 100%; border: 0;}  </style><body><iframe src=\"' + this.output(\"datauristring\", e) + '\"></iframe></body></html>', g = i.open();\n                if (null !== g && (g.document.write(p), g.document.title = e.filename), g || \"undefined\" == typeof safari) return g;\n                break;\n            case \"datauri\":\n            case \"dataurl\":\n                return i.document.location.href = this.output(\"datauristring\", e);\n            default:\n                return null;\n        }\n    }, Jt.foo = function() {\n        try {\n            return Jt.apply(this, arguments);\n        } catch (n) {\n            var t = n.stack || \"\";\n            ~t.indexOf(\" at \") && (t = t.split(\" at \")[1]);\n            var e = \"Error in function \" + t.split(\"\\n\")[0].split(\"<\")[0] + \": \" + n.message;\n            if (!i.console) throw new Error(e);\n            i.console.error(e, n), i.alert && alert(e);\n        }\n    }, Jt.foo.bar = Jt, Jt.foo), Ie = function(t) {\n        return !0 === Array.isArray(Tt) && Tt.indexOf(t) > -1;\n    };\n    switch(a){\n        case \"pt\":\n            St = 1;\n            break;\n        case \"mm\":\n            St = 72 / 25.4;\n            break;\n        case \"cm\":\n            St = 72 / 2.54;\n            break;\n        case \"in\":\n            St = 72;\n            break;\n        case \"px\":\n            St = 1 == Ie(\"px_scaling\") ? .75 : 96 / 72;\n            break;\n        case \"pc\":\n        case \"em\":\n            St = 12;\n            break;\n        case \"ex\":\n            St = 6;\n            break;\n        default:\n            if (\"number\" != typeof a) throw new Error(\"Invalid unit: \" + a);\n            St = a;\n    }\n    var je = null;\n    K(), Y();\n    var Ce = y.__private__.getPageInfo = y.getPageInfo = function(t) {\n        if (isNaN(t) || t % 1 != 0) throw new Error(\"Invalid argument passed to jsPDF.getPageInfo\");\n        return {\n            objId: Rt[t].objId,\n            pageNumber: t,\n            pageContext: Rt[t]\n        };\n    }, Oe = y.__private__.getPageInfoByObjId = function(t) {\n        if (isNaN(t) || t % 1 != 0) throw new Error(\"Invalid argument passed to jsPDF.getPageInfoByObjId\");\n        for(var e in Rt)if (Rt[e].objId === t) break;\n        return Ce(e);\n    }, Be = y.__private__.getCurrentPageInfo = y.getCurrentPageInfo = function() {\n        return {\n            objId: Rt[$].objId,\n            pageNumber: $,\n            pageContext: Rt[$]\n        };\n    };\n    y.addPage = function() {\n        return ve.apply(this, arguments), this;\n    }, y.setPage = function() {\n        return ye.apply(this, arguments), ct.call(this, ot[$]), this;\n    }, y.insertPage = function(t) {\n        return this.addPage(), this.movePage($, t), this;\n    }, y.movePage = function(t, e) {\n        var n, r;\n        if (t > e) {\n            n = ot[t], r = Rt[t];\n            for(var i = t; i > e; i--)ot[i] = ot[i - 1], Rt[i] = Rt[i - 1];\n            ot[e] = n, Rt[e] = r, this.setPage(e);\n        } else if (t < e) {\n            n = ot[t], r = Rt[t];\n            for(var a = t; a < e; a++)ot[a] = ot[a + 1], Rt[a] = Rt[a + 1];\n            ot[e] = n, Rt[e] = r, this.setPage(e);\n        }\n        return this;\n    }, y.deletePage = function() {\n        return be.apply(this, arguments), this;\n    }, y.__private__.text = y.text = function(e, n, r, i, a) {\n        var o, s, u, c, l, h, f, d, p, g = (i = i || {}).scope || this;\n        if (\"number\" == typeof e && \"number\" == typeof n && (\"string\" == typeof r || Array.isArray(r))) {\n            var m = r;\n            r = n, n = e, e = m;\n        }\n        if (arguments[3] instanceof Wt == 0 ? (u = arguments[4], c = arguments[5], \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(f = arguments[3]) && null !== f || (\"string\" == typeof u && (c = u, u = null), \"string\" == typeof f && (c = f, f = null), \"number\" == typeof f && (u = f, f = null), i = {\n            flags: f,\n            angle: u,\n            align: c\n        })) : (R(\"The transform parameter of text() with a Matrix value\"), p = a), isNaN(n) || isNaN(r) || null == e) throw new Error(\"Invalid arguments passed to jsPDF.text\");\n        if (0 === e.length) return g;\n        var v, y = \"\", w = \"number\" == typeof i.lineHeightFactor ? i.lineHeightFactor : Je, N = g.internal.scaleFactor;\n        function L(t) {\n            return t = t.split(\"\t\").join(Array(i.TabLen || 9).join(\" \")), ge(t, f);\n        }\n        function x(t) {\n            for(var e, n = t.concat(), r = [], i = n.length; i--;)\"string\" == typeof (e = n.shift()) ? r.push(e) : Array.isArray(t) && (1 === e.length || void 0 === e[1] && void 0 === e[2]) ? r.push(e[0]) : r.push([\n                e[0],\n                e[1],\n                e[2]\n            ]);\n            return r;\n        }\n        function A(t, e) {\n            var n;\n            if (\"string\" == typeof t) n = e(t)[0];\n            else if (Array.isArray(t)) {\n                for(var r, i, a = t.concat(), o = [], s = a.length; s--;)\"string\" == typeof (r = a.shift()) ? o.push(e(r)[0]) : Array.isArray(r) && \"string\" == typeof r[0] && (i = e(r[0], r[1], r[2]), o.push([\n                    i[0],\n                    i[1],\n                    i[2]\n                ]));\n                n = o;\n            }\n            return n;\n        }\n        var P = !1, k = !0;\n        if (\"string\" == typeof e) P = !0;\n        else if (Array.isArray(e)) {\n            var F = e.concat();\n            s = [];\n            for(var I, j = F.length; j--;)(\"string\" != typeof (I = F.shift()) || Array.isArray(I) && \"string\" != typeof I[0]) && (k = !1);\n            P = k;\n        }\n        if (!1 === P) throw new Error('Type of text must be string or Array. \"' + e + '\" is not recognized.');\n        \"string\" == typeof e && (e = e.match(/[\\r?\\n]/) ? e.split(/\\r\\n|\\r|\\n/g) : [\n            e\n        ]);\n        var C = pt / g.internal.scaleFactor, O = C * (w - 1);\n        switch(i.baseline){\n            case \"bottom\":\n                r -= O;\n                break;\n            case \"top\":\n                r += C - O;\n                break;\n            case \"hanging\":\n                r += C - 2 * O;\n                break;\n            case \"middle\":\n                r += C / 2 - O;\n        }\n        if ((h = i.maxWidth || 0) > 0 && (\"string\" == typeof e ? e = g.splitTextToSize(e, h) : \"[object Array]\" === Object.prototype.toString.call(e) && (e = e.reduce(function(t, e) {\n            return t.concat(g.splitTextToSize(e, h));\n        }, []))), o = {\n            text: e,\n            x: n,\n            y: r,\n            options: i,\n            mutex: {\n                pdfEscape: ge,\n                activeFontKey: At,\n                fonts: Ft,\n                activeFontSize: pt\n            }\n        }, Dt.publish(\"preProcessText\", o), e = o.text, u = (i = o.options).angle, p instanceof Wt == 0 && u && \"number\" == typeof u) {\n            u *= Math.PI / 180, 0 === i.rotationDirection && (u = -u), _ === S && (u = -u);\n            var M = Math.cos(u), q = Math.sin(u);\n            p = new Wt(M, q, -q, M, 0, 0);\n        } else u && u instanceof Wt && (p = u);\n        _ !== S || p || (p = Gt), void 0 !== (l = i.charSpace || ln) && (y += B(U(l)) + \" Tc\\n\", this.setCharSpace(this.getCharSpace() || 0)), void 0 !== (d = i.horizontalScale) && (y += B(100 * d) + \" Tz\\n\"), i.lang;\n        var E = -1, D = void 0 !== i.renderingMode ? i.renderingMode : i.stroke, T = g.internal.getCurrentPageInfo().pageContext;\n        switch(D){\n            case 0:\n            case !1:\n            case \"fill\":\n                E = 0;\n                break;\n            case 1:\n            case !0:\n            case \"stroke\":\n                E = 1;\n                break;\n            case 2:\n            case \"fillThenStroke\":\n                E = 2;\n                break;\n            case 3:\n            case \"invisible\":\n                E = 3;\n                break;\n            case 4:\n            case \"fillAndAddForClipping\":\n                E = 4;\n                break;\n            case 5:\n            case \"strokeAndAddPathForClipping\":\n                E = 5;\n                break;\n            case 6:\n            case \"fillThenStrokeAndAddToPathForClipping\":\n                E = 6;\n                break;\n            case 7:\n            case \"addToPathForClipping\":\n                E = 7;\n        }\n        var z = void 0 !== T.usedRenderingMode ? T.usedRenderingMode : -1;\n        -1 !== E ? y += E + \" Tr\\n\" : -1 !== z && (y += \"0 Tr\\n\"), -1 !== E && (T.usedRenderingMode = E), c = i.align || \"left\";\n        var H, W = pt * w, V = g.internal.pageSize.getWidth(), G = Ft[At];\n        l = i.charSpace || ln, h = i.maxWidth || 0, f = Object.assign({\n            autoencode: !0,\n            noBOM: !0\n        }, i.flags);\n        var Y = [], J = function(t) {\n            return g.getStringUnitWidth(t, {\n                font: G,\n                charSpace: l,\n                fontSize: pt,\n                doKerning: !1\n            }) * pt / N;\n        };\n        if (\"[object Array]\" === Object.prototype.toString.call(e)) {\n            var X;\n            s = x(e), \"left\" !== c && (H = s.map(J));\n            var K, Z = 0;\n            if (\"right\" === c) {\n                n -= H[0], e = [], j = s.length;\n                for(var $ = 0; $ < j; $++)0 === $ ? (K = en(n), X = nn(r)) : (K = U(Z - H[$]), X = -W), e.push([\n                    s[$],\n                    K,\n                    X\n                ]), Z = H[$];\n            } else if (\"center\" === c) {\n                n -= H[0] / 2, e = [], j = s.length;\n                for(var Q = 0; Q < j; Q++)0 === Q ? (K = en(n), X = nn(r)) : (K = U((Z - H[Q]) / 2), X = -W), e.push([\n                    s[Q],\n                    K,\n                    X\n                ]), Z = H[Q];\n            } else if (\"left\" === c) {\n                e = [], j = s.length;\n                for(var tt = 0; tt < j; tt++)e.push(s[tt]);\n            } else if (\"justify\" === c && \"Identity-H\" === G.encoding) {\n                e = [], j = s.length, h = 0 !== h ? h : V;\n                for(var et = 0, nt = 0; nt < j; nt++)if (X = 0 === nt ? nn(r) : -W, K = 0 === nt ? en(n) : et, nt < j - 1) {\n                    var rt = U((h - H[nt]) / (s[nt].split(\" \").length - 1)), it = s[nt].split(\" \");\n                    e.push([\n                        it[0] + \" \",\n                        K,\n                        X\n                    ]), et = 0;\n                    for(var at = 1; at < it.length; at++){\n                        var ot = (J(it[at - 1] + \" \" + it[at]) - J(it[at])) * N + rt;\n                        at == it.length - 1 ? e.push([\n                            it[at],\n                            ot,\n                            0\n                        ]) : e.push([\n                            it[at] + \" \",\n                            ot,\n                            0\n                        ]), et -= ot;\n                    }\n                } else e.push([\n                    s[nt],\n                    K,\n                    X\n                ]);\n                e.push([\n                    \"\",\n                    et,\n                    0\n                ]);\n            } else {\n                if (\"justify\" !== c) throw new Error('Unrecognized alignment option, use \"left\", \"center\", \"right\" or \"justify\".');\n                for(e = [], j = s.length, h = 0 !== h ? h : V, nt = 0; nt < j; nt++){\n                    X = 0 === nt ? nn(r) : -W, K = 0 === nt ? en(n) : 0;\n                    var st = s[nt].split(\" \").length - 1, ut = st > 0 ? (h - H[nt]) / st : 0;\n                    nt < j - 1 ? Y.push(B(U(ut))) : Y.push(0), e.push([\n                        s[nt],\n                        K,\n                        X\n                    ]);\n                }\n            }\n        }\n        !0 === (\"boolean\" == typeof i.R2L ? i.R2L : vt) && (e = A(e, function(t, e, n) {\n            return [\n                t.split(\"\").reverse().join(\"\"),\n                e,\n                n\n            ];\n        })), o = {\n            text: e,\n            x: n,\n            y: r,\n            options: i,\n            mutex: {\n                pdfEscape: ge,\n                activeFontKey: At,\n                fonts: Ft,\n                activeFontSize: pt\n            }\n        }, Dt.publish(\"postProcessText\", o), e = o.text, v = o.mutex.isHex || !1;\n        var ct = Ft[At].encoding;\n        \"WinAnsiEncoding\" !== ct && \"StandardEncoding\" !== ct || (e = A(e, function(t, e, n) {\n            return [\n                L(t),\n                e,\n                n\n            ];\n        })), s = x(e), e = [];\n        for(var ht, ft, dt, gt = Array.isArray(s[0]) ? 1 : 0, mt = \"\", bt = function(t, e, n) {\n            var r = \"\";\n            return n instanceof Wt ? (n = \"number\" == typeof i.angle ? Vt(n, new Wt(1, 0, 0, 1, t, e)) : Vt(new Wt(1, 0, 0, 1, t, e), n), _ === S && (n = Vt(new Wt(1, 0, 0, -1, 0, 0), n)), r = n.join(\" \") + \" Tm\\n\") : r = B(t) + \" \" + B(e) + \" Td\\n\", r;\n        }, yt = 0; yt < s.length; yt++){\n            switch(mt = \"\", gt){\n                case 1:\n                    dt = (v ? \"<\" : \"(\") + s[yt][0] + (v ? \">\" : \")\"), ht = parseFloat(s[yt][1]), ft = parseFloat(s[yt][2]);\n                    break;\n                case 0:\n                    dt = (v ? \"<\" : \"(\") + s[yt] + (v ? \">\" : \")\"), ht = en(n), ft = nn(r);\n            }\n            void 0 !== Y && void 0 !== Y[yt] && (mt = Y[yt] + \" Tw\\n\"), 0 === yt ? e.push(mt + bt(ht, ft, p) + dt) : 0 === gt ? e.push(mt + dt) : 1 === gt && e.push(mt + bt(ht, ft, p) + dt);\n        }\n        e = 0 === gt ? e.join(\" Tj\\nT* \") : e.join(\" Tj\\n\"), e += \" Tj\\n\";\n        var wt = \"BT\\n/\";\n        return wt += At + \" \" + pt + \" Tf\\n\", wt += B(pt * w) + \" TL\\n\", wt += un + \"\\n\", wt += y, wt += e, lt(wt += \"ET\"), b[At] = !0, g;\n    };\n    var Me = y.__private__.clip = y.clip = function(t) {\n        return lt(\"evenodd\" === t ? \"W*\" : \"W\"), this;\n    };\n    y.clipEvenOdd = function() {\n        return Me(\"evenodd\");\n    }, y.__private__.discardPath = y.discardPath = function() {\n        return lt(\"n\"), this;\n    };\n    var qe = y.__private__.isValidStyle = function(t) {\n        var e = !1;\n        return -1 !== [\n            void 0,\n            null,\n            \"S\",\n            \"D\",\n            \"F\",\n            \"DF\",\n            \"FD\",\n            \"f\",\n            \"f*\",\n            \"B\",\n            \"B*\",\n            \"n\"\n        ].indexOf(t) && (e = !0), e;\n    };\n    y.__private__.setDefaultPathOperation = y.setDefaultPathOperation = function(t) {\n        return qe(t) && (g = t), this;\n    };\n    var Ee = y.__private__.getStyle = y.getStyle = function(t) {\n        var e = g;\n        switch(t){\n            case \"D\":\n            case \"S\":\n                e = \"S\";\n                break;\n            case \"F\":\n                e = \"f\";\n                break;\n            case \"FD\":\n            case \"DF\":\n                e = \"B\";\n                break;\n            case \"f\":\n            case \"f*\":\n            case \"B\":\n            case \"B*\":\n                e = t;\n        }\n        return e;\n    }, Re = y.close = function() {\n        return lt(\"h\"), this;\n    };\n    y.stroke = function() {\n        return lt(\"S\"), this;\n    }, y.fill = function(t) {\n        return De(\"f\", t), this;\n    }, y.fillEvenOdd = function(t) {\n        return De(\"f*\", t), this;\n    }, y.fillStroke = function(t) {\n        return De(\"B\", t), this;\n    }, y.fillStrokeEvenOdd = function(t) {\n        return De(\"B*\", t), this;\n    };\n    var De = function(e, n) {\n        \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(n) ? Ue(n, e) : lt(e);\n    }, Te = function(t) {\n        null === t || _ === S && void 0 === t || (t = Ee(t), lt(t));\n    };\n    function ze(t, e, n, r, i) {\n        var a = new q(e || this.boundingBox, n || this.xStep, r || this.yStep, this.gState, i || this.matrix);\n        a.stream = this.stream;\n        var o = t + \"$$\" + this.cloneIndex++ + \"$$\";\n        return Yt(o, a), a;\n    }\n    var Ue = function(t, e) {\n        var n = Ot[t.key], r = Ct[n];\n        if (r instanceof M) lt(\"q\"), lt(He(e)), r.gState && y.setGState(r.gState), lt(t.matrix.toString() + \" cm\"), lt(\"/\" + n + \" sh\"), lt(\"Q\");\n        else if (r instanceof q) {\n            var i = new Wt(1, 0, 0, -1, 0, _n());\n            t.matrix && (i = i.multiply(t.matrix || Gt), n = ze.call(r, t.key, t.boundingBox, t.xStep, t.yStep, i).id), lt(\"q\"), lt(\"/Pattern cs\"), lt(\"/\" + n + \" scn\"), r.gState && y.setGState(r.gState), lt(e), lt(\"Q\");\n        }\n    }, He = function(t) {\n        switch(t){\n            case \"f\":\n            case \"F\":\n            case \"n\":\n                return \"W n\";\n            case \"f*\":\n                return \"W* n\";\n            case \"B\":\n            case \"S\":\n                return \"W S\";\n            case \"B*\":\n                return \"W* S\";\n        }\n    }, We = y.moveTo = function(t, e) {\n        return lt(B(U(t)) + \" \" + B(H(e)) + \" m\"), this;\n    }, Ve = y.lineTo = function(t, e) {\n        return lt(B(U(t)) + \" \" + B(H(e)) + \" l\"), this;\n    }, Ge = y.curveTo = function(t, e, n, r, i, a) {\n        return lt([\n            B(U(t)),\n            B(H(e)),\n            B(U(n)),\n            B(H(r)),\n            B(U(i)),\n            B(H(a)),\n            \"c\"\n        ].join(\" \")), this;\n    };\n    y.__private__.line = y.line = function(t, e, n, r, i) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || !qe(i)) throw new Error(\"Invalid arguments passed to jsPDF.line\");\n        return _ === A ? this.lines([\n            [\n                n - t,\n                r - e\n            ]\n        ], t, e, [\n            1,\n            1\n        ], i || \"S\") : this.lines([\n            [\n                n - t,\n                r - e\n            ]\n        ], t, e, [\n            1,\n            1\n        ]).stroke();\n    }, y.__private__.lines = y.lines = function(t, e, n, r, i, a) {\n        var o, s, u, c, l, h, f, d, p, g, m, v;\n        if (\"number\" == typeof t && (v = n, n = e, e = t, t = v), r = r || [\n            1,\n            1\n        ], a = a || !1, isNaN(e) || isNaN(n) || !Array.isArray(t) || !Array.isArray(r) || !qe(i) || \"boolean\" != typeof a) throw new Error(\"Invalid arguments passed to jsPDF.lines\");\n        for(We(e, n), o = r[0], s = r[1], c = t.length, g = e, m = n, u = 0; u < c; u++)2 === (l = t[u]).length ? (g = l[0] * o + g, m = l[1] * s + m, Ve(g, m)) : (h = l[0] * o + g, f = l[1] * s + m, d = l[2] * o + g, p = l[3] * s + m, g = l[4] * o + g, m = l[5] * s + m, Ge(h, f, d, p, g, m));\n        return a && Re(), Te(i), this;\n    }, y.path = function(t) {\n        for(var e = 0; e < t.length; e++){\n            var n = t[e], r = n.c;\n            switch(n.op){\n                case \"m\":\n                    We(r[0], r[1]);\n                    break;\n                case \"l\":\n                    Ve(r[0], r[1]);\n                    break;\n                case \"c\":\n                    Ge.apply(this, r);\n                    break;\n                case \"h\":\n                    Re();\n            }\n        }\n        return this;\n    }, y.__private__.rect = y.rect = function(t, e, n, r, i) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || !qe(i)) throw new Error(\"Invalid arguments passed to jsPDF.rect\");\n        return _ === A && (r = -r), lt([\n            B(U(t)),\n            B(H(e)),\n            B(U(n)),\n            B(U(r)),\n            \"re\"\n        ].join(\" \")), Te(i), this;\n    }, y.__private__.triangle = y.triangle = function(t, e, n, r, i, a, o) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || isNaN(i) || isNaN(a) || !qe(o)) throw new Error(\"Invalid arguments passed to jsPDF.triangle\");\n        return this.lines([\n            [\n                n - t,\n                r - e\n            ],\n            [\n                i - n,\n                a - r\n            ],\n            [\n                t - i,\n                e - a\n            ]\n        ], t, e, [\n            1,\n            1\n        ], o, !0), this;\n    }, y.__private__.roundedRect = y.roundedRect = function(t, e, n, r, i, a, o) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || isNaN(i) || isNaN(a) || !qe(o)) throw new Error(\"Invalid arguments passed to jsPDF.roundedRect\");\n        var s = 4 / 3 * (Math.SQRT2 - 1);\n        return i = Math.min(i, .5 * n), a = Math.min(a, .5 * r), this.lines([\n            [\n                n - 2 * i,\n                0\n            ],\n            [\n                i * s,\n                0,\n                i,\n                a - a * s,\n                i,\n                a\n            ],\n            [\n                0,\n                r - 2 * a\n            ],\n            [\n                0,\n                a * s,\n                -i * s,\n                a,\n                -i,\n                a\n            ],\n            [\n                2 * i - n,\n                0\n            ],\n            [\n                -i * s,\n                0,\n                -i,\n                -a * s,\n                -i,\n                -a\n            ],\n            [\n                0,\n                2 * a - r\n            ],\n            [\n                0,\n                -a * s,\n                i * s,\n                -a,\n                i,\n                -a\n            ]\n        ], t + i, e, [\n            1,\n            1\n        ], o, !0), this;\n    }, y.__private__.ellipse = y.ellipse = function(t, e, n, r, i) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || !qe(i)) throw new Error(\"Invalid arguments passed to jsPDF.ellipse\");\n        var a = 4 / 3 * (Math.SQRT2 - 1) * n, o = 4 / 3 * (Math.SQRT2 - 1) * r;\n        return We(t + n, e), Ge(t + n, e - o, t + a, e - r, t, e - r), Ge(t - a, e - r, t - n, e - o, t - n, e), Ge(t - n, e + o, t - a, e + r, t, e + r), Ge(t + a, e + r, t + n, e + o, t + n, e), Te(i), this;\n    }, y.__private__.circle = y.circle = function(t, e, n, r) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || !qe(r)) throw new Error(\"Invalid arguments passed to jsPDF.circle\");\n        return this.ellipse(t, e, n, n, r);\n    }, y.setFont = function(t, e, n) {\n        return n && (e = F(e, n)), At = Ne(t, e, {\n            disableWarning: !1\n        }), this;\n    };\n    var Ye = y.__private__.getFont = y.getFont = function() {\n        return Ft[Ne.apply(y, arguments)];\n    };\n    y.__private__.getFontList = y.getFontList = function() {\n        var t, e, n = {};\n        for(t in It)if (It.hasOwnProperty(t)) for(e in n[t] = [], It[t])It[t].hasOwnProperty(e) && n[t].push(e);\n        return n;\n    }, y.addFont = function(t, e, n, r, i) {\n        var a = [\n            \"StandardEncoding\",\n            \"MacRomanEncoding\",\n            \"Identity-H\",\n            \"WinAnsiEncoding\"\n        ];\n        return arguments[3] && -1 !== a.indexOf(arguments[3]) ? i = arguments[3] : arguments[3] && -1 == a.indexOf(arguments[3]) && (n = F(n, r)), pe.call(this, t, e, n, i = i || \"Identity-H\");\n    };\n    var Je, Xe = e.lineWidth || .200025, Ke = y.__private__.getLineWidth = y.getLineWidth = function() {\n        return Xe;\n    }, Ze = y.__private__.setLineWidth = y.setLineWidth = function(t) {\n        return Xe = t, lt(B(U(t)) + \" w\"), this;\n    };\n    y.__private__.setLineDash = E.API.setLineDash = E.API.setLineDashPattern = function(t, e) {\n        if (t = t || [], e = e || 0, isNaN(e) || !Array.isArray(t)) throw new Error(\"Invalid arguments passed to jsPDF.setLineDash\");\n        return t = t.map(function(t) {\n            return B(U(t));\n        }).join(\" \"), e = B(U(e)), lt(\"[\" + t + \"] \" + e + \" d\"), this;\n    };\n    var $e = y.__private__.getLineHeight = y.getLineHeight = function() {\n        return pt * Je;\n    };\n    y.__private__.getLineHeight = y.getLineHeight = function() {\n        return pt * Je;\n    };\n    var Qe = y.__private__.setLineHeightFactor = y.setLineHeightFactor = function(t) {\n        return \"number\" == typeof (t = t || 1.15) && (Je = t), this;\n    }, tn = y.__private__.getLineHeightFactor = y.getLineHeightFactor = function() {\n        return Je;\n    };\n    Qe(e.lineHeight);\n    var en = y.__private__.getHorizontalCoordinate = function(t) {\n        return U(t);\n    }, nn = y.__private__.getVerticalCoordinate = function(t) {\n        return _ === S ? t : Rt[$].mediaBox.topRightY - Rt[$].mediaBox.bottomLeftY - U(t);\n    }, rn = y.__private__.getHorizontalCoordinateString = y.getHorizontalCoordinateString = function(t) {\n        return B(en(t));\n    }, an = y.__private__.getVerticalCoordinateString = y.getVerticalCoordinateString = function(t) {\n        return B(nn(t));\n    }, on = e.strokeColor || \"0 G\";\n    y.__private__.getStrokeColor = y.getDrawColor = function() {\n        return ee(on);\n    }, y.__private__.setStrokeColor = y.setDrawColor = function(t, e, n, r) {\n        return on = ne({\n            ch1: t,\n            ch2: e,\n            ch3: n,\n            ch4: r,\n            pdfColorType: \"draw\",\n            precision: 2\n        }), lt(on), this;\n    };\n    var sn = e.fillColor || \"0 g\";\n    y.__private__.getFillColor = y.getFillColor = function() {\n        return ee(sn);\n    }, y.__private__.setFillColor = y.setFillColor = function(t, e, n, r) {\n        return sn = ne({\n            ch1: t,\n            ch2: e,\n            ch3: n,\n            ch4: r,\n            pdfColorType: \"fill\",\n            precision: 2\n        }), lt(sn), this;\n    };\n    var un = e.textColor || \"0 g\", cn = y.__private__.getTextColor = y.getTextColor = function() {\n        return ee(un);\n    };\n    y.__private__.setTextColor = y.setTextColor = function(t, e, n, r) {\n        return un = ne({\n            ch1: t,\n            ch2: e,\n            ch3: n,\n            ch4: r,\n            pdfColorType: \"text\",\n            precision: 3\n        }), this;\n    };\n    var ln = e.charSpace, hn = y.__private__.getCharSpace = y.getCharSpace = function() {\n        return parseFloat(ln || 0);\n    };\n    y.__private__.setCharSpace = y.setCharSpace = function(t) {\n        if (isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.setCharSpace\");\n        return ln = t, this;\n    };\n    var fn = 0;\n    y.CapJoinStyles = {\n        0: 0,\n        butt: 0,\n        but: 0,\n        miter: 0,\n        1: 1,\n        round: 1,\n        rounded: 1,\n        circle: 1,\n        2: 2,\n        projecting: 2,\n        project: 2,\n        square: 2,\n        bevel: 2\n    }, y.__private__.setLineCap = y.setLineCap = function(t) {\n        var e = y.CapJoinStyles[t];\n        if (void 0 === e) throw new Error(\"Line cap style of '\" + t + \"' is not recognized. See or extend .CapJoinStyles property for valid styles\");\n        return fn = e, lt(e + \" J\"), this;\n    };\n    var dn = 0;\n    y.__private__.setLineJoin = y.setLineJoin = function(t) {\n        var e = y.CapJoinStyles[t];\n        if (void 0 === e) throw new Error(\"Line join style of '\" + t + \"' is not recognized. See or extend .CapJoinStyles property for valid styles\");\n        return dn = e, lt(e + \" j\"), this;\n    }, y.__private__.setLineMiterLimit = y.__private__.setMiterLimit = y.setLineMiterLimit = y.setMiterLimit = function(t) {\n        if (t = t || 0, isNaN(t)) throw new Error(\"Invalid argument passed to jsPDF.setLineMiterLimit\");\n        return lt(B(U(t)) + \" M\"), this;\n    }, y.GState = O, y.setGState = function(t) {\n        (t = \"string\" == typeof t ? Bt[Mt[t]] : pn(null, t)).equals(qt) || (lt(\"/\" + t.id + \" gs\"), qt = t);\n    };\n    var pn = function(t, e) {\n        if (!t || !Mt[t]) {\n            var n = !1;\n            for(var r in Bt)if (Bt.hasOwnProperty(r) && Bt[r].equals(e)) {\n                n = !0;\n                break;\n            }\n            if (n) e = Bt[r];\n            else {\n                var i = \"GS\" + (Object.keys(Bt).length + 1).toString(10);\n                Bt[i] = e, e.id = i;\n            }\n            return t && (Mt[t] = e.id), Dt.publish(\"addGState\", e), e;\n        }\n    };\n    y.addGState = function(t, e) {\n        return pn(t, e), this;\n    }, y.saveGraphicsState = function() {\n        return lt(\"q\"), jt.push({\n            key: At,\n            size: pt,\n            color: un\n        }), this;\n    }, y.restoreGraphicsState = function() {\n        lt(\"Q\");\n        var t = jt.pop();\n        return At = t.key, pt = t.size, un = t.color, qt = null, this;\n    }, y.setCurrentTransformationMatrix = function(t) {\n        return lt(t.toString() + \" cm\"), this;\n    }, y.comment = function(t) {\n        return lt(\"#\" + t), this;\n    };\n    var gn = function(t, e) {\n        var n = t || 0;\n        Object.defineProperty(this, \"x\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            },\n            set: function(t) {\n                isNaN(t) || (n = parseFloat(t));\n            }\n        });\n        var r = e || 0;\n        Object.defineProperty(this, \"y\", {\n            enumerable: !0,\n            get: function() {\n                return r;\n            },\n            set: function(t) {\n                isNaN(t) || (r = parseFloat(t));\n            }\n        });\n        var i = \"pt\";\n        return Object.defineProperty(this, \"type\", {\n            enumerable: !0,\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                i = t.toString();\n            }\n        }), this;\n    }, mn = function(t, e, n, r) {\n        gn.call(this, t, e), this.type = \"rect\";\n        var i = n || 0;\n        Object.defineProperty(this, \"w\", {\n            enumerable: !0,\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                isNaN(t) || (i = parseFloat(t));\n            }\n        });\n        var a = r || 0;\n        return Object.defineProperty(this, \"h\", {\n            enumerable: !0,\n            get: function() {\n                return a;\n            },\n            set: function(t) {\n                isNaN(t) || (a = parseFloat(t));\n            }\n        }), this;\n    }, vn = function() {\n        this.page = Et, this.currentPage = $, this.pages = ot.slice(0), this.pagesContext = Rt.slice(0), this.x = _t, this.y = Pt, this.matrix = kt, this.width = wn($), this.height = Ln($), this.outputDestination = ut, this.id = \"\", this.objectNumber = -1;\n    };\n    vn.prototype.restore = function() {\n        Et = this.page, $ = this.currentPage, Rt = this.pagesContext, ot = this.pages, _t = this.x, Pt = this.y, kt = this.matrix, Nn($, this.width), xn($, this.height), ut = this.outputDestination;\n    };\n    var bn = function(t, e, n, r, i) {\n        Ht.push(new vn), Et = $ = 0, ot = [], _t = t, Pt = e, kt = i, me([\n            n,\n            r\n        ]);\n    };\n    for(var yn in y.beginFormObject = function(t, e, n, r, i) {\n        return bn(t, e, n, r, i), this;\n    }, y.endFormObject = function(t) {\n        return function(t) {\n            if (Ut[t]) Ht.pop().restore();\n            else {\n                var e = new vn, n = \"Xo\" + (Object.keys(zt).length + 1).toString(10);\n                e.id = n, Ut[t] = n, zt[n] = e, Dt.publish(\"addFormObject\", e), Ht.pop().restore();\n            }\n        }(t), this;\n    }, y.doFormObject = function(t, e) {\n        var n = zt[Ut[t]];\n        return lt(\"q\"), lt(e.toString() + \" cm\"), lt(\"/\" + n.id + \" Do\"), lt(\"Q\"), this;\n    }, y.getFormObject = function(t) {\n        var e = zt[Ut[t]];\n        return {\n            x: e.x,\n            y: e.y,\n            width: e.width,\n            height: e.height,\n            matrix: e.matrix\n        };\n    }, y.save = function(t, e) {\n        return t = t || \"generated.pdf\", (e = e || {}).returnPromise = e.returnPromise || !1, !1 === e.returnPromise ? (l(ke(Pe()), t), \"function\" == typeof l.unload && i.setTimeout && setTimeout(l.unload, 911), this) : new Promise(function(e, n) {\n            try {\n                var r = l(ke(Pe()), t);\n                \"function\" == typeof l.unload && i.setTimeout && setTimeout(l.unload, 911), e(r);\n            } catch (a) {\n                n(a.message);\n            }\n        });\n    }, E.API)E.API.hasOwnProperty(yn) && (\"events\" === yn && E.API.events.length ? function(t, e) {\n        var n, r, i;\n        for(i = e.length - 1; -1 !== i; i--)n = e[i][0], r = e[i][1], t.subscribe.apply(t, [\n            n\n        ].concat(\"function\" == typeof r ? [\n            r\n        ] : r));\n    }(Dt, E.API.events) : y[yn] = E.API[yn]);\n    function wn(t) {\n        return Rt[t].mediaBox.topRightX - Rt[t].mediaBox.bottomLeftX;\n    }\n    function Nn(t, e) {\n        Rt[t].mediaBox.topRightX = e + Rt[t].mediaBox.bottomLeftX;\n    }\n    function Ln(t) {\n        return Rt[t].mediaBox.topRightY - Rt[t].mediaBox.bottomLeftY;\n    }\n    function xn(t, e) {\n        Rt[t].mediaBox.topRightY = e + Rt[t].mediaBox.bottomLeftY;\n    }\n    var An = y.getPageWidth = function(t) {\n        return wn(t = t || $) / St;\n    }, Sn = y.setPageWidth = function(t, e) {\n        Nn(t, e * St);\n    }, _n = y.getPageHeight = function(t) {\n        return Ln(t = t || $) / St;\n    }, Pn = y.setPageHeight = function(t, e) {\n        xn(t, e * St);\n    };\n    return y.internal = {\n        pdfEscape: ge,\n        getStyle: Ee,\n        getFont: Ye,\n        getFontSize: mt,\n        getCharSpace: hn,\n        getTextColor: cn,\n        getLineHeight: $e,\n        getLineHeightFactor: tn,\n        getLineWidth: Ke,\n        write: ht,\n        getHorizontalCoordinate: en,\n        getVerticalCoordinate: nn,\n        getCoordinateString: rn,\n        getVerticalCoordinateString: an,\n        collections: {},\n        newObject: Xt,\n        newAdditionalObject: $t,\n        newObjectDeferred: Kt,\n        newObjectDeferredBegin: Zt,\n        getFilters: re,\n        putStream: ie,\n        events: Dt,\n        scaleFactor: St,\n        pageSize: {\n            getWidth: function() {\n                return An($);\n            },\n            setWidth: function(t) {\n                Sn($, t);\n            },\n            getHeight: function() {\n                return _n($);\n            },\n            setHeight: function(t) {\n                Pn($, t);\n            }\n        },\n        encryptionOptions: m,\n        encryption: je,\n        getEncryptor: function(t) {\n            return null !== m ? je.encryptor(t, 0) : function(t) {\n                return t;\n            };\n        },\n        output: Fe,\n        getNumberOfPages: we,\n        pages: ot,\n        out: lt,\n        f2: T,\n        f3: z,\n        getPageInfo: Ce,\n        getPageInfoByObjId: Oe,\n        getCurrentPageInfo: Be,\n        getPDFVersion: N,\n        Point: gn,\n        Rectangle: mn,\n        Matrix: Wt,\n        hasHotfix: Ie\n    }, Object.defineProperty(y.internal.pageSize, \"width\", {\n        get: function() {\n            return An($);\n        },\n        set: function(t) {\n            Sn($, t);\n        },\n        enumerable: !0,\n        configurable: !0\n    }), Object.defineProperty(y.internal.pageSize, \"height\", {\n        get: function() {\n            return _n($);\n        },\n        set: function(t) {\n            Pn($, t);\n        },\n        enumerable: !0,\n        configurable: !0\n    }), (function(t) {\n        for(var e = 0, n = dt.length; e < n; e++){\n            var r = pe.call(this, t[e][0], t[e][1], t[e][2], dt[e][3], !0);\n            !1 === v && (b[r] = !0);\n            var i = t[e][0].split(\"-\");\n            de({\n                id: r,\n                fontName: i[0],\n                fontStyle: i[1] || \"\"\n            });\n        }\n        Dt.publish(\"addFonts\", {\n            fonts: Ft,\n            dictionary: It\n        });\n    }).call(y, dt), At = \"F1\", ve(s, r), Dt.publish(\"initialized\"), y;\n}\nI.prototype.lsbFirstWord = function(t) {\n    return String.fromCharCode(255 & t, t >> 8 & 255, t >> 16 & 255, t >> 24 & 255);\n}, I.prototype.toHexString = function(t) {\n    return t.split(\"\").map(function(t) {\n        return (\"0\" + (255 & t.charCodeAt(0)).toString(16)).slice(-2);\n    }).join(\"\");\n}, I.prototype.hexToBytes = function(t) {\n    for(var e = [], n = 0; n < t.length; n += 2)e.push(String.fromCharCode(parseInt(t.substr(n, 2), 16)));\n    return e.join(\"\");\n}, I.prototype.processOwnerPassword = function(t, e) {\n    return k(S(e).substr(0, 5), t);\n}, I.prototype.encryptor = function(t, e) {\n    var n = S(this.encryptionKey + String.fromCharCode(255 & t, t >> 8 & 255, t >> 16 & 255, 255 & e, e >> 8 & 255)).substr(0, 10);\n    return function(t) {\n        return k(n, t);\n    };\n}, O.prototype.equals = function(e) {\n    var n, r = \"id,objectNumber,equals\";\n    if (!e || _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) !== _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(this)) return !1;\n    var i = 0;\n    for(n in this)if (!(r.indexOf(n) >= 0)) {\n        if (this.hasOwnProperty(n) && !e.hasOwnProperty(n)) return !1;\n        if (this[n] !== e[n]) return !1;\n        i++;\n    }\n    for(n in e)e.hasOwnProperty(n) && r.indexOf(n) < 0 && i--;\n    return 0 === i;\n}, E.API = {\n    events: []\n}, E.version = \"3.0.3\";\nvar R = E.API, D = 1, T = function(t) {\n    return t.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\(/g, \"\\\\(\").replace(/\\)/g, \"\\\\)\");\n}, z = function(t) {\n    return t.replace(/\\\\\\\\/g, \"\\\\\").replace(/\\\\\\(/g, \"(\").replace(/\\\\\\)/g, \")\");\n}, U = function(t) {\n    return t.toFixed(2);\n}, H = function(t) {\n    return t.toFixed(5);\n};\nR.__acroform__ = {};\nvar W = function(t, e) {\n    t.prototype = Object.create(e.prototype), t.prototype.constructor = t;\n}, V = function(t) {\n    return t * D;\n}, G = function(t) {\n    var e = new ct, n = xt.internal.getHeight(t) || 0, r = xt.internal.getWidth(t) || 0;\n    return e.BBox = [\n        0,\n        0,\n        Number(U(r)),\n        Number(U(n))\n    ], e;\n}, Y = R.__acroform__.setBit = function(t, e) {\n    if (t = t || 0, e = e || 0, isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.setBit\");\n    return t | 1 << e;\n}, J = R.__acroform__.clearBit = function(t, e) {\n    if (t = t || 0, e = e || 0, isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.clearBit\");\n    return t & ~(1 << e);\n}, X = R.__acroform__.getBit = function(t, e) {\n    if (isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.getBit\");\n    return t & 1 << e ? 1 : 0;\n}, K = R.__acroform__.getBitForPdf = function(t, e) {\n    if (isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.getBitForPdf\");\n    return X(t, e - 1);\n}, Z = R.__acroform__.setBitForPdf = function(t, e) {\n    if (isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.setBitForPdf\");\n    return Y(t, e - 1);\n}, $ = R.__acroform__.clearBitForPdf = function(t, e) {\n    if (isNaN(t) || isNaN(e)) throw new Error(\"Invalid arguments passed to jsPDF.API.__acroform__.clearBitForPdf\");\n    return J(t, e - 1);\n}, Q = R.__acroform__.calculateCoordinates = function(t, e) {\n    var n = e.internal.getHorizontalCoordinate, r = e.internal.getVerticalCoordinate, i = t[0], a = t[1], o = t[2], s = t[3], u = {};\n    return u.lowerLeft_X = n(i) || 0, u.lowerLeft_Y = r(a + s) || 0, u.upperRight_X = n(i + o) || 0, u.upperRight_Y = r(a) || 0, [\n        Number(U(u.lowerLeft_X)),\n        Number(U(u.lowerLeft_Y)),\n        Number(U(u.upperRight_X)),\n        Number(U(u.upperRight_Y))\n    ];\n}, tt = function(t) {\n    if (t.appearanceStreamContent) return t.appearanceStreamContent;\n    if (t.V || t.DV) {\n        var e = [], n = t._V || t.DV, r = et(t, n), i = t.scope.internal.getFont(t.fontName, t.fontStyle).id;\n        e.push(\"/Tx BMC\"), e.push(\"q\"), e.push(\"BT\"), e.push(t.scope.__private__.encodeColorString(t.color)), e.push(\"/\" + i + \" \" + U(r.fontSize) + \" Tf\"), e.push(\"1 0 0 1 0 0 Tm\"), e.push(r.text), e.push(\"ET\"), e.push(\"Q\"), e.push(\"EMC\");\n        var a = G(t);\n        return a.scope = t.scope, a.stream = e.join(\"\\n\"), a;\n    }\n}, et = function(t, e) {\n    var n = 0 === t.fontSize ? t.maxFontSize : t.fontSize, r = {\n        text: \"\",\n        fontSize: \"\"\n    }, i = (e = \")\" == (e = \"(\" == e.substr(0, 1) ? e.substr(1) : e).substr(e.length - 1) ? e.substr(0, e.length - 1) : e).split(\" \");\n    i = t.multiline ? i.map(function(t) {\n        return t.split(\"\\n\");\n    }) : i.map(function(t) {\n        return [\n            t\n        ];\n    });\n    var a = n, o = xt.internal.getHeight(t) || 0;\n    o = o < 0 ? -o : o;\n    var s = xt.internal.getWidth(t) || 0;\n    s = s < 0 ? -s : s;\n    var u = function(e, n, r) {\n        if (e + 1 < i.length) {\n            var a = n + \" \" + i[e + 1][0];\n            return nt(a, t, r).width <= s - 4;\n        }\n        return !1;\n    };\n    a++;\n    t: for(; a > 0;){\n        e = \"\", a--;\n        var c, l, h = nt(\"3\", t, a).height, f = t.multiline ? o - a : (o - h) / 2, d = f += 2, p = 0, g = 0, m = 0;\n        if (a <= 0) {\n            e = \"(...) Tj\\n\", e += \"% Width of Text: \" + nt(e, t, a = 12).width + \", FieldWidth:\" + s + \"\\n\";\n            break;\n        }\n        for(var v = \"\", b = 0, y = 0; y < i.length; y++)if (i.hasOwnProperty(y)) {\n            var w = !1;\n            if (1 !== i[y].length && m !== i[y].length - 1) {\n                if ((h + 2) * (b + 2) + 2 > o) continue t;\n                v += i[y][m], w = !0, g = y, y--;\n            } else {\n                v = \" \" == (v += i[y][m] + \" \").substr(v.length - 1) ? v.substr(0, v.length - 1) : v;\n                var N = parseInt(y), L = u(N, v, a), x = y >= i.length - 1;\n                if (L && !x) {\n                    v += \" \", m = 0;\n                    continue;\n                }\n                if (L || x) {\n                    if (x) g = N;\n                    else if (t.multiline && (h + 2) * (b + 2) + 2 > o) continue t;\n                } else {\n                    if (!t.multiline) continue t;\n                    if ((h + 2) * (b + 2) + 2 > o) continue t;\n                    g = N;\n                }\n            }\n            for(var A = \"\", S = p; S <= g; S++){\n                var _ = i[S];\n                if (t.multiline) {\n                    if (S === g) {\n                        A += _[m] + \" \", m = (m + 1) % _.length;\n                        continue;\n                    }\n                    if (S === p) {\n                        A += _[_.length - 1] + \" \";\n                        continue;\n                    }\n                }\n                A += _[0] + \" \";\n            }\n            switch(A = \" \" == A.substr(A.length - 1) ? A.substr(0, A.length - 1) : A, l = nt(A, t, a).width, t.textAlign){\n                case \"right\":\n                    c = s - l - 2;\n                    break;\n                case \"center\":\n                    c = (s - l) / 2;\n                    break;\n                default:\n                    c = 2;\n            }\n            e += U(c) + \" \" + U(d) + \" Td\\n\", e += \"(\" + T(A) + \") Tj\\n\", e += -U(c) + \" 0 Td\\n\", d = -(a + 2), l = 0, p = w ? g : g + 1, b++, v = \"\";\n        }\n        break;\n    }\n    return r.text = e, r.fontSize = a, r;\n}, nt = function(t, e, n) {\n    var r = e.scope.internal.getFont(e.fontName, e.fontStyle), i = e.scope.getStringUnitWidth(t, {\n        font: r,\n        fontSize: parseFloat(n),\n        charSpace: 0\n    }) * parseFloat(n);\n    return {\n        height: e.scope.getStringUnitWidth(\"3\", {\n            font: r,\n            fontSize: parseFloat(n),\n            charSpace: 0\n        }) * parseFloat(n) * 1.5,\n        width: i\n    };\n}, rt = {\n    fields: [],\n    xForms: [],\n    acroFormDictionaryRoot: null,\n    printedOut: !1,\n    internal: null,\n    isInitialized: !1\n}, it = function(t, e) {\n    var n = {\n        type: \"reference\",\n        object: t\n    };\n    void 0 === e.internal.getPageInfo(t.page).pageContext.annotations.find(function(t) {\n        return t.type === n.type && t.object === n.object;\n    }) && e.internal.getPageInfo(t.page).pageContext.annotations.push(n);\n}, at = function(e, n) {\n    if (n.scope = e, void 0 !== e.internal && (void 0 === e.internal.acroformPlugin || !1 === e.internal.acroformPlugin.isInitialized)) {\n        if (ht.FieldNum = 0, e.internal.acroformPlugin = JSON.parse(JSON.stringify(rt)), e.internal.acroformPlugin.acroFormDictionaryRoot) throw new Error(\"Exception while creating AcroformDictionary\");\n        D = e.internal.scaleFactor, e.internal.acroformPlugin.acroFormDictionaryRoot = new lt, e.internal.acroformPlugin.acroFormDictionaryRoot.scope = e, e.internal.acroformPlugin.acroFormDictionaryRoot._eventID = e.internal.events.subscribe(\"postPutResources\", function() {\n            !function(t) {\n                t.internal.events.unsubscribe(t.internal.acroformPlugin.acroFormDictionaryRoot._eventID), delete t.internal.acroformPlugin.acroFormDictionaryRoot._eventID, t.internal.acroformPlugin.printedOut = !0;\n            }(e);\n        }), e.internal.events.subscribe(\"buildDocument\", function() {\n            !function(t) {\n                t.internal.acroformPlugin.acroFormDictionaryRoot.objId = void 0;\n                var e = t.internal.acroformPlugin.acroFormDictionaryRoot.Fields;\n                for(var n in e)if (e.hasOwnProperty(n)) {\n                    var r = e[n];\n                    r.objId = void 0, r.hasAnnotation && it(r, t);\n                }\n            }(e);\n        }), e.internal.events.subscribe(\"putCatalog\", function() {\n            !function(t) {\n                if (void 0 === t.internal.acroformPlugin.acroFormDictionaryRoot) throw new Error(\"putCatalogCallback: Root missing.\");\n                t.internal.write(\"/AcroForm \" + t.internal.acroformPlugin.acroFormDictionaryRoot.objId + \" 0 R\");\n            }(e);\n        }), e.internal.events.subscribe(\"postPutPages\", function(n) {\n            !function(e, n) {\n                var r = !e;\n                for(var i in e || (n.internal.newObjectDeferredBegin(n.internal.acroformPlugin.acroFormDictionaryRoot.objId, !0), n.internal.acroformPlugin.acroFormDictionaryRoot.putStream()), e = e || n.internal.acroformPlugin.acroFormDictionaryRoot.Kids)if (e.hasOwnProperty(i)) {\n                    var a = e[i], o = [], s = a.Rect;\n                    if (a.Rect && (a.Rect = Q(a.Rect, n)), n.internal.newObjectDeferredBegin(a.objId, !0), a.DA = xt.createDefaultAppearanceStream(a), \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(a) && \"function\" == typeof a.getKeyValueListForStream && (o = a.getKeyValueListForStream()), a.Rect = s, a.hasAppearanceStream && !a.appearanceStreamContent) {\n                        var u = tt(a);\n                        o.push({\n                            key: \"AP\",\n                            value: \"<</N \" + u + \">>\"\n                        }), n.internal.acroformPlugin.xForms.push(u);\n                    }\n                    if (a.appearanceStreamContent) {\n                        var c = \"\";\n                        for(var l in a.appearanceStreamContent)if (a.appearanceStreamContent.hasOwnProperty(l)) {\n                            var h = a.appearanceStreamContent[l];\n                            if (c += \"/\" + l + \" \", c += \"<<\", Object.keys(h).length >= 1 || Array.isArray(h)) {\n                                for(var i in h)if (h.hasOwnProperty(i)) {\n                                    var f = h[i];\n                                    \"function\" == typeof f && (f = f.call(n, a)), c += \"/\" + i + \" \" + f + \" \", n.internal.acroformPlugin.xForms.indexOf(f) >= 0 || n.internal.acroformPlugin.xForms.push(f);\n                                }\n                            } else \"function\" == typeof (f = h) && (f = f.call(n, a)), c += \"/\" + i + \" \" + f, n.internal.acroformPlugin.xForms.indexOf(f) >= 0 || n.internal.acroformPlugin.xForms.push(f);\n                            c += \">>\";\n                        }\n                        o.push({\n                            key: \"AP\",\n                            value: \"<<\\n\" + c + \">>\"\n                        });\n                    }\n                    n.internal.putStream({\n                        additionalKeyValues: o,\n                        objectId: a.objId\n                    }), n.internal.out(\"endobj\");\n                }\n                r && function(e, n) {\n                    for(var r in e)if (e.hasOwnProperty(r)) {\n                        var i = r, a = e[r];\n                        n.internal.newObjectDeferredBegin(a.objId, !0), \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(a) && \"function\" == typeof a.putStream && a.putStream(), delete e[i];\n                    }\n                }(n.internal.acroformPlugin.xForms, n);\n            }(n, e);\n        }), e.internal.acroformPlugin.isInitialized = !0;\n    }\n}, ot = R.__acroform__.arrayToPdfArray = function(e, n, r) {\n    var i = function(t) {\n        return t;\n    };\n    if (Array.isArray(e)) {\n        for(var a = \"[\", o = 0; o < e.length; o++)switch(0 !== o && (a += \" \"), _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e[o])){\n            case \"boolean\":\n            case \"number\":\n            case \"object\":\n                a += e[o].toString();\n                break;\n            case \"string\":\n                \"/\" !== e[o].substr(0, 1) ? (void 0 !== n && r && (i = r.internal.getEncryptor(n)), a += \"(\" + T(i(e[o].toString())) + \")\") : a += e[o].toString();\n        }\n        return a + \"]\";\n    }\n    throw new Error(\"Invalid argument passed to jsPDF.__acroform__.arrayToPdfArray\");\n}, st = function(t, e, n) {\n    var r = function(t) {\n        return t;\n    };\n    return void 0 !== e && n && (r = n.internal.getEncryptor(e)), (t = t || \"\").toString(), \"(\" + T(r(t)) + \")\";\n}, ut = function() {\n    this._objId = void 0, this._scope = void 0, Object.defineProperty(this, \"objId\", {\n        get: function() {\n            if (void 0 === this._objId) {\n                if (void 0 === this.scope) return;\n                this._objId = this.scope.internal.newObjectDeferred();\n            }\n            return this._objId;\n        },\n        set: function(t) {\n            this._objId = t;\n        }\n    }), Object.defineProperty(this, \"scope\", {\n        value: this._scope,\n        writable: !0\n    });\n};\nut.prototype.toString = function() {\n    return this.objId + \" 0 R\";\n}, ut.prototype.putStream = function() {\n    var t = this.getKeyValueListForStream();\n    this.scope.internal.putStream({\n        data: this.stream,\n        additionalKeyValues: t,\n        objectId: this.objId\n    }), this.scope.internal.out(\"endobj\");\n}, ut.prototype.getKeyValueListForStream = function() {\n    var t = [], e = Object.getOwnPropertyNames(this).filter(function(t) {\n        return \"content\" != t && \"appearanceStreamContent\" != t && \"scope\" != t && \"objId\" != t && \"_\" != t.substring(0, 1);\n    });\n    for(var n in e)if (!1 === Object.getOwnPropertyDescriptor(this, e[n]).configurable) {\n        var r = e[n], i = this[r];\n        i && (Array.isArray(i) ? t.push({\n            key: r,\n            value: ot(i, this.objId, this.scope)\n        }) : i instanceof ut ? (i.scope = this.scope, t.push({\n            key: r,\n            value: i.objId + \" 0 R\"\n        })) : \"function\" != typeof i && t.push({\n            key: r,\n            value: i\n        }));\n    }\n    return t;\n};\nvar ct = function() {\n    ut.call(this), Object.defineProperty(this, \"Type\", {\n        value: \"/XObject\",\n        configurable: !1,\n        writable: !0\n    }), Object.defineProperty(this, \"Subtype\", {\n        value: \"/Form\",\n        configurable: !1,\n        writable: !0\n    }), Object.defineProperty(this, \"FormType\", {\n        value: 1,\n        configurable: !1,\n        writable: !0\n    });\n    var t, e = [];\n    Object.defineProperty(this, \"BBox\", {\n        configurable: !1,\n        get: function() {\n            return e;\n        },\n        set: function(t) {\n            e = t;\n        }\n    }), Object.defineProperty(this, \"Resources\", {\n        value: \"2 0 R\",\n        configurable: !1,\n        writable: !0\n    }), Object.defineProperty(this, \"stream\", {\n        enumerable: !1,\n        configurable: !0,\n        set: function(e) {\n            t = e.trim();\n        },\n        get: function() {\n            return t || null;\n        }\n    });\n};\nW(ct, ut);\nvar lt = function() {\n    ut.call(this);\n    var t, e = [];\n    Object.defineProperty(this, \"Kids\", {\n        enumerable: !1,\n        configurable: !0,\n        get: function() {\n            return e.length > 0 ? e : void 0;\n        }\n    }), Object.defineProperty(this, \"Fields\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return e;\n        }\n    }), Object.defineProperty(this, \"DA\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (t) {\n                var e = function(t) {\n                    return t;\n                };\n                return this.scope && (e = this.scope.internal.getEncryptor(this.objId)), \"(\" + T(e(t)) + \")\";\n            }\n        },\n        set: function(e) {\n            t = e;\n        }\n    });\n};\nW(lt, ut);\nvar ht = function t() {\n    ut.call(this);\n    var e = 4;\n    Object.defineProperty(this, \"F\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return e;\n        },\n        set: function(t) {\n            if (isNaN(t)) throw new Error('Invalid value \"' + t + '\" for attribute F supplied.');\n            e = t;\n        }\n    }), Object.defineProperty(this, \"showWhenPrinted\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(e, 3));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.F = Z(e, 3) : this.F = $(e, 3);\n        }\n    });\n    var n = 0;\n    Object.defineProperty(this, \"Ff\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return n;\n        },\n        set: function(t) {\n            if (isNaN(t)) throw new Error('Invalid value \"' + t + '\" for attribute Ff supplied.');\n            n = t;\n        }\n    });\n    var r = [];\n    Object.defineProperty(this, \"Rect\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (0 !== r.length) return r;\n        },\n        set: function(t) {\n            r = void 0 !== t ? t : [];\n        }\n    }), Object.defineProperty(this, \"x\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return !r || isNaN(r[0]) ? 0 : r[0];\n        },\n        set: function(t) {\n            r[0] = t;\n        }\n    }), Object.defineProperty(this, \"y\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return !r || isNaN(r[1]) ? 0 : r[1];\n        },\n        set: function(t) {\n            r[1] = t;\n        }\n    }), Object.defineProperty(this, \"width\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return !r || isNaN(r[2]) ? 0 : r[2];\n        },\n        set: function(t) {\n            r[2] = t;\n        }\n    }), Object.defineProperty(this, \"height\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return !r || isNaN(r[3]) ? 0 : r[3];\n        },\n        set: function(t) {\n            r[3] = t;\n        }\n    });\n    var i = \"\";\n    Object.defineProperty(this, \"FT\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return i;\n        },\n        set: function(t) {\n            switch(t){\n                case \"/Btn\":\n                case \"/Tx\":\n                case \"/Ch\":\n                case \"/Sig\":\n                    i = t;\n                    break;\n                default:\n                    throw new Error('Invalid value \"' + t + '\" for attribute FT supplied.');\n            }\n        }\n    });\n    var a = null;\n    Object.defineProperty(this, \"T\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            if (!a || a.length < 1) {\n                if (this instanceof yt) return;\n                a = \"FieldObject\" + t.FieldNum++;\n            }\n            var e = function(t) {\n                return t;\n            };\n            return this.scope && (e = this.scope.internal.getEncryptor(this.objId)), \"(\" + T(e(a)) + \")\";\n        },\n        set: function(t) {\n            a = t.toString();\n        }\n    }), Object.defineProperty(this, \"fieldName\", {\n        configurable: !0,\n        enumerable: !0,\n        get: function() {\n            return a;\n        },\n        set: function(t) {\n            a = t;\n        }\n    });\n    var o = \"helvetica\";\n    Object.defineProperty(this, \"fontName\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return o;\n        },\n        set: function(t) {\n            o = t;\n        }\n    });\n    var s = \"normal\";\n    Object.defineProperty(this, \"fontStyle\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return s;\n        },\n        set: function(t) {\n            s = t;\n        }\n    });\n    var u = 0;\n    Object.defineProperty(this, \"fontSize\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return u;\n        },\n        set: function(t) {\n            u = t;\n        }\n    });\n    var c = void 0;\n    Object.defineProperty(this, \"maxFontSize\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return void 0 === c ? 50 / D : c;\n        },\n        set: function(t) {\n            c = t;\n        }\n    });\n    var l = \"black\";\n    Object.defineProperty(this, \"color\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return l;\n        },\n        set: function(t) {\n            l = t;\n        }\n    });\n    var h = \"/F1 0 Tf 0 g\";\n    Object.defineProperty(this, \"DA\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            if (!(!h || this instanceof yt || this instanceof Nt)) return st(h, this.objId, this.scope);\n        },\n        set: function(t) {\n            t = t.toString(), h = t;\n        }\n    });\n    var f = null;\n    Object.defineProperty(this, \"DV\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (f) return this instanceof mt == 0 ? st(f, this.objId, this.scope) : f;\n        },\n        set: function(t) {\n            t = t.toString(), f = this instanceof mt == 0 ? \"(\" === t.substr(0, 1) ? z(t.substr(1, t.length - 2)) : z(t) : t;\n        }\n    }), Object.defineProperty(this, \"defaultValue\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return this instanceof mt == 1 ? z(f.substr(1, f.length - 1)) : f;\n        },\n        set: function(t) {\n            t = t.toString(), f = this instanceof mt == 1 ? \"/\" + t : t;\n        }\n    });\n    var d = null;\n    Object.defineProperty(this, \"_V\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (d) return d;\n        },\n        set: function(t) {\n            this.V = t;\n        }\n    }), Object.defineProperty(this, \"V\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            if (d) return this instanceof mt == 0 ? st(d, this.objId, this.scope) : d;\n        },\n        set: function(t) {\n            t = t.toString(), d = this instanceof mt == 0 ? \"(\" === t.substr(0, 1) ? z(t.substr(1, t.length - 2)) : z(t) : t;\n        }\n    }), Object.defineProperty(this, \"value\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return this instanceof mt == 1 ? z(d.substr(1, d.length - 1)) : d;\n        },\n        set: function(t) {\n            t = t.toString(), d = this instanceof mt == 1 ? \"/\" + t : t;\n        }\n    }), Object.defineProperty(this, \"hasAnnotation\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return this.Rect;\n        }\n    }), Object.defineProperty(this, \"Type\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return this.hasAnnotation ? \"/Annot\" : null;\n        }\n    }), Object.defineProperty(this, \"Subtype\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return this.hasAnnotation ? \"/Widget\" : null;\n        }\n    });\n    var p, g = !1;\n    Object.defineProperty(this, \"hasAppearanceStream\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return g;\n        },\n        set: function(t) {\n            t = Boolean(t), g = t;\n        }\n    }), Object.defineProperty(this, \"page\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            if (p) return p;\n        },\n        set: function(t) {\n            p = t;\n        }\n    }), Object.defineProperty(this, \"readOnly\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 1));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 1) : this.Ff = $(this.Ff, 1);\n        }\n    }), Object.defineProperty(this, \"required\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 2));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 2) : this.Ff = $(this.Ff, 2);\n        }\n    }), Object.defineProperty(this, \"noExport\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 3));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 3) : this.Ff = $(this.Ff, 3);\n        }\n    });\n    var m = null;\n    Object.defineProperty(this, \"Q\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            if (null !== m) return m;\n        },\n        set: function(t) {\n            if (-1 === [\n                0,\n                1,\n                2\n            ].indexOf(t)) throw new Error('Invalid value \"' + t + '\" for attribute Q supplied.');\n            m = t;\n        }\n    }), Object.defineProperty(this, \"textAlign\", {\n        get: function() {\n            var t;\n            switch(m){\n                case 0:\n                default:\n                    t = \"left\";\n                    break;\n                case 1:\n                    t = \"center\";\n                    break;\n                case 2:\n                    t = \"right\";\n            }\n            return t;\n        },\n        configurable: !0,\n        enumerable: !0,\n        set: function(t) {\n            switch(t){\n                case \"right\":\n                case 2:\n                    m = 2;\n                    break;\n                case \"center\":\n                case 1:\n                    m = 1;\n                    break;\n                default:\n                    m = 0;\n            }\n        }\n    });\n};\nW(ht, ut);\nvar ft = function() {\n    ht.call(this), this.FT = \"/Ch\", this.V = \"()\", this.fontName = \"zapfdingbats\";\n    var t = 0;\n    Object.defineProperty(this, \"TI\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            t = e;\n        }\n    }), Object.defineProperty(this, \"topIndex\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            t = e;\n        }\n    });\n    var e = [];\n    Object.defineProperty(this, \"Opt\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return ot(e, this.objId, this.scope);\n        },\n        set: function(t) {\n            var n, r;\n            r = [], \"string\" == typeof (n = t) && (r = function(t, e, n) {\n                n || (n = 1);\n                for(var r, i = []; r = e.exec(t);)i.push(r[n]);\n                return i;\n            }(n, /\\((.*?)\\)/g)), e = r;\n        }\n    }), this.getOptions = function() {\n        return e;\n    }, this.setOptions = function(t) {\n        e = t, this.sort && e.sort();\n    }, this.addOption = function(t) {\n        t = (t = t || \"\").toString(), e.push(t), this.sort && e.sort();\n    }, this.removeOption = function(t, n) {\n        for(n = n || !1, t = (t = t || \"\").toString(); -1 !== e.indexOf(t) && (e.splice(e.indexOf(t), 1), !1 !== n););\n    }, Object.defineProperty(this, \"combo\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 18));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 18) : this.Ff = $(this.Ff, 18);\n        }\n    }), Object.defineProperty(this, \"edit\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 19));\n        },\n        set: function(t) {\n            !0 === this.combo && (!0 === Boolean(t) ? this.Ff = Z(this.Ff, 19) : this.Ff = $(this.Ff, 19));\n        }\n    }), Object.defineProperty(this, \"sort\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 20));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? (this.Ff = Z(this.Ff, 20), e.sort()) : this.Ff = $(this.Ff, 20);\n        }\n    }), Object.defineProperty(this, \"multiSelect\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 22));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 22) : this.Ff = $(this.Ff, 22);\n        }\n    }), Object.defineProperty(this, \"doNotSpellCheck\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 23));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 23) : this.Ff = $(this.Ff, 23);\n        }\n    }), Object.defineProperty(this, \"commitOnSelChange\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 27));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 27) : this.Ff = $(this.Ff, 27);\n        }\n    }), this.hasAppearanceStream = !1;\n};\nW(ft, ht);\nvar dt = function() {\n    ft.call(this), this.fontName = \"helvetica\", this.combo = !1;\n};\nW(dt, ft);\nvar pt = function() {\n    dt.call(this), this.combo = !0;\n};\nW(pt, dt);\nvar gt = function() {\n    pt.call(this), this.edit = !0;\n};\nW(gt, pt);\nvar mt = function() {\n    ht.call(this), this.FT = \"/Btn\", Object.defineProperty(this, \"noToggleToOff\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 15));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 15) : this.Ff = $(this.Ff, 15);\n        }\n    }), Object.defineProperty(this, \"radio\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 16));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 16) : this.Ff = $(this.Ff, 16);\n        }\n    }), Object.defineProperty(this, \"pushButton\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 17));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 17) : this.Ff = $(this.Ff, 17);\n        }\n    }), Object.defineProperty(this, \"radioIsUnison\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 26));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 26) : this.Ff = $(this.Ff, 26);\n        }\n    });\n    var e, n = {};\n    Object.defineProperty(this, \"MK\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            var t = function(t) {\n                return t;\n            };\n            if (this.scope && (t = this.scope.internal.getEncryptor(this.objId)), 0 !== Object.keys(n).length) {\n                var e, r = [];\n                for(e in r.push(\"<<\"), n)r.push(\"/\" + e + \" (\" + T(t(n[e])) + \")\");\n                return r.push(\">>\"), r.join(\"\\n\");\n            }\n        },\n        set: function(e) {\n            \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) && (n = e);\n        }\n    }), Object.defineProperty(this, \"caption\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return n.CA || \"\";\n        },\n        set: function(t) {\n            \"string\" == typeof t && (n.CA = t);\n        }\n    }), Object.defineProperty(this, \"AS\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return e;\n        },\n        set: function(t) {\n            e = t;\n        }\n    }), Object.defineProperty(this, \"appearanceState\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return e.substr(1, e.length - 1);\n        },\n        set: function(t) {\n            e = \"/\" + t;\n        }\n    });\n};\nW(mt, ht);\nvar vt = function() {\n    mt.call(this), this.pushButton = !0;\n};\nW(vt, mt);\nvar bt = function() {\n    mt.call(this), this.radio = !0, this.pushButton = !1;\n    var t = [];\n    Object.defineProperty(this, \"Kids\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            t = void 0 !== e ? e : [];\n        }\n    });\n};\nW(bt, mt);\nvar yt = function() {\n    var e, n;\n    ht.call(this), Object.defineProperty(this, \"Parent\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return e;\n        },\n        set: function(t) {\n            e = t;\n        }\n    }), Object.defineProperty(this, \"optionName\", {\n        enumerable: !1,\n        configurable: !0,\n        get: function() {\n            return n;\n        },\n        set: function(t) {\n            n = t;\n        }\n    });\n    var r, i = {};\n    Object.defineProperty(this, \"MK\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            var t = function(t) {\n                return t;\n            };\n            this.scope && (t = this.scope.internal.getEncryptor(this.objId));\n            var e, n = [];\n            for(e in n.push(\"<<\"), i)n.push(\"/\" + e + \" (\" + T(t(i[e])) + \")\");\n            return n.push(\">>\"), n.join(\"\\n\");\n        },\n        set: function(e) {\n            \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) && (i = e);\n        }\n    }), Object.defineProperty(this, \"caption\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return i.CA || \"\";\n        },\n        set: function(t) {\n            \"string\" == typeof t && (i.CA = t);\n        }\n    }), Object.defineProperty(this, \"AS\", {\n        enumerable: !1,\n        configurable: !1,\n        get: function() {\n            return r;\n        },\n        set: function(t) {\n            r = t;\n        }\n    }), Object.defineProperty(this, \"appearanceState\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return r.substr(1, r.length - 1);\n        },\n        set: function(t) {\n            r = \"/\" + t;\n        }\n    }), this.caption = \"l\", this.appearanceState = \"Off\", this._AppearanceType = xt.RadioButton.Circle, this.appearanceStreamContent = this._AppearanceType.createAppearanceStream(this.optionName);\n};\nW(yt, ht), bt.prototype.setAppearance = function(t) {\n    if (!(\"createAppearanceStream\" in t) || !(\"getCA\" in t)) throw new Error(\"Couldn't assign Appearance to RadioButton. Appearance was Invalid!\");\n    for(var e in this.Kids)if (this.Kids.hasOwnProperty(e)) {\n        var n = this.Kids[e];\n        n.appearanceStreamContent = t.createAppearanceStream(n.optionName), n.caption = t.getCA();\n    }\n}, bt.prototype.createOption = function(t) {\n    var e = new yt;\n    return e.Parent = this, e.optionName = t, this.Kids.push(e), At.call(this.scope, e), e;\n};\nvar wt = function() {\n    mt.call(this), this.fontName = \"zapfdingbats\", this.caption = \"3\", this.appearanceState = \"On\", this.value = \"On\", this.textAlign = \"center\", this.appearanceStreamContent = xt.CheckBox.createAppearanceStream();\n};\nW(wt, mt);\nvar Nt = function() {\n    ht.call(this), this.FT = \"/Tx\", Object.defineProperty(this, \"multiline\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 13));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 13) : this.Ff = $(this.Ff, 13);\n        }\n    }), Object.defineProperty(this, \"fileSelect\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 21));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 21) : this.Ff = $(this.Ff, 21);\n        }\n    }), Object.defineProperty(this, \"doNotSpellCheck\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 23));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 23) : this.Ff = $(this.Ff, 23);\n        }\n    }), Object.defineProperty(this, \"doNotScroll\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 24));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 24) : this.Ff = $(this.Ff, 24);\n        }\n    }), Object.defineProperty(this, \"comb\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 25));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 25) : this.Ff = $(this.Ff, 25);\n        }\n    }), Object.defineProperty(this, \"richText\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 26));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 26) : this.Ff = $(this.Ff, 26);\n        }\n    });\n    var t = null;\n    Object.defineProperty(this, \"MaxLen\", {\n        enumerable: !0,\n        configurable: !1,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            t = e;\n        }\n    }), Object.defineProperty(this, \"maxLength\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return t;\n        },\n        set: function(e) {\n            Number.isInteger(e) && (t = e);\n        }\n    }), Object.defineProperty(this, \"hasAppearanceStream\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return this.V || this.DV;\n        }\n    });\n};\nW(Nt, ht);\nvar Lt = function() {\n    Nt.call(this), Object.defineProperty(this, \"password\", {\n        enumerable: !0,\n        configurable: !0,\n        get: function() {\n            return Boolean(K(this.Ff, 14));\n        },\n        set: function(t) {\n            !0 === Boolean(t) ? this.Ff = Z(this.Ff, 14) : this.Ff = $(this.Ff, 14);\n        }\n    }), this.password = !0;\n};\nW(Lt, Nt);\nvar xt = {\n    CheckBox: {\n        createAppearanceStream: function() {\n            return {\n                N: {\n                    On: xt.CheckBox.YesNormal\n                },\n                D: {\n                    On: xt.CheckBox.YesPushDown,\n                    Off: xt.CheckBox.OffPushDown\n                }\n            };\n        },\n        YesPushDown: function(t) {\n            var e = G(t);\n            e.scope = t.scope;\n            var n = [], r = t.scope.internal.getFont(t.fontName, t.fontStyle).id, i = t.scope.__private__.encodeColorString(t.color), a = et(t, t.caption);\n            return n.push(\"0.749023 g\"), n.push(\"0 0 \" + U(xt.internal.getWidth(t)) + \" \" + U(xt.internal.getHeight(t)) + \" re\"), n.push(\"f\"), n.push(\"BMC\"), n.push(\"q\"), n.push(\"0 0 1 rg\"), n.push(\"/\" + r + \" \" + U(a.fontSize) + \" Tf \" + i), n.push(\"BT\"), n.push(a.text), n.push(\"ET\"), n.push(\"Q\"), n.push(\"EMC\"), e.stream = n.join(\"\\n\"), e;\n        },\n        YesNormal: function(t) {\n            var e = G(t);\n            e.scope = t.scope;\n            var n = t.scope.internal.getFont(t.fontName, t.fontStyle).id, r = t.scope.__private__.encodeColorString(t.color), i = [], a = xt.internal.getHeight(t), o = xt.internal.getWidth(t), s = et(t, t.caption);\n            return i.push(\"1 g\"), i.push(\"0 0 \" + U(o) + \" \" + U(a) + \" re\"), i.push(\"f\"), i.push(\"q\"), i.push(\"0 0 1 rg\"), i.push(\"0 0 \" + U(o - 1) + \" \" + U(a - 1) + \" re\"), i.push(\"W\"), i.push(\"n\"), i.push(\"0 g\"), i.push(\"BT\"), i.push(\"/\" + n + \" \" + U(s.fontSize) + \" Tf \" + r), i.push(s.text), i.push(\"ET\"), i.push(\"Q\"), e.stream = i.join(\"\\n\"), e;\n        },\n        OffPushDown: function(t) {\n            var e = G(t);\n            e.scope = t.scope;\n            var n = [];\n            return n.push(\"0.749023 g\"), n.push(\"0 0 \" + U(xt.internal.getWidth(t)) + \" \" + U(xt.internal.getHeight(t)) + \" re\"), n.push(\"f\"), e.stream = n.join(\"\\n\"), e;\n        }\n    },\n    RadioButton: {\n        Circle: {\n            createAppearanceStream: function(t) {\n                var e = {\n                    D: {\n                        Off: xt.RadioButton.Circle.OffPushDown\n                    },\n                    N: {}\n                };\n                return e.N[t] = xt.RadioButton.Circle.YesNormal, e.D[t] = xt.RadioButton.Circle.YesPushDown, e;\n            },\n            getCA: function() {\n                return \"l\";\n            },\n            YesNormal: function(t) {\n                var e = G(t);\n                e.scope = t.scope;\n                var n = [], r = xt.internal.getWidth(t) <= xt.internal.getHeight(t) ? xt.internal.getWidth(t) / 4 : xt.internal.getHeight(t) / 4;\n                r = Number((.9 * r).toFixed(5));\n                var i = xt.internal.Bezier_C, a = Number((r * i).toFixed(5));\n                return n.push(\"q\"), n.push(\"1 0 0 1 \" + H(xt.internal.getWidth(t) / 2) + \" \" + H(xt.internal.getHeight(t) / 2) + \" cm\"), n.push(r + \" 0 m\"), n.push(r + \" \" + a + \" \" + a + \" \" + r + \" 0 \" + r + \" c\"), n.push(\"-\" + a + \" \" + r + \" -\" + r + \" \" + a + \" -\" + r + \" 0 c\"), n.push(\"-\" + r + \" -\" + a + \" -\" + a + \" -\" + r + \" 0 -\" + r + \" c\"), n.push(a + \" -\" + r + \" \" + r + \" -\" + a + \" \" + r + \" 0 c\"), n.push(\"f\"), n.push(\"Q\"), e.stream = n.join(\"\\n\"), e;\n            },\n            YesPushDown: function(t) {\n                var e = G(t);\n                e.scope = t.scope;\n                var n = [], r = xt.internal.getWidth(t) <= xt.internal.getHeight(t) ? xt.internal.getWidth(t) / 4 : xt.internal.getHeight(t) / 4;\n                r = Number((.9 * r).toFixed(5));\n                var i = Number((2 * r).toFixed(5)), a = Number((i * xt.internal.Bezier_C).toFixed(5)), o = Number((r * xt.internal.Bezier_C).toFixed(5));\n                return n.push(\"0.749023 g\"), n.push(\"q\"), n.push(\"1 0 0 1 \" + H(xt.internal.getWidth(t) / 2) + \" \" + H(xt.internal.getHeight(t) / 2) + \" cm\"), n.push(i + \" 0 m\"), n.push(i + \" \" + a + \" \" + a + \" \" + i + \" 0 \" + i + \" c\"), n.push(\"-\" + a + \" \" + i + \" -\" + i + \" \" + a + \" -\" + i + \" 0 c\"), n.push(\"-\" + i + \" -\" + a + \" -\" + a + \" -\" + i + \" 0 -\" + i + \" c\"), n.push(a + \" -\" + i + \" \" + i + \" -\" + a + \" \" + i + \" 0 c\"), n.push(\"f\"), n.push(\"Q\"), n.push(\"0 g\"), n.push(\"q\"), n.push(\"1 0 0 1 \" + H(xt.internal.getWidth(t) / 2) + \" \" + H(xt.internal.getHeight(t) / 2) + \" cm\"), n.push(r + \" 0 m\"), n.push(r + \" \" + o + \" \" + o + \" \" + r + \" 0 \" + r + \" c\"), n.push(\"-\" + o + \" \" + r + \" -\" + r + \" \" + o + \" -\" + r + \" 0 c\"), n.push(\"-\" + r + \" -\" + o + \" -\" + o + \" -\" + r + \" 0 -\" + r + \" c\"), n.push(o + \" -\" + r + \" \" + r + \" -\" + o + \" \" + r + \" 0 c\"), n.push(\"f\"), n.push(\"Q\"), e.stream = n.join(\"\\n\"), e;\n            },\n            OffPushDown: function(t) {\n                var e = G(t);\n                e.scope = t.scope;\n                var n = [], r = xt.internal.getWidth(t) <= xt.internal.getHeight(t) ? xt.internal.getWidth(t) / 4 : xt.internal.getHeight(t) / 4;\n                r = Number((.9 * r).toFixed(5));\n                var i = Number((2 * r).toFixed(5)), a = Number((i * xt.internal.Bezier_C).toFixed(5));\n                return n.push(\"0.749023 g\"), n.push(\"q\"), n.push(\"1 0 0 1 \" + H(xt.internal.getWidth(t) / 2) + \" \" + H(xt.internal.getHeight(t) / 2) + \" cm\"), n.push(i + \" 0 m\"), n.push(i + \" \" + a + \" \" + a + \" \" + i + \" 0 \" + i + \" c\"), n.push(\"-\" + a + \" \" + i + \" -\" + i + \" \" + a + \" -\" + i + \" 0 c\"), n.push(\"-\" + i + \" -\" + a + \" -\" + a + \" -\" + i + \" 0 -\" + i + \" c\"), n.push(a + \" -\" + i + \" \" + i + \" -\" + a + \" \" + i + \" 0 c\"), n.push(\"f\"), n.push(\"Q\"), e.stream = n.join(\"\\n\"), e;\n            }\n        },\n        Cross: {\n            createAppearanceStream: function(t) {\n                var e = {\n                    D: {\n                        Off: xt.RadioButton.Cross.OffPushDown\n                    },\n                    N: {}\n                };\n                return e.N[t] = xt.RadioButton.Cross.YesNormal, e.D[t] = xt.RadioButton.Cross.YesPushDown, e;\n            },\n            getCA: function() {\n                return \"8\";\n            },\n            YesNormal: function(t) {\n                var e = G(t);\n                e.scope = t.scope;\n                var n = [], r = xt.internal.calculateCross(t);\n                return n.push(\"q\"), n.push(\"1 1 \" + U(xt.internal.getWidth(t) - 2) + \" \" + U(xt.internal.getHeight(t) - 2) + \" re\"), n.push(\"W\"), n.push(\"n\"), n.push(U(r.x1.x) + \" \" + U(r.x1.y) + \" m\"), n.push(U(r.x2.x) + \" \" + U(r.x2.y) + \" l\"), n.push(U(r.x4.x) + \" \" + U(r.x4.y) + \" m\"), n.push(U(r.x3.x) + \" \" + U(r.x3.y) + \" l\"), n.push(\"s\"), n.push(\"Q\"), e.stream = n.join(\"\\n\"), e;\n            },\n            YesPushDown: function(t) {\n                var e = G(t);\n                e.scope = t.scope;\n                var n = xt.internal.calculateCross(t), r = [];\n                return r.push(\"0.749023 g\"), r.push(\"0 0 \" + U(xt.internal.getWidth(t)) + \" \" + U(xt.internal.getHeight(t)) + \" re\"), r.push(\"f\"), r.push(\"q\"), r.push(\"1 1 \" + U(xt.internal.getWidth(t) - 2) + \" \" + U(xt.internal.getHeight(t) - 2) + \" re\"), r.push(\"W\"), r.push(\"n\"), r.push(U(n.x1.x) + \" \" + U(n.x1.y) + \" m\"), r.push(U(n.x2.x) + \" \" + U(n.x2.y) + \" l\"), r.push(U(n.x4.x) + \" \" + U(n.x4.y) + \" m\"), r.push(U(n.x3.x) + \" \" + U(n.x3.y) + \" l\"), r.push(\"s\"), r.push(\"Q\"), e.stream = r.join(\"\\n\"), e;\n            },\n            OffPushDown: function(t) {\n                var e = G(t);\n                e.scope = t.scope;\n                var n = [];\n                return n.push(\"0.749023 g\"), n.push(\"0 0 \" + U(xt.internal.getWidth(t)) + \" \" + U(xt.internal.getHeight(t)) + \" re\"), n.push(\"f\"), e.stream = n.join(\"\\n\"), e;\n            }\n        }\n    },\n    createDefaultAppearanceStream: function(t) {\n        var e = t.scope.internal.getFont(t.fontName, t.fontStyle).id, n = t.scope.__private__.encodeColorString(t.color);\n        return \"/\" + e + \" \" + t.fontSize + \" Tf \" + n;\n    }\n};\nxt.internal = {\n    Bezier_C: .551915024494,\n    calculateCross: function(t) {\n        var e = xt.internal.getWidth(t), n = xt.internal.getHeight(t), r = Math.min(e, n);\n        return {\n            x1: {\n                x: (e - r) / 2,\n                y: (n - r) / 2 + r\n            },\n            x2: {\n                x: (e - r) / 2 + r,\n                y: (n - r) / 2\n            },\n            x3: {\n                x: (e - r) / 2,\n                y: (n - r) / 2\n            },\n            x4: {\n                x: (e - r) / 2 + r,\n                y: (n - r) / 2 + r\n            }\n        };\n    }\n}, xt.internal.getWidth = function(e) {\n    var n = 0;\n    return \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) && (n = V(e.Rect[2])), n;\n}, xt.internal.getHeight = function(e) {\n    var n = 0;\n    return \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) && (n = V(e.Rect[3])), n;\n};\nvar At = R.addField = function(t) {\n    if (at(this, t), !(t instanceof ht)) throw new Error(\"Invalid argument passed to jsPDF.addField.\");\n    var e;\n    return (e = t).scope.internal.acroformPlugin.printedOut && (e.scope.internal.acroformPlugin.printedOut = !1, e.scope.internal.acroformPlugin.acroFormDictionaryRoot = null), e.scope.internal.acroformPlugin.acroFormDictionaryRoot.Fields.push(e), t.page = t.scope.internal.getCurrentPageInfo().pageNumber, this;\n};\nR.AcroFormChoiceField = ft, R.AcroFormListBox = dt, R.AcroFormComboBox = pt, R.AcroFormEditBox = gt, R.AcroFormButton = mt, R.AcroFormPushButton = vt, R.AcroFormRadioButton = bt, R.AcroFormCheckBox = wt, R.AcroFormTextField = Nt, R.AcroFormPasswordField = Lt, R.AcroFormAppearance = xt, R.AcroForm = {\n    ChoiceField: ft,\n    ListBox: dt,\n    ComboBox: pt,\n    EditBox: gt,\n    Button: mt,\n    PushButton: vt,\n    RadioButton: bt,\n    CheckBox: wt,\n    TextField: Nt,\n    PasswordField: Lt,\n    Appearance: xt\n}, E.AcroForm = {\n    ChoiceField: ft,\n    ListBox: dt,\n    ComboBox: pt,\n    EditBox: gt,\n    Button: mt,\n    PushButton: vt,\n    RadioButton: bt,\n    CheckBox: wt,\n    TextField: Nt,\n    PasswordField: Lt,\n    Appearance: xt\n};\nvar St = E.AcroForm;\nfunction _t(t) {\n    return t.reduce(function(t, e, n) {\n        return t[e] = n, t;\n    }, {});\n}\n!function(e) {\n    var n = \"addImage_\";\n    e.__addimage__ = {};\n    var r = \"UNKNOWN\", i = {\n        PNG: [\n            [\n                137,\n                80,\n                78,\n                71\n            ]\n        ],\n        TIFF: [\n            [\n                77,\n                77,\n                0,\n                42\n            ],\n            [\n                73,\n                73,\n                42,\n                0\n            ]\n        ],\n        JPEG: [\n            [\n                255,\n                216,\n                255,\n                224,\n                void 0,\n                void 0,\n                74,\n                70,\n                73,\n                70,\n                0\n            ],\n            [\n                255,\n                216,\n                255,\n                225,\n                void 0,\n                void 0,\n                69,\n                120,\n                105,\n                102,\n                0,\n                0\n            ],\n            [\n                255,\n                216,\n                255,\n                219\n            ],\n            [\n                255,\n                216,\n                255,\n                238\n            ]\n        ],\n        JPEG2000: [\n            [\n                0,\n                0,\n                0,\n                12,\n                106,\n                80,\n                32,\n                32\n            ]\n        ],\n        GIF87a: [\n            [\n                71,\n                73,\n                70,\n                56,\n                55,\n                97\n            ]\n        ],\n        GIF89a: [\n            [\n                71,\n                73,\n                70,\n                56,\n                57,\n                97\n            ]\n        ],\n        WEBP: [\n            [\n                82,\n                73,\n                70,\n                70,\n                void 0,\n                void 0,\n                void 0,\n                void 0,\n                87,\n                69,\n                66,\n                80\n            ]\n        ],\n        BMP: [\n            [\n                66,\n                77\n            ],\n            [\n                66,\n                65\n            ],\n            [\n                67,\n                73\n            ],\n            [\n                67,\n                80\n            ],\n            [\n                73,\n                67\n            ],\n            [\n                80,\n                84\n            ]\n        ]\n    }, a = e.__addimage__.getImageFileTypeByImageData = function(t, e) {\n        var n, a, o, s, u, c = r;\n        if (\"RGBA\" === (e = e || r) || void 0 !== t.data && t.data instanceof Uint8ClampedArray && \"height\" in t && \"width\" in t) return \"RGBA\";\n        if (A(t)) for(u in i)for(o = i[u], n = 0; n < o.length; n += 1){\n            for(s = !0, a = 0; a < o[n].length; a += 1)if (void 0 !== o[n][a] && o[n][a] !== t[a]) {\n                s = !1;\n                break;\n            }\n            if (!0 === s) {\n                c = u;\n                break;\n            }\n        }\n        else for(u in i)for(o = i[u], n = 0; n < o.length; n += 1){\n            for(s = !0, a = 0; a < o[n].length; a += 1)if (void 0 !== o[n][a] && o[n][a] !== t.charCodeAt(a)) {\n                s = !1;\n                break;\n            }\n            if (!0 === s) {\n                c = u;\n                break;\n            }\n        }\n        return c === r && e !== r && (c = e), c;\n    }, o = function t(e) {\n        for(var n = this.internal.write, r = this.internal.putStream, i = (0, this.internal.getFilters)(); -1 !== i.indexOf(\"FlateEncode\");)i.splice(i.indexOf(\"FlateEncode\"), 1);\n        e.objectId = this.internal.newObject();\n        var a = [];\n        if (a.push({\n            key: \"Type\",\n            value: \"/XObject\"\n        }), a.push({\n            key: \"Subtype\",\n            value: \"/Image\"\n        }), a.push({\n            key: \"Width\",\n            value: e.width\n        }), a.push({\n            key: \"Height\",\n            value: e.height\n        }), e.colorSpace === y.INDEXED ? a.push({\n            key: \"ColorSpace\",\n            value: \"[/Indexed /DeviceRGB \" + (e.palette.length / 3 - 1) + \" \" + (\"sMask\" in e && void 0 !== e.sMask ? e.objectId + 2 : e.objectId + 1) + \" 0 R]\"\n        }) : (a.push({\n            key: \"ColorSpace\",\n            value: \"/\" + e.colorSpace\n        }), e.colorSpace === y.DEVICE_CMYK && a.push({\n            key: \"Decode\",\n            value: \"[1 0 1 0 1 0 1 0]\"\n        })), a.push({\n            key: \"BitsPerComponent\",\n            value: e.bitsPerComponent\n        }), \"decodeParameters\" in e && void 0 !== e.decodeParameters && a.push({\n            key: \"DecodeParms\",\n            value: \"<<\" + e.decodeParameters + \">>\"\n        }), \"transparency\" in e && Array.isArray(e.transparency) && e.transparency.length > 0) {\n            for(var o = \"\", s = 0, u = e.transparency.length; s < u; s++)o += e.transparency[s] + \" \" + e.transparency[s] + \" \";\n            a.push({\n                key: \"Mask\",\n                value: \"[\" + o + \"]\"\n            });\n        }\n        void 0 !== e.sMask && a.push({\n            key: \"SMask\",\n            value: e.objectId + 1 + \" 0 R\"\n        });\n        var c = void 0 !== e.filter ? [\n            \"/\" + e.filter\n        ] : void 0;\n        if (r({\n            data: e.data,\n            additionalKeyValues: a,\n            alreadyAppliedFilters: c,\n            objectId: e.objectId\n        }), n(\"endobj\"), \"sMask\" in e && void 0 !== e.sMask) {\n            var l, h = null !== (l = e.sMaskBitsPerComponent) && void 0 !== l ? l : e.bitsPerComponent, f = {\n                width: e.width,\n                height: e.height,\n                colorSpace: \"DeviceGray\",\n                bitsPerComponent: h,\n                data: e.sMask\n            };\n            \"filter\" in e && (f.decodeParameters = \"/Predictor \".concat(e.predictor, \" /Colors 1 /BitsPerComponent \").concat(h, \" /Columns \").concat(e.width), f.filter = e.filter), t.call(this, f);\n        }\n        if (e.colorSpace === y.INDEXED) {\n            var d = this.internal.newObject();\n            r({\n                data: _(new Uint8Array(e.palette)),\n                objectId: d\n            }), n(\"endobj\");\n        }\n    }, s = function() {\n        var t = this.internal.collections[n + \"images\"];\n        for(var e in t)o.call(this, t[e]);\n    }, u = function() {\n        var t, e = this.internal.collections[n + \"images\"], r = this.internal.write;\n        for(var i in e)r(\"/I\" + (t = e[i]).index, t.objectId, \"0\", \"R\");\n    }, c = function() {\n        this.internal.collections[n + \"images\"] || (this.internal.collections[n + \"images\"] = {}, this.internal.events.subscribe(\"putResources\", s), this.internal.events.subscribe(\"putXobjectDict\", u));\n    }, l = function() {\n        var t = this.internal.collections[n + \"images\"];\n        return c.call(this), t;\n    }, h = function() {\n        return Object.keys(this.internal.collections[n + \"images\"]).length;\n    }, d = function(t) {\n        return \"function\" == typeof e[\"process\" + t.toUpperCase()];\n    }, p = function(e) {\n        return \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e) && 1 === e.nodeType;\n    }, g = function(t, n) {\n        if (\"IMG\" === t.nodeName && t.hasAttribute(\"src\")) {\n            var r = \"\" + t.getAttribute(\"src\");\n            if (0 === r.indexOf(\"data:image/\")) return f(unescape(r).split(\"base64,\").pop());\n            var i = e.loadFile(r, !0);\n            if (void 0 !== i) return i;\n        }\n        if (\"CANVAS\" === t.nodeName) {\n            if (0 === t.width || 0 === t.height) throw new Error(\"Given canvas must have data. Canvas width: \" + t.width + \", height: \" + t.height);\n            var a;\n            switch(n){\n                case \"PNG\":\n                    a = \"image/png\";\n                    break;\n                case \"WEBP\":\n                    a = \"image/webp\";\n                    break;\n                default:\n                    a = \"image/jpeg\";\n            }\n            return f(t.toDataURL(a, 1).split(\"base64,\").pop());\n        }\n    }, m = function(t) {\n        var e = this.internal.collections[n + \"images\"];\n        if (e) {\n            for(var r in e)if (t === e[r].alias) return e[r];\n        }\n    }, v = function(t, e, n) {\n        return t || e || (t = -96, e = -96), t < 0 && (t = -1 * n.width * 72 / t / this.internal.scaleFactor), e < 0 && (e = -1 * n.height * 72 / e / this.internal.scaleFactor), 0 === t && (t = e * n.width / n.height), 0 === e && (e = t * n.height / n.width), [\n            t,\n            e\n        ];\n    }, b = function(t, e, n, r, i, a) {\n        var o = v.call(this, n, r, i), s = this.internal.getCoordinateString, u = this.internal.getVerticalCoordinateString, c = l.call(this);\n        if (n = o[0], r = o[1], c[i.index] = i, a) {\n            a *= Math.PI / 180;\n            var h = Math.cos(a), f = Math.sin(a), d = function(t) {\n                return t.toFixed(4);\n            }, p = [\n                d(h),\n                d(f),\n                d(-1 * f),\n                d(h),\n                0,\n                0,\n                \"cm\"\n            ];\n        }\n        this.internal.write(\"q\"), a ? (this.internal.write([\n            1,\n            \"0\",\n            \"0\",\n            1,\n            s(t),\n            u(e + r),\n            \"cm\"\n        ].join(\" \")), this.internal.write(p.join(\" \")), this.internal.write([\n            s(n),\n            \"0\",\n            \"0\",\n            s(r),\n            \"0\",\n            \"0\",\n            \"cm\"\n        ].join(\" \"))) : this.internal.write([\n            s(n),\n            \"0\",\n            \"0\",\n            s(r),\n            s(t),\n            u(e + r),\n            \"cm\"\n        ].join(\" \")), this.isAdvancedAPI() && this.internal.write([\n            1,\n            0,\n            0,\n            -1,\n            0,\n            0,\n            \"cm\"\n        ].join(\" \")), this.internal.write(\"/I\" + i.index + \" Do\"), this.internal.write(\"Q\");\n    }, y = e.color_spaces = {\n        DEVICE_RGB: \"DeviceRGB\",\n        DEVICE_GRAY: \"DeviceGray\",\n        DEVICE_CMYK: \"DeviceCMYK\",\n        CAL_GREY: \"CalGray\",\n        CAL_RGB: \"CalRGB\",\n        LAB: \"Lab\",\n        ICC_BASED: \"ICCBased\",\n        INDEXED: \"Indexed\",\n        PATTERN: \"Pattern\",\n        SEPARATION: \"Separation\",\n        DEVICE_N: \"DeviceN\"\n    };\n    e.decode = {\n        DCT_DECODE: \"DCTDecode\",\n        FLATE_DECODE: \"FlateDecode\",\n        LZW_DECODE: \"LZWDecode\",\n        JPX_DECODE: \"JPXDecode\",\n        JBIG2_DECODE: \"JBIG2Decode\",\n        ASCII85_DECODE: \"ASCII85Decode\",\n        ASCII_HEX_DECODE: \"ASCIIHexDecode\",\n        RUN_LENGTH_DECODE: \"RunLengthDecode\",\n        CCITT_FAX_DECODE: \"CCITTFaxDecode\"\n    };\n    var w = e.image_compression = {\n        NONE: \"NONE\",\n        FAST: \"FAST\",\n        MEDIUM: \"MEDIUM\",\n        SLOW: \"SLOW\"\n    }, N = e.__addimage__.sHashCode = function(t) {\n        var e, n, r = 0;\n        if (\"string\" == typeof t) for(n = t.length, e = 0; e < n; e++)r = (r << 5) - r + t.charCodeAt(e), r |= 0;\n        else if (A(t)) for(n = t.byteLength / 2, e = 0; e < n; e++)r = (r << 5) - r + t[e], r |= 0;\n        return r;\n    }, L = e.__addimage__.validateStringAsBase64 = function(t) {\n        (t = t || \"\").toString().trim();\n        var e = !0;\n        return 0 === t.length && (e = !1), t.length % 4 != 0 && (e = !1), !1 === /^[A-Za-z0-9+/]+$/.test(t.substr(0, t.length - 2)) && (e = !1), !1 === /^[A-Za-z0-9/][A-Za-z0-9+/]|[A-Za-z0-9+/]=|==$/.test(t.substr(-2)) && (e = !1), e;\n    }, x = e.__addimage__.extractImageFromDataUrl = function(t) {\n        if (null == t) return null;\n        if (!(t = t.trim()).startsWith(\"data:\")) return null;\n        var e = t.indexOf(\",\");\n        return e < 0 ? null : t.substring(0, e).trim().endsWith(\"base64\") ? t.substring(e + 1) : null;\n    };\n    e.__addimage__.isArrayBuffer = function(t) {\n        return t instanceof ArrayBuffer;\n    };\n    var A = e.__addimage__.isArrayBufferView = function(t) {\n        return t instanceof Int8Array || t instanceof Uint8Array || t instanceof Uint8ClampedArray || t instanceof Int16Array || t instanceof Uint16Array || t instanceof Int32Array || t instanceof Uint32Array || t instanceof Float32Array || t instanceof Float64Array;\n    }, S = e.__addimage__.binaryStringToUint8Array = function(t) {\n        for(var e = t.length, n = new Uint8Array(e), r = 0; r < e; r++)n[r] = t.charCodeAt(r);\n        return n;\n    }, _ = e.__addimage__.arrayBufferToBinaryString = function(t) {\n        for(var e = \"\", n = A(t) ? t : new Uint8Array(t), r = 0; r < n.length; r += 8192)e += String.fromCharCode.apply(null, n.subarray(r, r + 8192));\n        return e;\n    };\n    e.addImage = function() {\n        var e, n, i, a, o, s, u, l, h;\n        if (\"number\" == typeof arguments[1] ? (n = r, i = arguments[1], a = arguments[2], o = arguments[3], s = arguments[4], u = arguments[5], l = arguments[6], h = arguments[7]) : (n = arguments[1], i = arguments[2], a = arguments[3], o = arguments[4], s = arguments[5], u = arguments[6], l = arguments[7], h = arguments[8]), \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e = arguments[0]) && !p(e) && \"imageData\" in e) {\n            var f = e;\n            e = f.imageData, n = f.format || n || r, i = f.x || i || 0, a = f.y || a || 0, o = f.w || f.width || o, s = f.h || f.height || s, u = f.alias || u, l = f.compression || l, h = f.rotation || f.angle || h;\n        }\n        var d = this.internal.getFilters();\n        if (void 0 === l && -1 !== d.indexOf(\"FlateEncode\") && (l = \"SLOW\"), isNaN(i) || isNaN(a)) throw new Error(\"Invalid coordinates passed to jsPDF.addImage\");\n        c.call(this);\n        var g = P.call(this, e, n, u, l);\n        return b.call(this, i, a, o, s, g, h), this;\n    };\n    var P = function(t, n, i, o) {\n        var s, u, c;\n        if (\"string\" == typeof t && a(t) === r) {\n            t = unescape(t);\n            var l = k(t, !1);\n            (\"\" !== l || void 0 !== (l = e.loadFile(t, !0))) && (t = l);\n        }\n        if (p(t) && (t = g(t, n)), n = a(t, n), !d(n)) throw new Error(\"addImage does not support files of type '\" + n + \"', please ensure that a plugin for '\" + n + \"' support is added.\");\n        if ((null == (c = i) || 0 === c.length) && (i = function(t) {\n            return \"string\" == typeof t || A(t) ? N(t) : A(t.data) ? N(t.data) : null;\n        }(t)), (s = m.call(this, i)) || (t instanceof Uint8Array || \"RGBA\" === n || (u = t, t = S(t)), s = this[\"process\" + n.toUpperCase()](t, h.call(this), i, function(t) {\n            return t && \"string\" == typeof t && (t = t.toUpperCase()), t in e.image_compression ? t : w.NONE;\n        }(o), u)), !s) throw new Error(\"An unknown error occurred whilst processing the image.\");\n        return s;\n    }, k = e.__addimage__.convertBase64ToBinaryString = function(t, e) {\n        e = \"boolean\" != typeof e || e;\n        var n, r = \"\";\n        if (\"string\" == typeof t) {\n            var i;\n            n = null !== (i = x(t)) && void 0 !== i ? i : t;\n            try {\n                r = f(n);\n            } catch (a) {\n                if (e) throw L(n) ? new Error(\"atob-Error in jsPDF.convertBase64ToBinaryString \" + a.message) : new Error(\"Supplied Data is not a valid base64-String jsPDF.convertBase64ToBinaryString \");\n            }\n        }\n        return r;\n    };\n    e.getImageProperties = function(t) {\n        var n, i, o = \"\";\n        if (p(t) && (t = g(t)), \"string\" == typeof t && a(t) === r && (\"\" === (o = k(t, !1)) && (o = e.loadFile(t) || \"\"), t = o), i = a(t), !d(i)) throw new Error(\"addImage does not support files of type '\" + i + \"', please ensure that a plugin for '\" + i + \"' support is added.\");\n        if (t instanceof Uint8Array || (t = S(t)), !(n = this[\"process\" + i.toUpperCase()](t))) throw new Error(\"An unknown error occurred whilst processing the image\");\n        return n.fileType = i, n;\n    };\n}(E.API), /**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = function(t) {\n        if (void 0 !== t && \"\" != t) return !0;\n    };\n    E.API.events.push([\n        \"addPage\",\n        function(t) {\n            this.internal.getPageInfo(t.pageNumber).pageContext.annotations = [];\n        }\n    ]), t.events.push([\n        \"putPage\",\n        function(t) {\n            for(var n, r, i, a = this.internal.getCoordinateString, o = this.internal.getVerticalCoordinateString, s = this.internal.getPageInfoByObjId(t.objId), u = t.pageContext.annotations, c = !1, l = 0; l < u.length && !c; l++)switch((n = u[l]).type){\n                case \"link\":\n                    (e(n.options.url) || e(n.options.pageNumber)) && (c = !0);\n                    break;\n                case \"reference\":\n                case \"text\":\n                case \"freetext\":\n                    c = !0;\n            }\n            if (0 != c) {\n                this.internal.write(\"/Annots [\");\n                for(var h = 0; h < u.length; h++){\n                    n = u[h];\n                    var f = this.internal.pdfEscape, d = this.internal.getEncryptor(t.objId);\n                    switch(n.type){\n                        case \"reference\":\n                            this.internal.write(\" \" + n.object.objId + \" 0 R \");\n                            break;\n                        case \"text\":\n                            var p = this.internal.newAdditionalObject(), g = this.internal.newAdditionalObject(), m = this.internal.getEncryptor(p.objId), v = n.title || \"Note\";\n                            i = \"<</Type /Annot /Subtype /Text \" + (r = \"/Rect [\" + a(n.bounds.x) + \" \" + o(n.bounds.y + n.bounds.h) + \" \" + a(n.bounds.x + n.bounds.w) + \" \" + o(n.bounds.y) + \"] \") + \"/Contents (\" + f(m(n.contents)) + \")\", i += \" /Popup \" + g.objId + \" 0 R\", i += \" /P \" + s.objId + \" 0 R\", i += \" /T (\" + f(m(v)) + \") >>\", p.content = i;\n                            var b = p.objId + \" 0 R\";\n                            i = \"<</Type /Annot /Subtype /Popup \" + (r = \"/Rect [\" + a(n.bounds.x + 30) + \" \" + o(n.bounds.y + n.bounds.h) + \" \" + a(n.bounds.x + n.bounds.w + 30) + \" \" + o(n.bounds.y) + \"] \") + \" /Parent \" + b, n.open && (i += \" /Open true\"), i += \" >>\", g.content = i, this.internal.write(p.objId, \"0 R\", g.objId, \"0 R\");\n                            break;\n                        case \"freetext\":\n                            r = \"/Rect [\" + a(n.bounds.x) + \" \" + o(n.bounds.y) + \" \" + a(n.bounds.x + n.bounds.w) + \" \" + o(n.bounds.y + n.bounds.h) + \"] \";\n                            var y = n.color || \"#000000\";\n                            i = \"<</Type /Annot /Subtype /FreeText \" + r + \"/Contents (\" + f(d(n.contents)) + \")\", i += \" /DS(font: Helvetica,sans-serif 12.0pt; text-align:left; color:#\" + y + \")\", i += \" /Border [0 0 0]\", i += \" >>\", this.internal.write(i);\n                            break;\n                        case \"link\":\n                            if (n.options.name) {\n                                var w = this.annotations._nameMap[n.options.name];\n                                n.options.pageNumber = w.page, n.options.top = w.y;\n                            } else n.options.top || (n.options.top = 0);\n                            if (r = \"/Rect [\" + n.finalBounds.x + \" \" + n.finalBounds.y + \" \" + n.finalBounds.w + \" \" + n.finalBounds.h + \"] \", i = \"\", n.options.url) i = \"<</Type /Annot /Subtype /Link \" + r + \"/Border [0 0 0] /A <</S /URI /URI (\" + f(d(n.options.url)) + \") >>\";\n                            else if (n.options.pageNumber) switch(i = \"<</Type /Annot /Subtype /Link \" + r + \"/Border [0 0 0] /Dest [\" + this.internal.getPageInfo(n.options.pageNumber).objId + \" 0 R\", n.options.magFactor = n.options.magFactor || \"XYZ\", n.options.magFactor){\n                                case \"Fit\":\n                                    i += \" /Fit]\";\n                                    break;\n                                case \"FitH\":\n                                    i += \" /FitH \" + n.options.top + \"]\";\n                                    break;\n                                case \"FitV\":\n                                    n.options.left = n.options.left || 0, i += \" /FitV \" + n.options.left + \"]\";\n                                    break;\n                                default:\n                                    var N = o(n.options.top);\n                                    n.options.left = n.options.left || 0, void 0 === n.options.zoom && (n.options.zoom = 0), i += \" /XYZ \" + n.options.left + \" \" + N + \" \" + n.options.zoom + \"]\";\n                            }\n                            \"\" != i && (i += \" >>\", this.internal.write(i));\n                    }\n                }\n                this.internal.write(\"]\");\n            }\n        }\n    ]), t.createAnnotation = function(t) {\n        var e = this.internal.getCurrentPageInfo();\n        switch(t.type){\n            case \"link\":\n                this.link(t.bounds.x, t.bounds.y, t.bounds.w, t.bounds.h, t);\n                break;\n            case \"text\":\n            case \"freetext\":\n                e.pageContext.annotations.push(t);\n        }\n    }, t.link = function(t, e, n, r, i) {\n        var a = this.internal.getCurrentPageInfo(), o = this.internal.getCoordinateString, s = this.internal.getVerticalCoordinateString;\n        a.pageContext.annotations.push({\n            finalBounds: {\n                x: o(t),\n                y: s(e),\n                w: o(t + n),\n                h: s(e + r)\n            },\n            options: i,\n            type: \"link\"\n        });\n    }, t.textWithLink = function(t, e, n, r) {\n        var i, a, o = this.getTextWidth(t), s = this.internal.getLineHeight() / this.internal.scaleFactor;\n        if (void 0 !== r.maxWidth) {\n            a = r.maxWidth;\n            var u = this.splitTextToSize(t, a).length;\n            i = Math.ceil(s * u);\n        } else a = o, i = s;\n        return this.text(t, e, n, r), n += .2 * s, \"center\" === r.align && (e -= o / 2), \"right\" === r.align && (e -= o), this.link(e, n - s, a, i, r), o;\n    }, t.getTextWidth = function(t) {\n        var e = this.internal.getFontSize();\n        return this.getStringUnitWidth(t) * e / this.internal.scaleFactor;\n    };\n}(E.API), /**\n * @license\n * Copyright (c) 2017 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = {\n        1569: [\n            65152\n        ],\n        1570: [\n            65153,\n            65154\n        ],\n        1571: [\n            65155,\n            65156\n        ],\n        1572: [\n            65157,\n            65158\n        ],\n        1573: [\n            65159,\n            65160\n        ],\n        1574: [\n            65161,\n            65162,\n            65163,\n            65164\n        ],\n        1575: [\n            65165,\n            65166\n        ],\n        1576: [\n            65167,\n            65168,\n            65169,\n            65170\n        ],\n        1577: [\n            65171,\n            65172\n        ],\n        1578: [\n            65173,\n            65174,\n            65175,\n            65176\n        ],\n        1579: [\n            65177,\n            65178,\n            65179,\n            65180\n        ],\n        1580: [\n            65181,\n            65182,\n            65183,\n            65184\n        ],\n        1581: [\n            65185,\n            65186,\n            65187,\n            65188\n        ],\n        1582: [\n            65189,\n            65190,\n            65191,\n            65192\n        ],\n        1583: [\n            65193,\n            65194\n        ],\n        1584: [\n            65195,\n            65196\n        ],\n        1585: [\n            65197,\n            65198\n        ],\n        1586: [\n            65199,\n            65200\n        ],\n        1587: [\n            65201,\n            65202,\n            65203,\n            65204\n        ],\n        1588: [\n            65205,\n            65206,\n            65207,\n            65208\n        ],\n        1589: [\n            65209,\n            65210,\n            65211,\n            65212\n        ],\n        1590: [\n            65213,\n            65214,\n            65215,\n            65216\n        ],\n        1591: [\n            65217,\n            65218,\n            65219,\n            65220\n        ],\n        1592: [\n            65221,\n            65222,\n            65223,\n            65224\n        ],\n        1593: [\n            65225,\n            65226,\n            65227,\n            65228\n        ],\n        1594: [\n            65229,\n            65230,\n            65231,\n            65232\n        ],\n        1601: [\n            65233,\n            65234,\n            65235,\n            65236\n        ],\n        1602: [\n            65237,\n            65238,\n            65239,\n            65240\n        ],\n        1603: [\n            65241,\n            65242,\n            65243,\n            65244\n        ],\n        1604: [\n            65245,\n            65246,\n            65247,\n            65248\n        ],\n        1605: [\n            65249,\n            65250,\n            65251,\n            65252\n        ],\n        1606: [\n            65253,\n            65254,\n            65255,\n            65256\n        ],\n        1607: [\n            65257,\n            65258,\n            65259,\n            65260\n        ],\n        1608: [\n            65261,\n            65262\n        ],\n        1609: [\n            65263,\n            65264,\n            64488,\n            64489\n        ],\n        1610: [\n            65265,\n            65266,\n            65267,\n            65268\n        ],\n        1649: [\n            64336,\n            64337\n        ],\n        1655: [\n            64477\n        ],\n        1657: [\n            64358,\n            64359,\n            64360,\n            64361\n        ],\n        1658: [\n            64350,\n            64351,\n            64352,\n            64353\n        ],\n        1659: [\n            64338,\n            64339,\n            64340,\n            64341\n        ],\n        1662: [\n            64342,\n            64343,\n            64344,\n            64345\n        ],\n        1663: [\n            64354,\n            64355,\n            64356,\n            64357\n        ],\n        1664: [\n            64346,\n            64347,\n            64348,\n            64349\n        ],\n        1667: [\n            64374,\n            64375,\n            64376,\n            64377\n        ],\n        1668: [\n            64370,\n            64371,\n            64372,\n            64373\n        ],\n        1670: [\n            64378,\n            64379,\n            64380,\n            64381\n        ],\n        1671: [\n            64382,\n            64383,\n            64384,\n            64385\n        ],\n        1672: [\n            64392,\n            64393\n        ],\n        1676: [\n            64388,\n            64389\n        ],\n        1677: [\n            64386,\n            64387\n        ],\n        1678: [\n            64390,\n            64391\n        ],\n        1681: [\n            64396,\n            64397\n        ],\n        1688: [\n            64394,\n            64395\n        ],\n        1700: [\n            64362,\n            64363,\n            64364,\n            64365\n        ],\n        1702: [\n            64366,\n            64367,\n            64368,\n            64369\n        ],\n        1705: [\n            64398,\n            64399,\n            64400,\n            64401\n        ],\n        1709: [\n            64467,\n            64468,\n            64469,\n            64470\n        ],\n        1711: [\n            64402,\n            64403,\n            64404,\n            64405\n        ],\n        1713: [\n            64410,\n            64411,\n            64412,\n            64413\n        ],\n        1715: [\n            64406,\n            64407,\n            64408,\n            64409\n        ],\n        1722: [\n            64414,\n            64415\n        ],\n        1723: [\n            64416,\n            64417,\n            64418,\n            64419\n        ],\n        1726: [\n            64426,\n            64427,\n            64428,\n            64429\n        ],\n        1728: [\n            64420,\n            64421\n        ],\n        1729: [\n            64422,\n            64423,\n            64424,\n            64425\n        ],\n        1733: [\n            64480,\n            64481\n        ],\n        1734: [\n            64473,\n            64474\n        ],\n        1735: [\n            64471,\n            64472\n        ],\n        1736: [\n            64475,\n            64476\n        ],\n        1737: [\n            64482,\n            64483\n        ],\n        1739: [\n            64478,\n            64479\n        ],\n        1740: [\n            64508,\n            64509,\n            64510,\n            64511\n        ],\n        1744: [\n            64484,\n            64485,\n            64486,\n            64487\n        ],\n        1746: [\n            64430,\n            64431\n        ],\n        1747: [\n            64432,\n            64433\n        ]\n    }, n = {\n        65247: {\n            65154: 65269,\n            65156: 65271,\n            65160: 65273,\n            65166: 65275\n        },\n        65248: {\n            65154: 65270,\n            65156: 65272,\n            65160: 65274,\n            65166: 65276\n        },\n        65165: {\n            65247: {\n                65248: {\n                    65258: 65010\n                }\n            }\n        },\n        1617: {\n            1612: 64606,\n            1613: 64607,\n            1614: 64608,\n            1615: 64609,\n            1616: 64610\n        }\n    }, r = {\n        1612: 64606,\n        1613: 64607,\n        1614: 64608,\n        1615: 64609,\n        1616: 64610\n    }, i = [\n        1570,\n        1571,\n        1573,\n        1575\n    ];\n    t.__arabicParser__ = {};\n    var a = t.__arabicParser__.isInArabicSubstitutionA = function(t) {\n        return void 0 !== e[t.charCodeAt(0)];\n    }, o = t.__arabicParser__.isArabicLetter = function(t) {\n        return \"string\" == typeof t && /^[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDFF\\uFE70-\\uFEFF]+$/.test(t);\n    }, s = t.__arabicParser__.isArabicEndLetter = function(t) {\n        return o(t) && a(t) && e[t.charCodeAt(0)].length <= 2;\n    }, u = t.__arabicParser__.isArabicAlfLetter = function(t) {\n        return o(t) && i.indexOf(t.charCodeAt(0)) >= 0;\n    };\n    t.__arabicParser__.arabicLetterHasIsolatedForm = function(t) {\n        return o(t) && a(t) && e[t.charCodeAt(0)].length >= 1;\n    };\n    var c = t.__arabicParser__.arabicLetterHasFinalForm = function(t) {\n        return o(t) && a(t) && e[t.charCodeAt(0)].length >= 2;\n    };\n    t.__arabicParser__.arabicLetterHasInitialForm = function(t) {\n        return o(t) && a(t) && e[t.charCodeAt(0)].length >= 3;\n    };\n    var l = t.__arabicParser__.arabicLetterHasMedialForm = function(t) {\n        return o(t) && a(t) && 4 == e[t.charCodeAt(0)].length;\n    }, h = t.__arabicParser__.resolveLigatures = function(t) {\n        var e = 0, r = n, i = \"\", a = 0;\n        for(e = 0; e < t.length; e += 1)void 0 !== r[t.charCodeAt(e)] ? (a++, \"number\" == typeof (r = r[t.charCodeAt(e)]) && (i += String.fromCharCode(r), r = n, a = 0), e === t.length - 1 && (r = n, i += t.charAt(e - (a - 1)), e -= a - 1, a = 0)) : (r = n, i += t.charAt(e - a), e -= a, a = 0);\n        return i;\n    };\n    t.__arabicParser__.isArabicDiacritic = function(t) {\n        return void 0 !== t && void 0 !== r[t.charCodeAt(0)];\n    };\n    var f = t.__arabicParser__.getCorrectForm = function(t, e, n) {\n        return o(t) ? !1 === a(t) ? -1 : !c(t) || !o(e) && !o(n) || !o(n) && s(e) || s(t) && !o(e) || s(t) && u(e) || s(t) && s(e) ? 0 : l(t) && o(e) && !s(e) && o(n) && c(n) ? 3 : s(t) || !o(n) ? 1 : 2 : -1;\n    }, d = function(t) {\n        var n = 0, r = 0, i = 0, a = \"\", s = \"\", u = \"\", c = (t = t || \"\").split(\"\\\\s+\"), l = [];\n        for(n = 0; n < c.length; n += 1){\n            for(l.push(\"\"), r = 0; r < c[n].length; r += 1)a = c[n][r], s = c[n][r - 1], u = c[n][r + 1], o(a) ? (i = f(a, s, u), l[n] += -1 !== i ? String.fromCharCode(e[a.charCodeAt(0)][i]) : a) : l[n] += a;\n            l[n] = h(l[n]);\n        }\n        return l.join(\" \");\n    }, p = t.__arabicParser__.processArabic = t.processArabic = function() {\n        var t, e = \"string\" == typeof arguments[0] ? arguments[0] : arguments[0].text, n = [];\n        if (Array.isArray(e)) {\n            var r = 0;\n            for(n = [], r = 0; r < e.length; r += 1)Array.isArray(e[r]) ? n.push([\n                d(e[r][0]),\n                e[r][1],\n                e[r][2]\n            ]) : n.push([\n                d(e[r])\n            ]);\n            t = n;\n        } else t = d(e);\n        return \"string\" == typeof arguments[0] ? t : (arguments[0].text = t, arguments[0]);\n    };\n    t.events.push([\n        \"preProcessText\",\n        p\n    ]);\n}(E.API), E.API.autoPrint = function(t) {\n    var e;\n    return (t = t || {}).variant = t.variant || \"non-conform\", \"javascript\" === t.variant ? this.addJS(\"print({});\") : (this.internal.events.subscribe(\"postPutResources\", function() {\n        e = this.internal.newObject(), this.internal.out(\"<<\"), this.internal.out(\"/S /Named\"), this.internal.out(\"/Type /Action\"), this.internal.out(\"/N /Print\"), this.internal.out(\">>\"), this.internal.out(\"endobj\");\n    }), this.internal.events.subscribe(\"putCatalog\", function() {\n        this.internal.out(\"/OpenAction \" + e + \" 0 R\");\n    })), this;\n}, /**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = function() {\n        var t = void 0;\n        Object.defineProperty(this, \"pdf\", {\n            get: function() {\n                return t;\n            },\n            set: function(e) {\n                t = e;\n            }\n        });\n        var e = 150;\n        Object.defineProperty(this, \"width\", {\n            get: function() {\n                return e;\n            },\n            set: function(t) {\n                e = isNaN(t) || !1 === Number.isInteger(t) || t < 0 ? 150 : t, this.getContext(\"2d\").pageWrapXEnabled && (this.getContext(\"2d\").pageWrapX = e + 1);\n            }\n        });\n        var n = 300;\n        Object.defineProperty(this, \"height\", {\n            get: function() {\n                return n;\n            },\n            set: function(t) {\n                n = isNaN(t) || !1 === Number.isInteger(t) || t < 0 ? 300 : t, this.getContext(\"2d\").pageWrapYEnabled && (this.getContext(\"2d\").pageWrapY = n + 1);\n            }\n        });\n        var r = [];\n        Object.defineProperty(this, \"childNodes\", {\n            get: function() {\n                return r;\n            },\n            set: function(t) {\n                r = t;\n            }\n        });\n        var i = {};\n        Object.defineProperty(this, \"style\", {\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                i = t;\n            }\n        }), Object.defineProperty(this, \"parentNode\", {});\n    };\n    e.prototype.getContext = function(t, e) {\n        var n;\n        if (\"2d\" !== (t = t || \"2d\")) return null;\n        for(n in e)this.pdf.context2d.hasOwnProperty(n) && (this.pdf.context2d[n] = e[n]);\n        return this.pdf.context2d._canvas = this, this.pdf.context2d;\n    }, e.prototype.toDataURL = function() {\n        throw new Error(\"toDataURL is not implemented.\");\n    }, t.events.push([\n        \"initialized\",\n        function() {\n            this.canvas = new e, this.canvas.pdf = this;\n        }\n    ]);\n}(E.API), function(e) {\n    var n = {\n        left: 0,\n        top: 0,\n        bottom: 0,\n        right: 0\n    }, r = !1, i = function() {\n        void 0 === this.internal.__cell__ && (this.internal.__cell__ = {}, this.internal.__cell__.padding = 3, this.internal.__cell__.headerFunction = void 0, this.internal.__cell__.margins = Object.assign({}, n), this.internal.__cell__.margins.width = this.getPageWidth(), a.call(this));\n    }, a = function() {\n        this.internal.__cell__.lastCell = new o, this.internal.__cell__.pages = 1;\n    }, o = function() {\n        var t = arguments[0];\n        Object.defineProperty(this, \"x\", {\n            enumerable: !0,\n            get: function() {\n                return t;\n            },\n            set: function(e) {\n                t = e;\n            }\n        });\n        var e = arguments[1];\n        Object.defineProperty(this, \"y\", {\n            enumerable: !0,\n            get: function() {\n                return e;\n            },\n            set: function(t) {\n                e = t;\n            }\n        });\n        var n = arguments[2];\n        Object.defineProperty(this, \"width\", {\n            enumerable: !0,\n            get: function() {\n                return n;\n            },\n            set: function(t) {\n                n = t;\n            }\n        });\n        var r = arguments[3];\n        Object.defineProperty(this, \"height\", {\n            enumerable: !0,\n            get: function() {\n                return r;\n            },\n            set: function(t) {\n                r = t;\n            }\n        });\n        var i = arguments[4];\n        Object.defineProperty(this, \"text\", {\n            enumerable: !0,\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                i = t;\n            }\n        });\n        var a = arguments[5];\n        Object.defineProperty(this, \"lineNumber\", {\n            enumerable: !0,\n            get: function() {\n                return a;\n            },\n            set: function(t) {\n                a = t;\n            }\n        });\n        var o = arguments[6];\n        return Object.defineProperty(this, \"align\", {\n            enumerable: !0,\n            get: function() {\n                return o;\n            },\n            set: function(t) {\n                o = t;\n            }\n        }), this;\n    };\n    o.prototype.clone = function() {\n        return new o(this.x, this.y, this.width, this.height, this.text, this.lineNumber, this.align);\n    }, o.prototype.toArray = function() {\n        return [\n            this.x,\n            this.y,\n            this.width,\n            this.height,\n            this.text,\n            this.lineNumber,\n            this.align\n        ];\n    }, e.setHeaderFunction = function(t) {\n        return i.call(this), this.internal.__cell__.headerFunction = \"function\" == typeof t ? t : void 0, this;\n    }, e.getTextDimensions = function(t, e) {\n        i.call(this);\n        var n = (e = e || {}).fontSize || this.getFontSize(), r = e.font || this.getFont(), a = e.scaleFactor || this.internal.scaleFactor, o = 0, s = 0, u = 0, c = this;\n        if (!Array.isArray(t) && \"string\" != typeof t) {\n            if (\"number\" != typeof t) throw new Error(\"getTextDimensions expects text-parameter to be of type String or type Number or an Array of Strings.\");\n            t = String(t);\n        }\n        var l = e.maxWidth;\n        l > 0 ? \"string\" == typeof t ? t = this.splitTextToSize(t, l) : \"[object Array]\" === Object.prototype.toString.call(t) && (t = t.reduce(function(t, e) {\n            return t.concat(c.splitTextToSize(e, l));\n        }, [])) : t = Array.isArray(t) ? t : [\n            t\n        ];\n        for(var h = 0; h < t.length; h++)o < (u = this.getStringUnitWidth(t[h], {\n            font: r\n        }) * n) && (o = u);\n        return 0 !== o && (s = t.length), {\n            w: o /= a,\n            h: Math.max((s * n * this.getLineHeightFactor() - n * (this.getLineHeightFactor() - 1)) / a, 0)\n        };\n    }, e.cellAddPage = function() {\n        i.call(this), this.addPage();\n        var t = this.internal.__cell__.margins || n;\n        return this.internal.__cell__.lastCell = new o(t.left, t.top, void 0, void 0), this.internal.__cell__.pages += 1, this;\n    };\n    var s = e.cell = function() {\n        var t;\n        t = arguments[0] instanceof o ? arguments[0] : new o(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]), i.call(this);\n        var e = this.internal.__cell__.lastCell, a = this.internal.__cell__.padding, s = this.internal.__cell__.margins || n, u = this.internal.__cell__.tableHeaderRow, c = this.internal.__cell__.printHeaders;\n        return void 0 !== e.lineNumber && (e.lineNumber === t.lineNumber ? (t.x = (e.x || 0) + (e.width || 0), t.y = e.y || 0) : e.y + e.height + t.height + s.bottom > this.getPageHeight() ? (this.cellAddPage(), t.y = s.top, c && u && (this.printHeaderRow(t.lineNumber, !0), t.y += u[0].height)) : t.y = e.y + e.height || t.y), void 0 !== t.text[0] && (this.rect(t.x, t.y, t.width, t.height, !0 === r ? \"FD\" : void 0), \"right\" === t.align ? this.text(t.text, t.x + t.width - a, t.y + a, {\n            align: \"right\",\n            baseline: \"top\"\n        }) : \"center\" === t.align ? this.text(t.text, t.x + t.width / 2, t.y + a, {\n            align: \"center\",\n            baseline: \"top\",\n            maxWidth: t.width - a - a\n        }) : this.text(t.text, t.x + a, t.y + a, {\n            align: \"left\",\n            baseline: \"top\",\n            maxWidth: t.width - a - a\n        })), this.internal.__cell__.lastCell = t, this;\n    };\n    e.table = function(e, r, c, l, h) {\n        if (i.call(this), !c) throw new Error(\"No data for PDF table.\");\n        var f, d, p, g, m = [], v = [], b = [], y = {}, w = {}, N = [], L = [], x = (h = h || {}).autoSize || !1, A = !1 !== h.printHeaders, S = h.css && void 0 !== h.css[\"font-size\"] ? 16 * h.css[\"font-size\"] : h.fontSize || 12, _ = h.margins || Object.assign({\n            width: this.getPageWidth()\n        }, n), P = \"number\" == typeof h.padding ? h.padding : 3, k = h.headerBackgroundColor || \"#c8c8c8\", F = h.headerTextColor || \"#000\";\n        if (a.call(this), this.internal.__cell__.printHeaders = A, this.internal.__cell__.margins = _, this.internal.__cell__.table_font_size = S, this.internal.__cell__.padding = P, this.internal.__cell__.headerBackgroundColor = k, this.internal.__cell__.headerTextColor = F, this.setFontSize(S), null == l) v = m = Object.keys(c[0]), b = m.map(function() {\n            return \"left\";\n        });\n        else if (Array.isArray(l) && \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(l[0])) for(m = l.map(function(t) {\n            return t.name;\n        }), v = l.map(function(t) {\n            return t.prompt || t.name || \"\";\n        }), b = l.map(function(t) {\n            return t.align || \"left\";\n        }), f = 0; f < l.length; f += 1)w[l[f].name] = .7499990551181103 * l[f].width;\n        else Array.isArray(l) && \"string\" == typeof l[0] && (v = m = l, b = m.map(function() {\n            return \"left\";\n        }));\n        if (x || Array.isArray(l) && \"string\" == typeof l[0]) for(f = 0; f < m.length; f += 1){\n            for(y[g = m[f]] = c.map(function(t) {\n                return t[g];\n            }), this.setFont(void 0, \"bold\"), N.push(this.getTextDimensions(v[f], {\n                fontSize: this.internal.__cell__.table_font_size,\n                scaleFactor: this.internal.scaleFactor\n            }).w), d = y[g], this.setFont(void 0, \"normal\"), p = 0; p < d.length; p += 1)N.push(this.getTextDimensions(d[p], {\n                fontSize: this.internal.__cell__.table_font_size,\n                scaleFactor: this.internal.scaleFactor\n            }).w);\n            w[g] = Math.max.apply(null, N) + P + P, N = [];\n        }\n        if (A) {\n            var I = {};\n            for(f = 0; f < m.length; f += 1)I[m[f]] = {}, I[m[f]].text = v[f], I[m[f]].align = b[f];\n            var j = u.call(this, I, w);\n            L = m.map(function(t) {\n                return new o(e, r, w[t], j, I[t].text, void 0, I[t].align);\n            }), this.setTableHeaderRow(L), this.printHeaderRow(1, !1);\n        }\n        var C = l.reduce(function(t, e) {\n            return t[e.name] = e.align, t;\n        }, {});\n        for(f = 0; f < c.length; f += 1){\n            \"rowStart\" in h && h.rowStart instanceof Function && h.rowStart({\n                row: f,\n                data: c[f]\n            }, this);\n            var O = u.call(this, c[f], w);\n            for(p = 0; p < m.length; p += 1){\n                var B = c[f][m[p]];\n                \"cellStart\" in h && h.cellStart instanceof Function && h.cellStart({\n                    row: f,\n                    col: p,\n                    data: B\n                }, this), s.call(this, new o(e, r, w[m[p]], O, B, f + 2, C[m[p]]));\n            }\n        }\n        return this.internal.__cell__.table_x = e, this.internal.__cell__.table_y = r, this;\n    };\n    var u = function(t, e) {\n        var n = this.internal.__cell__.padding, r = this.internal.__cell__.table_font_size, i = this.internal.scaleFactor;\n        return Object.keys(t).map(function(r) {\n            var i = t[r];\n            return this.splitTextToSize(i.hasOwnProperty(\"text\") ? i.text : i, e[r] - n - n);\n        }, this).map(function(t) {\n            return this.getLineHeightFactor() * t.length * r / i + n + n;\n        }, this).reduce(function(t, e) {\n            return Math.max(t, e);\n        }, 0);\n    };\n    e.setTableHeaderRow = function(t) {\n        i.call(this), this.internal.__cell__.tableHeaderRow = t;\n    }, e.printHeaderRow = function(t, e) {\n        if (i.call(this), !this.internal.__cell__.tableHeaderRow) throw new Error(\"Property tableHeaderRow does not exist.\");\n        var n;\n        if (r = !0, \"function\" == typeof this.internal.__cell__.headerFunction) {\n            var a = this.internal.__cell__.headerFunction(this, this.internal.__cell__.pages);\n            this.internal.__cell__.lastCell = new o(a[0], a[1], a[2], a[3], void 0, -1);\n        }\n        this.setFont(void 0, \"bold\");\n        for(var u = [], c = 0; c < this.internal.__cell__.tableHeaderRow.length; c += 1){\n            n = this.internal.__cell__.tableHeaderRow[c].clone(), e && (n.y = this.internal.__cell__.margins.top || 0, u.push(n)), n.lineNumber = t;\n            var l = this.getTextColor();\n            this.setTextColor(this.internal.__cell__.headerTextColor), this.setFillColor(this.internal.__cell__.headerBackgroundColor), s.call(this, n), this.setTextColor(l);\n        }\n        u.length > 0 && this.setTableHeaderRow(u), this.setFont(void 0, \"normal\"), r = !1;\n    };\n}(E.API);\nvar Pt = {\n    italic: [\n        \"italic\",\n        \"oblique\",\n        \"normal\"\n    ],\n    oblique: [\n        \"oblique\",\n        \"italic\",\n        \"normal\"\n    ],\n    normal: [\n        \"normal\",\n        \"oblique\",\n        \"italic\"\n    ]\n}, kt = [\n    \"ultra-condensed\",\n    \"extra-condensed\",\n    \"condensed\",\n    \"semi-condensed\",\n    \"normal\",\n    \"semi-expanded\",\n    \"expanded\",\n    \"extra-expanded\",\n    \"ultra-expanded\"\n], Ft = _t(kt), It = [\n    100,\n    200,\n    300,\n    400,\n    500,\n    600,\n    700,\n    800,\n    900\n], jt = _t(It);\nfunction Ct(t) {\n    var e = t.family.replace(/\"|'/g, \"\").toLowerCase(), n = function(t) {\n        return Pt[t = t || \"normal\"] ? t : \"normal\";\n    }(t.style), r = function(t) {\n        return t ? \"number\" == typeof t ? t >= 100 && t <= 900 && t % 100 == 0 ? t : 400 : /^\\d00$/.test(t) ? parseInt(t) : \"bold\" === t ? 700 : 400 : 400;\n    }(t.weight), i = function(t) {\n        return \"number\" == typeof Ft[t = t || \"normal\"] ? t : \"normal\";\n    }(t.stretch);\n    return {\n        family: e,\n        style: n,\n        weight: r,\n        stretch: i,\n        src: t.src || [],\n        ref: t.ref || {\n            name: e,\n            style: [\n                i,\n                n,\n                r\n            ].join(\" \")\n        }\n    };\n}\nfunction Ot(t, e, n, r) {\n    var i;\n    for(i = n; i >= 0 && i < e.length; i += r)if (t[e[i]]) return t[e[i]];\n    for(i = n; i >= 0 && i < e.length; i -= r)if (t[e[i]]) return t[e[i]];\n}\nvar Bt = {\n    \"sans-serif\": \"helvetica\",\n    fixed: \"courier\",\n    monospace: \"courier\",\n    terminal: \"courier\",\n    cursive: \"times\",\n    fantasy: \"times\",\n    serif: \"times\"\n}, Mt = {\n    caption: \"times\",\n    icon: \"times\",\n    menu: \"times\",\n    \"message-box\": \"times\",\n    \"small-caption\": \"times\",\n    \"status-bar\": \"times\"\n};\nfunction qt(t) {\n    return [\n        t.stretch,\n        t.style,\n        t.weight,\n        t.family\n    ].join(\" \");\n}\nfunction Et(t) {\n    return t.trimLeft();\n}\nfunction Rt(t, e) {\n    for(var n = 0; n < t.length;){\n        if (t.charAt(n) === e) return [\n            t.substring(0, n),\n            t.substring(n + 1)\n        ];\n        n += 1;\n    }\n    return null;\n}\nfunction Dt(t) {\n    var e = t.match(/^(-[a-z_]|[a-z_])[a-z0-9_-]*/i);\n    return null === e ? null : [\n        e[0],\n        t.substring(e[0].length)\n    ];\n}\nvar Tt, zt, Ut, Ht, Wt, Vt, Gt, Yt, Jt = [\n    \"times\"\n];\nfunction Xt(t, n, r, i, a) {\n    var o = 4, s = $t;\n    switch(a){\n        case E.API.image_compression.FAST:\n            o = 1, s = Zt;\n            break;\n        case E.API.image_compression.MEDIUM:\n            o = 6, s = Qt;\n            break;\n        case E.API.image_compression.SLOW:\n            o = 9, s = te;\n    }\n    t = function(t, e, n, r) {\n        for(var i, a = t.length / e, o = new Uint8Array(t.length + a), s = [\n            Kt,\n            Zt,\n            $t,\n            Qt,\n            te\n        ], u = 0; u < a; u += 1){\n            var c = u * e, l = t.subarray(c, c + e);\n            if (r) o.set(r(l, n, i), c + u);\n            else {\n                for(var h = s.length, f = [], d = 0; d < h; d += 1)f[d] = s[d](l, n, i);\n                var p = ne(f.concat());\n                o.set(f[p], c + u);\n            }\n            i = l;\n        }\n        return o;\n    }(t, n, Math.ceil(r * i / 8), s);\n    var u = (0,fflate__WEBPACK_IMPORTED_MODULE_3__.zlibSync)(t, {\n        level: o\n    });\n    return E.API.__addimage__.arrayBufferToBinaryString(u);\n}\nfunction Kt(t) {\n    var e = Array.apply([], t);\n    return e.unshift(0), e;\n}\nfunction Zt(t, e) {\n    var n = t.length, r = [];\n    r[0] = 1;\n    for(var i = 0; i < n; i += 1){\n        var a = t[i - e] || 0;\n        r[i + 1] = t[i] - a + 256 & 255;\n    }\n    return r;\n}\nfunction $t(t, e, n) {\n    var r = t.length, i = [];\n    i[0] = 2;\n    for(var a = 0; a < r; a += 1){\n        var o = n && n[a] || 0;\n        i[a + 1] = t[a] - o + 256 & 255;\n    }\n    return i;\n}\nfunction Qt(t, e, n) {\n    var r = t.length, i = [];\n    i[0] = 3;\n    for(var a = 0; a < r; a += 1){\n        var o = t[a - e] || 0, s = n && n[a] || 0;\n        i[a + 1] = t[a] + 256 - (o + s >>> 1) & 255;\n    }\n    return i;\n}\nfunction te(t, e, n) {\n    var r = t.length, i = [];\n    i[0] = 4;\n    for(var a = 0; a < r; a += 1){\n        var o = ee(t[a - e] || 0, n && n[a] || 0, n && n[a - e] || 0);\n        i[a + 1] = t[a] - o + 256 & 255;\n    }\n    return i;\n}\nfunction ee(t, e, n) {\n    if (t === e && e === n) return t;\n    var r = Math.abs(e - n), i = Math.abs(t - n), a = Math.abs(t + e - n - n);\n    return r <= i && r <= a ? t : i <= a ? e : n;\n}\nfunction ne(t) {\n    var e = t.map(function(t) {\n        return t.reduce(function(t, e) {\n            return t + Math.abs(e);\n        }, 0);\n    });\n    return e.indexOf(Math.min.apply(null, e));\n}\nfunction re(t, e, n) {\n    var r = e * n, i = Math.floor(r / 8), a = 16 - (r - 8 * i + n), o = (1 << n) - 1;\n    return ae(t, i) >> a & o;\n}\nfunction ie(t, e, n, r) {\n    var i = n * r, a = Math.floor(i / 8), o = 16 - (i - 8 * a + r), s = (1 << r) - 1, u = (e & s) << o;\n    !function(t, e, n) {\n        if (e + 1 < t.byteLength) t.setUint16(e, n, !1);\n        else {\n            var r = n >> 8 & 255;\n            t.setUint8(e, r);\n        }\n    }(t, a, ae(t, a) & ~(s << o) & 65535 | u);\n}\nfunction ae(t, e) {\n    return e + 1 < t.byteLength ? t.getUint16(e, !1) : t.getUint8(e) << 8;\n}\nfunction oe(t) {\n    var e = 0;\n    if (71 !== t[e++] || 73 !== t[e++] || 70 !== t[e++] || 56 !== t[e++] || 56 != (t[e++] + 1 & 253) || 97 !== t[e++]) throw new Error(\"Invalid GIF 87a/89a header.\");\n    var n = t[e++] | t[e++] << 8, r = t[e++] | t[e++] << 8, i = t[e++], a = i >> 7, o = 1 << 1 + (7 & i);\n    t[e++], t[e++];\n    var s = null, u = null;\n    a && (s = e, u = o, e += 3 * o);\n    var c = !0, l = [], h = 0, f = null, d = 0, p = null;\n    for(this.width = n, this.height = r; c && e < t.length;)switch(t[e++]){\n        case 33:\n            switch(t[e++]){\n                case 255:\n                    if (11 !== t[e] || 78 == t[e + 1] && 69 == t[e + 2] && 84 == t[e + 3] && 83 == t[e + 4] && 67 == t[e + 5] && 65 == t[e + 6] && 80 == t[e + 7] && 69 == t[e + 8] && 50 == t[e + 9] && 46 == t[e + 10] && 48 == t[e + 11] && 3 == t[e + 12] && 1 == t[e + 13] && 0 == t[e + 16]) e += 14, p = t[e++] | t[e++] << 8, e++;\n                    else for(e += 12;;){\n                        if (!((P = t[e++]) >= 0)) throw Error(\"Invalid block size\");\n                        if (0 === P) break;\n                        e += P;\n                    }\n                    break;\n                case 249:\n                    if (4 !== t[e++] || 0 !== t[e + 4]) throw new Error(\"Invalid graphics extension block.\");\n                    var g = t[e++];\n                    h = t[e++] | t[e++] << 8, f = t[e++], 1 & g || (f = null), d = g >> 2 & 7, e++;\n                    break;\n                case 254:\n                    for(;;){\n                        if (!((P = t[e++]) >= 0)) throw Error(\"Invalid block size\");\n                        if (0 === P) break;\n                        e += P;\n                    }\n                    break;\n                default:\n                    throw new Error(\"Unknown graphic control label: 0x\" + t[e - 1].toString(16));\n            }\n            break;\n        case 44:\n            var m = t[e++] | t[e++] << 8, v = t[e++] | t[e++] << 8, b = t[e++] | t[e++] << 8, y = t[e++] | t[e++] << 8, w = t[e++], N = w >> 6 & 1, L = 1 << 1 + (7 & w), x = s, A = u, S = !1;\n            w >> 7 && (S = !0, x = e, A = L, e += 3 * L);\n            var _ = e;\n            for(e++;;){\n                var P;\n                if (!((P = t[e++]) >= 0)) throw Error(\"Invalid block size\");\n                if (0 === P) break;\n                e += P;\n            }\n            l.push({\n                x: m,\n                y: v,\n                width: b,\n                height: y,\n                has_local_palette: S,\n                palette_offset: x,\n                palette_size: A,\n                data_offset: _,\n                data_length: e - _,\n                transparent_index: f,\n                interlaced: !!N,\n                delay: h,\n                disposal: d\n            });\n            break;\n        case 59:\n            c = !1;\n            break;\n        default:\n            throw new Error(\"Unknown gif block: 0x\" + t[e - 1].toString(16));\n    }\n    this.numFrames = function() {\n        return l.length;\n    }, this.loopCount = function() {\n        return p;\n    }, this.frameInfo = function(t) {\n        if (t < 0 || t >= l.length) throw new Error(\"Frame index out of range.\");\n        return l[t];\n    }, this.decodeAndBlitFrameBGRA = function(e, r) {\n        var i = this.frameInfo(e), a = i.width * i.height, o = new Uint8Array(a);\n        se(t, i.data_offset, o, a);\n        var s = i.palette_offset, u = i.transparent_index;\n        null === u && (u = 256);\n        var c = i.width, l = n - c, h = c, f = 4 * (i.y * n + i.x), d = 4 * ((i.y + i.height) * n + i.x), p = f, g = 4 * l;\n        !0 === i.interlaced && (g += 4 * n * 7);\n        for(var m = 8, v = 0, b = o.length; v < b; ++v){\n            var y = o[v];\n            if (0 === h && (h = c, (p += g) >= d && (g = 4 * l + 4 * n * (m - 1), p = f + (c + l) * (m << 1), m >>= 1)), y === u) p += 4;\n            else {\n                var w = t[s + 3 * y], N = t[s + 3 * y + 1], L = t[s + 3 * y + 2];\n                r[p++] = L, r[p++] = N, r[p++] = w, r[p++] = 255;\n            }\n            --h;\n        }\n    }, this.decodeAndBlitFrameRGBA = function(e, r) {\n        var i = this.frameInfo(e), a = i.width * i.height, o = new Uint8Array(a);\n        se(t, i.data_offset, o, a);\n        var s = i.palette_offset, u = i.transparent_index;\n        null === u && (u = 256);\n        var c = i.width, l = n - c, h = c, f = 4 * (i.y * n + i.x), d = 4 * ((i.y + i.height) * n + i.x), p = f, g = 4 * l;\n        !0 === i.interlaced && (g += 4 * n * 7);\n        for(var m = 8, v = 0, b = o.length; v < b; ++v){\n            var y = o[v];\n            if (0 === h && (h = c, (p += g) >= d && (g = 4 * l + 4 * n * (m - 1), p = f + (c + l) * (m << 1), m >>= 1)), y === u) p += 4;\n            else {\n                var w = t[s + 3 * y], N = t[s + 3 * y + 1], L = t[s + 3 * y + 2];\n                r[p++] = w, r[p++] = N, r[p++] = L, r[p++] = 255;\n            }\n            --h;\n        }\n    };\n}\nfunction se(t, e, n, r) {\n    for(var i = t[e++], a = 1 << i, s = a + 1, u = s + 1, c = i + 1, l = (1 << c) - 1, h = 0, f = 0, d = 0, p = t[e++], g = new Int32Array(4096), m = null;;){\n        for(; h < 16 && 0 !== p;)f |= t[e++] << h, h += 8, 1 === p ? p = t[e++] : --p;\n        if (h < c) break;\n        var v = f & l;\n        if (f >>= c, h -= c, v !== a) {\n            if (v === s) break;\n            for(var b = v < u ? v : m, y = 0, w = b; w > a;)w = g[w] >> 8, ++y;\n            var N = w;\n            if (d + y + (b !== v ? 1 : 0) > r) return void o.log(\"Warning, gif stream longer than expected.\");\n            n[d++] = N;\n            var L = d += y;\n            for(b !== v && (n[d++] = N), w = b; y--;)w = g[w], n[--L] = 255 & w, w >>= 8;\n            null !== m && u < 4096 && (g[u++] = m << 8 | N, u >= l + 1 && c < 12 && (++c, l = l << 1 | 1)), m = v;\n        } else u = s + 1, l = (1 << (c = i + 1)) - 1, m = null;\n    }\n    return d !== r && o.log(\"Warning, gif stream shorter than expected.\"), n;\n}\n/**\n * @license\n  Copyright (c) 2008, Adobe Systems Incorporated\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without \n  modification, are permitted provided that the following conditions are\n  met:\n\n  * Redistributions of source code must retain the above copyright notice, \n    this list of conditions and the following disclaimer.\n  \n  * Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the \n    documentation and/or other materials provided with the distribution.\n  \n  * Neither the name of Adobe Systems Incorporated nor the names of its \n    contributors may be used to endorse or promote products derived from \n    this software without specific prior written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/ function ue(t) {\n    var e, n, r, i, a, o = Math.floor, s = new Array(64), u = new Array(64), c = new Array(64), l = new Array(64), h = new Array(65535), f = new Array(65535), d = new Array(64), p = new Array(64), g = [], m = 0, v = 7, b = new Array(64), y = new Array(64), w = new Array(64), N = new Array(256), L = new Array(2048), x = [\n        0,\n        1,\n        5,\n        6,\n        14,\n        15,\n        27,\n        28,\n        2,\n        4,\n        7,\n        13,\n        16,\n        26,\n        29,\n        42,\n        3,\n        8,\n        12,\n        17,\n        25,\n        30,\n        41,\n        43,\n        9,\n        11,\n        18,\n        24,\n        31,\n        40,\n        44,\n        53,\n        10,\n        19,\n        23,\n        32,\n        39,\n        45,\n        52,\n        54,\n        20,\n        22,\n        33,\n        38,\n        46,\n        51,\n        55,\n        60,\n        21,\n        34,\n        37,\n        47,\n        50,\n        56,\n        59,\n        61,\n        35,\n        36,\n        48,\n        49,\n        57,\n        58,\n        62,\n        63\n    ], A = [\n        0,\n        0,\n        1,\n        5,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n    ], S = [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11\n    ], _ = [\n        0,\n        0,\n        2,\n        1,\n        3,\n        3,\n        2,\n        4,\n        3,\n        5,\n        5,\n        4,\n        4,\n        0,\n        0,\n        1,\n        125\n    ], P = [\n        1,\n        2,\n        3,\n        0,\n        4,\n        17,\n        5,\n        18,\n        33,\n        49,\n        65,\n        6,\n        19,\n        81,\n        97,\n        7,\n        34,\n        113,\n        20,\n        50,\n        129,\n        145,\n        161,\n        8,\n        35,\n        66,\n        177,\n        193,\n        21,\n        82,\n        209,\n        240,\n        36,\n        51,\n        98,\n        114,\n        130,\n        9,\n        10,\n        22,\n        23,\n        24,\n        25,\n        26,\n        37,\n        38,\n        39,\n        40,\n        41,\n        42,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57,\n        58,\n        67,\n        68,\n        69,\n        70,\n        71,\n        72,\n        73,\n        74,\n        83,\n        84,\n        85,\n        86,\n        87,\n        88,\n        89,\n        90,\n        99,\n        100,\n        101,\n        102,\n        103,\n        104,\n        105,\n        106,\n        115,\n        116,\n        117,\n        118,\n        119,\n        120,\n        121,\n        122,\n        131,\n        132,\n        133,\n        134,\n        135,\n        136,\n        137,\n        138,\n        146,\n        147,\n        148,\n        149,\n        150,\n        151,\n        152,\n        153,\n        154,\n        162,\n        163,\n        164,\n        165,\n        166,\n        167,\n        168,\n        169,\n        170,\n        178,\n        179,\n        180,\n        181,\n        182,\n        183,\n        184,\n        185,\n        186,\n        194,\n        195,\n        196,\n        197,\n        198,\n        199,\n        200,\n        201,\n        202,\n        210,\n        211,\n        212,\n        213,\n        214,\n        215,\n        216,\n        217,\n        218,\n        225,\n        226,\n        227,\n        228,\n        229,\n        230,\n        231,\n        232,\n        233,\n        234,\n        241,\n        242,\n        243,\n        244,\n        245,\n        246,\n        247,\n        248,\n        249,\n        250\n    ], k = [\n        0,\n        0,\n        3,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        1,\n        0,\n        0,\n        0,\n        0,\n        0\n    ], F = [\n        0,\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11\n    ], I = [\n        0,\n        0,\n        2,\n        1,\n        2,\n        4,\n        4,\n        3,\n        4,\n        7,\n        5,\n        4,\n        4,\n        0,\n        1,\n        2,\n        119\n    ], j = [\n        0,\n        1,\n        2,\n        3,\n        17,\n        4,\n        5,\n        33,\n        49,\n        6,\n        18,\n        65,\n        81,\n        7,\n        97,\n        113,\n        19,\n        34,\n        50,\n        129,\n        8,\n        20,\n        66,\n        145,\n        161,\n        177,\n        193,\n        9,\n        35,\n        51,\n        82,\n        240,\n        21,\n        98,\n        114,\n        209,\n        10,\n        22,\n        36,\n        52,\n        225,\n        37,\n        241,\n        23,\n        24,\n        25,\n        26,\n        38,\n        39,\n        40,\n        41,\n        42,\n        53,\n        54,\n        55,\n        56,\n        57,\n        58,\n        67,\n        68,\n        69,\n        70,\n        71,\n        72,\n        73,\n        74,\n        83,\n        84,\n        85,\n        86,\n        87,\n        88,\n        89,\n        90,\n        99,\n        100,\n        101,\n        102,\n        103,\n        104,\n        105,\n        106,\n        115,\n        116,\n        117,\n        118,\n        119,\n        120,\n        121,\n        122,\n        130,\n        131,\n        132,\n        133,\n        134,\n        135,\n        136,\n        137,\n        138,\n        146,\n        147,\n        148,\n        149,\n        150,\n        151,\n        152,\n        153,\n        154,\n        162,\n        163,\n        164,\n        165,\n        166,\n        167,\n        168,\n        169,\n        170,\n        178,\n        179,\n        180,\n        181,\n        182,\n        183,\n        184,\n        185,\n        186,\n        194,\n        195,\n        196,\n        197,\n        198,\n        199,\n        200,\n        201,\n        202,\n        210,\n        211,\n        212,\n        213,\n        214,\n        215,\n        216,\n        217,\n        218,\n        226,\n        227,\n        228,\n        229,\n        230,\n        231,\n        232,\n        233,\n        234,\n        242,\n        243,\n        244,\n        245,\n        246,\n        247,\n        248,\n        249,\n        250\n    ];\n    function C(t, e) {\n        for(var n = 0, r = 0, i = new Array, a = 1; a <= 16; a++){\n            for(var o = 1; o <= t[a]; o++)i[e[r]] = [], i[e[r]][0] = n, i[e[r]][1] = a, r++, n++;\n            n *= 2;\n        }\n        return i;\n    }\n    function O(t) {\n        for(var e = t[0], n = t[1] - 1; n >= 0;)e & 1 << n && (m |= 1 << v), n--, --v < 0 && (255 == m ? (B(255), B(0)) : B(m), v = 7, m = 0);\n    }\n    function B(t) {\n        g.push(t);\n    }\n    function M(t) {\n        B(t >> 8 & 255), B(255 & t);\n    }\n    function q(t, e, n, r, i) {\n        for(var a, o = i[0], s = i[240], u = function(t, e) {\n            var n, r, i, a, o, s, u, c, l, h, f = 0;\n            for(l = 0; l < 8; ++l){\n                n = t[f], r = t[f + 1], i = t[f + 2], a = t[f + 3], o = t[f + 4], s = t[f + 5], u = t[f + 6];\n                var p = n + (c = t[f + 7]), g = n - c, m = r + u, v = r - u, b = i + s, y = i - s, w = a + o, N = a - o, L = p + w, x = p - w, A = m + b, S = m - b;\n                t[f] = L + A, t[f + 4] = L - A;\n                var _ = .707106781 * (S + x);\n                t[f + 2] = x + _, t[f + 6] = x - _;\n                var P = .382683433 * ((L = N + y) - (S = v + g)), k = .5411961 * L + P, F = 1.306562965 * S + P, I = .707106781 * (A = y + v), j = g + I, C = g - I;\n                t[f + 5] = C + k, t[f + 3] = C - k, t[f + 1] = j + F, t[f + 7] = j - F, f += 8;\n            }\n            for(f = 0, l = 0; l < 8; ++l){\n                n = t[f], r = t[f + 8], i = t[f + 16], a = t[f + 24], o = t[f + 32], s = t[f + 40], u = t[f + 48];\n                var O = n + (c = t[f + 56]), B = n - c, M = r + u, q = r - u, E = i + s, R = i - s, D = a + o, T = a - o, z = O + D, U = O - D, H = M + E, W = M - E;\n                t[f] = z + H, t[f + 32] = z - H;\n                var V = .707106781 * (W + U);\n                t[f + 16] = U + V, t[f + 48] = U - V;\n                var G = .382683433 * ((z = T + R) - (W = q + B)), Y = .5411961 * z + G, J = 1.306562965 * W + G, X = .707106781 * (H = R + q), K = B + X, Z = B - X;\n                t[f + 40] = Z + Y, t[f + 24] = Z - Y, t[f + 8] = K + J, t[f + 56] = K - J, f++;\n            }\n            for(l = 0; l < 64; ++l)h = t[l] * e[l], d[l] = h > 0 ? h + .5 | 0 : h - .5 | 0;\n            return d;\n        }(t, e), c = 0; c < 64; ++c)p[x[c]] = u[c];\n        var l = p[0] - n;\n        n = p[0], 0 == l ? O(r[0]) : (O(r[f[a = 32767 + l]]), O(h[a]));\n        for(var g = 63; g > 0 && 0 == p[g];)g--;\n        if (0 == g) return O(o), n;\n        for(var m, v = 1; v <= g;){\n            for(var b = v; 0 == p[v] && v <= g;)++v;\n            var y = v - b;\n            if (y >= 16) {\n                m = y >> 4;\n                for(var w = 1; w <= m; ++w)O(s);\n                y &= 15;\n            }\n            a = 32767 + p[v], O(i[(y << 4) + f[a]]), O(h[a]), v++;\n        }\n        return 63 != g && O(o), n;\n    }\n    function E(t) {\n        t = Math.min(Math.max(t, 1), 100), a != t && (function(t) {\n            for(var e = [\n                16,\n                11,\n                10,\n                16,\n                24,\n                40,\n                51,\n                61,\n                12,\n                12,\n                14,\n                19,\n                26,\n                58,\n                60,\n                55,\n                14,\n                13,\n                16,\n                24,\n                40,\n                57,\n                69,\n                56,\n                14,\n                17,\n                22,\n                29,\n                51,\n                87,\n                80,\n                62,\n                18,\n                22,\n                37,\n                56,\n                68,\n                109,\n                103,\n                77,\n                24,\n                35,\n                55,\n                64,\n                81,\n                104,\n                113,\n                92,\n                49,\n                64,\n                78,\n                87,\n                103,\n                121,\n                120,\n                101,\n                72,\n                92,\n                95,\n                98,\n                112,\n                100,\n                103,\n                99\n            ], n = 0; n < 64; n++){\n                var r = o((e[n] * t + 50) / 100);\n                r = Math.min(Math.max(r, 1), 255), s[x[n]] = r;\n            }\n            for(var i = [\n                17,\n                18,\n                24,\n                47,\n                99,\n                99,\n                99,\n                99,\n                18,\n                21,\n                26,\n                66,\n                99,\n                99,\n                99,\n                99,\n                24,\n                26,\n                56,\n                99,\n                99,\n                99,\n                99,\n                99,\n                47,\n                66,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99,\n                99\n            ], a = 0; a < 64; a++){\n                var h = o((i[a] * t + 50) / 100);\n                h = Math.min(Math.max(h, 1), 255), u[x[a]] = h;\n            }\n            for(var f = [\n                1,\n                1.387039845,\n                1.306562965,\n                1.175875602,\n                1,\n                .785694958,\n                .5411961,\n                .275899379\n            ], d = 0, p = 0; p < 8; p++)for(var g = 0; g < 8; g++)c[d] = 1 / (s[x[d]] * f[p] * f[g] * 8), l[d] = 1 / (u[x[d]] * f[p] * f[g] * 8), d++;\n        }(t < 50 ? Math.floor(5e3 / t) : Math.floor(200 - 2 * t)), a = t);\n    }\n    this.encode = function(t, a) {\n        a && E(a), g = new Array, m = 0, v = 7, M(65496), M(65504), M(16), B(74), B(70), B(73), B(70), B(0), B(1), B(1), B(0), M(1), M(1), B(0), B(0), function() {\n            M(65499), M(132), B(0);\n            for(var t = 0; t < 64; t++)B(s[t]);\n            B(1);\n            for(var e = 0; e < 64; e++)B(u[e]);\n        }(), function(t, e) {\n            M(65472), M(17), B(8), M(e), M(t), B(3), B(1), B(17), B(0), B(2), B(17), B(1), B(3), B(17), B(1);\n        }(t.width, t.height), function() {\n            M(65476), M(418), B(0);\n            for(var t = 0; t < 16; t++)B(A[t + 1]);\n            for(var e = 0; e <= 11; e++)B(S[e]);\n            B(16);\n            for(var n = 0; n < 16; n++)B(_[n + 1]);\n            for(var r = 0; r <= 161; r++)B(P[r]);\n            B(1);\n            for(var i = 0; i < 16; i++)B(k[i + 1]);\n            for(var a = 0; a <= 11; a++)B(F[a]);\n            B(17);\n            for(var o = 0; o < 16; o++)B(I[o + 1]);\n            for(var s = 0; s <= 161; s++)B(j[s]);\n        }(), M(65498), M(12), B(3), B(1), B(0), B(2), B(17), B(3), B(17), B(0), B(63), B(0);\n        var o = 0, h = 0, f = 0;\n        m = 0, v = 7, this.encode.displayName = \"_encode_\";\n        for(var d, p, N, x, C, R, D, T, z, U = t.data, H = t.width, W = t.height, V = 4 * H, G = 0; G < W;){\n            for(d = 0; d < V;){\n                for(C = V * G + d, D = -1, T = 0, z = 0; z < 64; z++)R = C + (T = z >> 3) * V + (D = 4 * (7 & z)), G + T >= W && (R -= V * (G + 1 + T - W)), d + D >= V && (R -= d + D - V + 4), p = U[R++], N = U[R++], x = U[R++], b[z] = (L[p] + L[N + 256 | 0] + L[x + 512 | 0] >> 16) - 128, y[z] = (L[p + 768 | 0] + L[N + 1024 | 0] + L[x + 1280 | 0] >> 16) - 128, w[z] = (L[p + 1280 | 0] + L[N + 1536 | 0] + L[x + 1792 | 0] >> 16) - 128;\n                o = q(b, c, o, e, r), h = q(y, l, h, n, i), f = q(w, l, f, n, i), d += 32;\n            }\n            G += 8;\n        }\n        if (v >= 0) {\n            var Y = [];\n            Y[1] = v + 1, Y[0] = (1 << v + 1) - 1, O(Y);\n        }\n        return M(65497), new Uint8Array(g);\n    }, t = t || 50, function() {\n        for(var t = String.fromCharCode, e = 0; e < 256; e++)N[e] = t(e);\n    }(), e = C(A, S), n = C(k, F), r = C(_, P), i = C(I, j), function() {\n        for(var t = 1, e = 2, n = 1; n <= 15; n++){\n            for(var r = t; r < e; r++)f[32767 + r] = n, h[32767 + r] = [], h[32767 + r][1] = n, h[32767 + r][0] = r;\n            for(var i = -(e - 1); i <= -t; i++)f[32767 + i] = n, h[32767 + i] = [], h[32767 + i][1] = n, h[32767 + i][0] = e - 1 + i;\n            t <<= 1, e <<= 1;\n        }\n    }(), function() {\n        for(var t = 0; t < 256; t++)L[t] = 19595 * t, L[t + 256 | 0] = 38470 * t, L[t + 512 | 0] = 7471 * t + 32768, L[t + 768 | 0] = -11059 * t, L[t + 1024 | 0] = -21709 * t, L[t + 1280 | 0] = 32768 * t + 8421375, L[t + 1536 | 0] = -27439 * t, L[t + 1792 | 0] = -5329 * t;\n    }(), E(t);\n}\n/**\n * @license\n * Copyright (c) 2017 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function ce(t, e) {\n    if (this.pos = 0, this.buffer = t, this.datav = new DataView(t.buffer), this.is_with_alpha = !!e, this.bottom_up = !0, this.flag = String.fromCharCode(this.buffer[0]) + String.fromCharCode(this.buffer[1]), this.pos += 2, -1 === [\n        \"BM\",\n        \"BA\",\n        \"CI\",\n        \"CP\",\n        \"IC\",\n        \"PT\"\n    ].indexOf(this.flag)) throw new Error(\"Invalid BMP File\");\n    this.parseHeader(), this.parseBGR();\n}\nfunction le(t) {\n    function e(t) {\n        if (!t) throw Error(\"assert :P\");\n    }\n    function n(t, e, n) {\n        for(var r = 0; 4 > r; r++)if (t[e + r] != n.charCodeAt(r)) return !0;\n        return !1;\n    }\n    function r(t, e, n, r, i) {\n        for(var a = 0; a < i; a++)t[e + a] = n[r + a];\n    }\n    function i(t, e, n, r) {\n        for(var i = 0; i < r; i++)t[e + i] = n;\n    }\n    function a(t) {\n        return new Int32Array(t);\n    }\n    function o(t, e) {\n        for(var n = [], r = 0; r < t; r++)n.push(new e);\n        return n;\n    }\n    function s(t, e) {\n        var n = [];\n        return function t(n, r, i) {\n            for(var a = i[r], o = 0; o < a && (n.push(i.length > r + 1 ? [] : new e), !(i.length < r + 1)); o++)t(n[o], r + 1, i);\n        }(n, 0, t), n;\n    }\n    var u = function() {\n        var t = this;\n        function u(t, e) {\n            for(var n = 1 << e - 1 >>> 0; t & n;)n >>>= 1;\n            return n ? (t & n - 1) + n : t;\n        }\n        function c(t, n, r, i, a) {\n            e(!(i % r));\n            do {\n                t[n + (i -= r)] = a;\n            }while (0 < i);\n        }\n        function l(t, n, r, i, o) {\n            if (e(2328 >= o), 512 >= o) var s = a(512);\n            else if (null == (s = a(o))) return 0;\n            return function(t, n, r, i, o, s) {\n                var l, f, d = n, p = 1 << r, g = a(16), m = a(16);\n                for(e(0 != o), e(null != i), e(null != t), e(0 < r), f = 0; f < o; ++f){\n                    if (15 < i[f]) return 0;\n                    ++g[i[f]];\n                }\n                if (g[0] == o) return 0;\n                for(m[1] = 0, l = 1; 15 > l; ++l){\n                    if (g[l] > 1 << l) return 0;\n                    m[l + 1] = m[l] + g[l];\n                }\n                for(f = 0; f < o; ++f)l = i[f], 0 < i[f] && (s[m[l]++] = f);\n                if (1 == m[15]) return (i = new h).g = 0, i.value = s[0], c(t, d, 1, p, i), p;\n                var v, b = -1, y = p - 1, w = 0, N = 1, L = 1, x = 1 << r;\n                for(f = 0, l = 1, o = 2; l <= r; ++l, o <<= 1){\n                    if (N += L <<= 1, 0 > (L -= g[l])) return 0;\n                    for(; 0 < g[l]; --g[l])(i = new h).g = l, i.value = s[f++], c(t, d + w, o, x, i), w = u(w, l);\n                }\n                for(l = r + 1, o = 2; 15 >= l; ++l, o <<= 1){\n                    if (N += L <<= 1, 0 > (L -= g[l])) return 0;\n                    for(; 0 < g[l]; --g[l]){\n                        if (i = new h, (w & y) != b) {\n                            for(d += x, v = 1 << (b = l) - r; 15 > b && !(0 >= (v -= g[b]));)++b, v <<= 1;\n                            p += x = 1 << (v = b - r), t[n + (b = w & y)].g = v + r, t[n + b].value = d - n - b;\n                        }\n                        i.g = l - r, i.value = s[f++], c(t, d + (w >> r), o, x, i), w = u(w, l);\n                    }\n                }\n                return N != 2 * m[15] - 1 ? 0 : p;\n            }(t, n, r, i, o, s);\n        }\n        function h() {\n            this.value = this.g = 0;\n        }\n        function f() {\n            this.value = this.g = 0;\n        }\n        function d() {\n            this.G = o(5, h), this.H = a(5), this.jc = this.Qb = this.qb = this.nd = 0, this.pd = o(Rn, f);\n        }\n        function p(t, n, r, i) {\n            e(null != t), e(null != n), e(2147483648 > i), t.Ca = 254, t.I = 0, t.b = -8, t.Ka = 0, t.oa = n, t.pa = r, t.Jd = n, t.Yc = r + i, t.Zc = 4 <= i ? r + i - 4 + 1 : r, _(t);\n        }\n        function g(t, e) {\n            for(var n = 0; 0 < e--;)n |= k(t, 128) << e;\n            return n;\n        }\n        function m(t, e) {\n            var n = g(t, e);\n            return P(t) ? -n : n;\n        }\n        function v(t, n, r, i) {\n            var a, o = 0;\n            for(e(null != t), e(null != n), e(4294967288 > i), t.Sb = i, t.Ra = 0, t.u = 0, t.h = 0, 4 < i && (i = 4), a = 0; a < i; ++a)o += n[r + a] << 8 * a;\n            t.Ra = o, t.bb = i, t.oa = n, t.pa = r;\n        }\n        function b(t) {\n            for(; 8 <= t.u && t.bb < t.Sb;)t.Ra >>>= 8, t.Ra += t.oa[t.pa + t.bb] << zn - 8 >>> 0, ++t.bb, t.u -= 8;\n            x(t) && (t.h = 1, t.u = 0);\n        }\n        function y(t, n) {\n            if (e(0 <= n), !t.h && n <= Tn) {\n                var r = L(t) & Dn[n];\n                return t.u += n, b(t), r;\n            }\n            return t.h = 1, t.u = 0;\n        }\n        function w() {\n            this.b = this.Ca = this.I = 0, this.oa = [], this.pa = 0, this.Jd = [], this.Yc = 0, this.Zc = [], this.Ka = 0;\n        }\n        function N() {\n            this.Ra = 0, this.oa = [], this.h = this.u = this.bb = this.Sb = this.pa = 0;\n        }\n        function L(t) {\n            return t.Ra >>> (t.u & zn - 1) >>> 0;\n        }\n        function x(t) {\n            return e(t.bb <= t.Sb), t.h || t.bb == t.Sb && t.u > zn;\n        }\n        function A(t, e) {\n            t.u = e, t.h = x(t);\n        }\n        function S(t) {\n            t.u >= Un && (e(t.u >= Un), b(t));\n        }\n        function _(t) {\n            e(null != t && null != t.oa), t.pa < t.Zc ? (t.I = (t.oa[t.pa++] | t.I << 8) >>> 0, t.b += 8) : (e(null != t && null != t.oa), t.pa < t.Yc ? (t.b += 8, t.I = t.oa[t.pa++] | t.I << 8) : t.Ka ? t.b = 0 : (t.I <<= 8, t.b += 8, t.Ka = 1));\n        }\n        function P(t) {\n            return g(t, 1);\n        }\n        function k(t, e) {\n            var n = t.Ca;\n            0 > t.b && _(t);\n            var r = t.b, i = n * e >>> 8, a = (t.I >>> r > i) + 0;\n            for(a ? (n -= i, t.I -= i + 1 << r >>> 0) : n = i + 1, r = n, i = 0; 256 <= r;)i += 8, r >>= 8;\n            return r = 7 ^ i + Hn[r], t.b -= r, t.Ca = (n << r) - 1, a;\n        }\n        function F(t, e, n) {\n            t[e + 0] = n >> 24 & 255, t[e + 1] = n >> 16 & 255, t[e + 2] = n >> 8 & 255, t[e + 3] = 255 & n;\n        }\n        function I(t, e) {\n            return t[e + 0] | t[e + 1] << 8;\n        }\n        function j(t, e) {\n            return I(t, e) | t[e + 2] << 16;\n        }\n        function C(t, e) {\n            return I(t, e) | I(t, e + 2) << 16;\n        }\n        function O(t, n) {\n            var r = 1 << n;\n            return e(null != t), e(0 < n), t.X = a(r), null == t.X ? 0 : (t.Mb = 32 - n, t.Xa = n, 1);\n        }\n        function B(t, n) {\n            e(null != t), e(null != n), e(t.Xa == n.Xa), r(n.X, 0, t.X, 0, 1 << n.Xa);\n        }\n        function M() {\n            this.X = [], this.Xa = this.Mb = 0;\n        }\n        function q(t, n, r, i) {\n            e(null != r), e(null != i);\n            var a = r[0], o = i[0];\n            return 0 == a && (a = (t * o + n / 2) / n), 0 == o && (o = (n * a + t / 2) / t), 0 >= a || 0 >= o ? 0 : (r[0] = a, i[0] = o, 1);\n        }\n        function E(t, e) {\n            return t + (1 << e) - 1 >>> e;\n        }\n        function R(t, e) {\n            return ((4278255360 & t) + (4278255360 & e) >>> 0 & 4278255360) + ((16711935 & t) + (16711935 & e) >>> 0 & 16711935) >>> 0;\n        }\n        function D(e, n) {\n            t[n] = function(n, r, i, a, o, s, u) {\n                var c;\n                for(c = 0; c < o; ++c){\n                    var l = t[e](s[u + c - 1], i, a + c);\n                    s[u + c] = R(n[r + c], l);\n                }\n            };\n        }\n        function T() {\n            this.ud = this.hd = this.jd = 0;\n        }\n        function z(t, e) {\n            return ((4278124286 & (t ^ e)) >>> 1) + (t & e) >>> 0;\n        }\n        function U(t) {\n            return 0 <= t && 256 > t ? t : 0 > t ? 0 : 255 < t ? 255 : void 0;\n        }\n        function H(t, e) {\n            return U(t + (t - e + .5 >> 1));\n        }\n        function W(t, e, n) {\n            return Math.abs(e - n) - Math.abs(t - n);\n        }\n        function V(t, e, n, r, i, a, o) {\n            for(r = a[o - 1], n = 0; n < i; ++n)a[o + n] = r = R(t[e + n], r);\n        }\n        function G(t, e, n, r, i) {\n            var a;\n            for(a = 0; a < n; ++a){\n                var o = t[e + a], s = o >> 8 & 255, u = 16711935 & (u = (u = 16711935 & o) + ((s << 16) + s));\n                r[i + a] = (4278255360 & o) + u >>> 0;\n            }\n        }\n        function Y(t, e) {\n            e.jd = 255 & t, e.hd = t >> 8 & 255, e.ud = t >> 16 & 255;\n        }\n        function J(t, e, n, r, i, a) {\n            var o;\n            for(o = 0; o < r; ++o){\n                var s = e[n + o], u = s >>> 8, c = s, l = 255 & (l = (l = s >>> 16) + ((t.jd << 24 >> 24) * (u << 24 >> 24) >>> 5));\n                c = 255 & (c = (c += (t.hd << 24 >> 24) * (u << 24 >> 24) >>> 5) + ((t.ud << 24 >> 24) * (l << 24 >> 24) >>> 5)), i[a + o] = (4278255360 & s) + (l << 16) + c;\n            }\n        }\n        function X(e, n, r, i, a) {\n            t[n] = function(t, e, n, r, o, s, u, c, l) {\n                for(r = u; r < c; ++r)for(u = 0; u < l; ++u)o[s++] = a(n[i(t[e++])]);\n            }, t[e] = function(e, n, o, s, u, c, l) {\n                var h = 8 >> e.b, f = e.Ea, d = e.K[0], p = e.w;\n                if (8 > h) for(e = (1 << e.b) - 1, p = (1 << h) - 1; n < o; ++n){\n                    var g, m = 0;\n                    for(g = 0; g < f; ++g)g & e || (m = i(s[u++])), c[l++] = a(d[m & p]), m >>= h;\n                }\n                else t[\"VP8LMapColor\" + r](s, u, d, p, c, l, n, o, f);\n            };\n        }\n        function K(t, e, n, r, i) {\n            for(n = e + n; e < n;){\n                var a = t[e++];\n                r[i++] = a >> 16 & 255, r[i++] = a >> 8 & 255, r[i++] = 255 & a;\n            }\n        }\n        function Z(t, e, n, r, i) {\n            for(n = e + n; e < n;){\n                var a = t[e++];\n                r[i++] = a >> 16 & 255, r[i++] = a >> 8 & 255, r[i++] = 255 & a, r[i++] = a >> 24 & 255;\n            }\n        }\n        function $(t, e, n, r, i) {\n            for(n = e + n; e < n;){\n                var a = (o = t[e++]) >> 16 & 240 | o >> 12 & 15, o = 240 & o | o >> 28 & 15;\n                r[i++] = a, r[i++] = o;\n            }\n        }\n        function Q(t, e, n, r, i) {\n            for(n = e + n; e < n;){\n                var a = (o = t[e++]) >> 16 & 248 | o >> 13 & 7, o = o >> 5 & 224 | o >> 3 & 31;\n                r[i++] = a, r[i++] = o;\n            }\n        }\n        function tt(t, e, n, r, i) {\n            for(n = e + n; e < n;){\n                var a = t[e++];\n                r[i++] = 255 & a, r[i++] = a >> 8 & 255, r[i++] = a >> 16 & 255;\n            }\n        }\n        function et(t, e, n, i, a, o) {\n            if (0 == o) for(n = e + n; e < n;)F(i, ((o = t[e++])[0] >> 24 | o[1] >> 8 & 65280 | o[2] << 8 & 16711680 | o[3] << 24) >>> 0), a += 32;\n            else r(i, a, t, e, n);\n        }\n        function nt(e, n) {\n            t[n][0] = t[e + \"0\"], t[n][1] = t[e + \"1\"], t[n][2] = t[e + \"2\"], t[n][3] = t[e + \"3\"], t[n][4] = t[e + \"4\"], t[n][5] = t[e + \"5\"], t[n][6] = t[e + \"6\"], t[n][7] = t[e + \"7\"], t[n][8] = t[e + \"8\"], t[n][9] = t[e + \"9\"], t[n][10] = t[e + \"10\"], t[n][11] = t[e + \"11\"], t[n][12] = t[e + \"12\"], t[n][13] = t[e + \"13\"], t[n][14] = t[e + \"0\"], t[n][15] = t[e + \"0\"];\n        }\n        function rt(t) {\n            return t == Ur || t == Hr || t == Wr || t == Vr;\n        }\n        function it() {\n            this.eb = [], this.size = this.A = this.fb = 0;\n        }\n        function at() {\n            this.y = [], this.f = [], this.ea = [], this.F = [], this.Tc = this.Ed = this.Cd = this.Fd = this.lb = this.Db = this.Ab = this.fa = this.J = this.W = this.N = this.O = 0;\n        }\n        function ot() {\n            this.Rd = this.height = this.width = this.S = 0, this.f = {}, this.f.RGBA = new it, this.f.kb = new at, this.sd = null;\n        }\n        function st() {\n            this.width = [\n                0\n            ], this.height = [\n                0\n            ], this.Pd = [\n                0\n            ], this.Qd = [\n                0\n            ], this.format = [\n                0\n            ];\n        }\n        function ut() {\n            this.Id = this.fd = this.Md = this.hb = this.ib = this.da = this.bd = this.cd = this.j = this.v = this.Da = this.Sd = this.ob = 0;\n        }\n        function ct(t) {\n            return alert(\"todo:WebPSamplerProcessPlane\"), t.T;\n        }\n        function lt(t, e) {\n            var n = t.T, i = e.ba.f.RGBA, a = i.eb, o = i.fb + t.ka * i.A, s = mi[e.ba.S], u = t.y, c = t.O, l = t.f, h = t.N, f = t.ea, d = t.W, p = e.cc, g = e.dc, m = e.Mc, v = e.Nc, b = t.ka, y = t.ka + t.T, w = t.U, N = w + 1 >> 1;\n            for(0 == b ? s(u, c, null, null, l, h, f, d, l, h, f, d, a, o, null, null, w) : (s(e.ec, e.fc, u, c, p, g, m, v, l, h, f, d, a, o - i.A, a, o, w), ++n); b + 2 < y; b += 2)p = l, g = h, m = f, v = d, h += t.Rc, d += t.Rc, o += 2 * i.A, s(u, (c += 2 * t.fa) - t.fa, u, c, p, g, m, v, l, h, f, d, a, o - i.A, a, o, w);\n            return c += t.fa, t.j + y < t.o ? (r(e.ec, e.fc, u, c, w), r(e.cc, e.dc, l, h, N), r(e.Mc, e.Nc, f, d, N), n--) : 1 & y || s(u, c, null, null, l, h, f, d, l, h, f, d, a, o + i.A, null, null, w), n;\n        }\n        function ht(t, n, r) {\n            var i = t.F, a = [\n                t.J\n            ];\n            if (null != i) {\n                var o = t.U, s = n.ba.S, u = s == Dr || s == Wr;\n                n = n.ba.f.RGBA;\n                var c = [\n                    0\n                ], l = t.ka;\n                c[0] = t.T, t.Kb && (0 == l ? --c[0] : (--l, a[0] -= t.width), t.j + t.ka + t.T == t.o && (c[0] = t.o - t.j - l));\n                var h = n.eb;\n                l = n.fb + l * n.A, t = Ar(i, a[0], t.width, o, c, h, l + (u ? 0 : 3), n.A), e(r == c), t && rt(s) && Lr(h, l, u, o, c, n.A);\n            }\n            return 0;\n        }\n        function ft(t) {\n            var e = t.ma, n = e.ba.S, r = 11 > n, i = n == qr || n == Rr || n == Dr || n == Tr || 12 == n || rt(n);\n            if (e.memory = null, e.Ib = null, e.Jb = null, e.Nd = null, !Mn(e.Oa, t, i ? 11 : 12)) return 0;\n            if (i && rt(n) && bn(), t.da) alert(\"todo:use_scaling\");\n            else {\n                if (r) {\n                    if (e.Ib = ct, t.Kb) {\n                        if (n = t.U + 1 >> 1, e.memory = a(t.U + 2 * n), null == e.memory) return 0;\n                        e.ec = e.memory, e.fc = 0, e.cc = e.ec, e.dc = e.fc + t.U, e.Mc = e.cc, e.Nc = e.dc + n, e.Ib = lt, bn();\n                    }\n                } else alert(\"todo:EmitYUV\");\n                i && (e.Jb = ht, r && mn());\n            }\n            if (r && !Ii) {\n                for(t = 0; 256 > t; ++t)ji[t] = 89858 * (t - 128) + Si >> Ai, Bi[t] = -22014 * (t - 128) + Si, Oi[t] = -45773 * (t - 128), Ci[t] = 113618 * (t - 128) + Si >> Ai;\n                for(t = _i; t < Pi; ++t)e = 76283 * (t - 16) + Si >> Ai, Mi[t - _i] = Vt(e, 255), qi[t - _i] = Vt(e + 8 >> 4, 15);\n                Ii = 1;\n            }\n            return 1;\n        }\n        function dt(t) {\n            var n = t.ma, r = t.U, i = t.T;\n            return e(!(1 & t.ka)), 0 >= r || 0 >= i ? 0 : (r = n.Ib(t, n), null != n.Jb && n.Jb(t, n, r), n.Dc += r, 1);\n        }\n        function pt(t) {\n            t.ma.memory = null;\n        }\n        function gt(t, e, n, r) {\n            return 47 != y(t, 8) ? 0 : (e[0] = y(t, 14) + 1, n[0] = y(t, 14) + 1, r[0] = y(t, 1), 0 != y(t, 3) ? 0 : !t.h);\n        }\n        function mt(t, e) {\n            if (4 > t) return t + 1;\n            var n = t - 2 >> 1;\n            return (2 + (1 & t) << n) + y(e, n) + 1;\n        }\n        function vt(t, e) {\n            return 120 < e ? e - 120 : 1 <= (n = ((n = Zr[e - 1]) >> 4) * t + (8 - (15 & n))) ? n : 1;\n            var n;\n        }\n        function bt(t, e, n) {\n            var r = L(n), i = t[e += 255 & r].g - 8;\n            return 0 < i && (A(n, n.u + 8), r = L(n), e += t[e].value, e += r & (1 << i) - 1), A(n, n.u + t[e].g), t[e].value;\n        }\n        function yt(t, n, r) {\n            return r.g += t.g, r.value += t.value << n >>> 0, e(8 >= r.g), t.g;\n        }\n        function wt(t, n, r) {\n            var i = t.xc;\n            return e((n = 0 == i ? 0 : t.vc[t.md * (r >> i) + (n >> i)]) < t.Wb), t.Ya[n];\n        }\n        function Nt(t, n, i, a) {\n            var o = t.ab, s = t.c * n, u = t.C;\n            n = u + n;\n            var c = i, l = a;\n            for(a = t.Ta, i = t.Ua; 0 < o--;){\n                var h = t.gc[o], f = u, d = n, p = c, g = l, m = (l = a, c = i, h.Ea);\n                switch(e(f < d), e(d <= h.nc), h.hc){\n                    case 2:\n                        Gn(p, g, (d - f) * m, l, c);\n                        break;\n                    case 0:\n                        var v = f, b = d, y = l, w = c, N = (_ = h).Ea;\n                        0 == v && (Wn(p, g, null, null, 1, y, w), V(p, g + 1, 0, 0, N - 1, y, w + 1), g += N, w += N, ++v);\n                        for(var L = 1 << _.b, x = L - 1, A = E(N, _.b), S = _.K, _ = _.w + (v >> _.b) * A; v < b;){\n                            var P = S, k = _, F = 1;\n                            for(Vn(p, g, y, w - N, 1, y, w); F < N;){\n                                var I = (F & ~x) + L;\n                                I > N && (I = N), (0, Zn[P[k++] >> 8 & 15])(p, g + +F, y, w + F - N, I - F, y, w + F), F = I;\n                            }\n                            g += N, w += N, ++v & x || (_ += A);\n                        }\n                        d != h.nc && r(l, c - m, l, c + (d - f - 1) * m, m);\n                        break;\n                    case 1:\n                        for(m = p, b = g, N = (p = h.Ea) - (w = p & ~(y = (g = 1 << h.b) - 1)), v = E(p, h.b), L = h.K, h = h.w + (f >> h.b) * v; f < d;){\n                            for(x = L, A = h, S = new T, _ = b + w, P = b + p; b < _;)Y(x[A++], S), $n(S, m, b, g, l, c), b += g, c += g;\n                            b < P && (Y(x[A++], S), $n(S, m, b, N, l, c), b += N, c += N), ++f & y || (h += v);\n                        }\n                        break;\n                    case 3:\n                        if (p == l && g == c && 0 < h.b) {\n                            for(b = l, p = m = c + (d - f) * m - (w = (d - f) * E(h.Ea, h.b)), g = l, y = c, v = [], w = (N = w) - 1; 0 <= w; --w)v[w] = g[y + w];\n                            for(w = N - 1; 0 <= w; --w)b[p + w] = v[w];\n                            Yn(h, f, d, l, m, l, c);\n                        } else Yn(h, f, d, p, g, l, c);\n                }\n                c = a, l = i;\n            }\n            l != i && r(a, i, c, l, s);\n        }\n        function Lt(t, n) {\n            var r = t.V, i = t.Ba + t.c * t.C, a = n - t.C;\n            if (e(n <= t.l.o), e(16 >= a), 0 < a) {\n                var o = t.l, s = t.Ta, u = t.Ua, c = o.width;\n                if (Nt(t, a, r, i), a = u = [\n                    u\n                ], e((r = t.C) < (i = n)), e(o.v < o.va), i > o.o && (i = o.o), r < o.j) {\n                    var l = o.j - r;\n                    r = o.j, a[0] += l * c;\n                }\n                if (r >= i ? r = 0 : (a[0] += 4 * o.v, o.ka = r - o.j, o.U = o.va - o.v, o.T = i - r, r = 1), r) {\n                    if (u = u[0], 11 > (r = t.ca).S) {\n                        var h = r.f.RGBA, f = (i = r.S, a = o.U, o = o.T, l = h.eb, h.A), d = o;\n                        for(h = h.fb + t.Ma * h.A; 0 < d--;){\n                            var p = s, g = u, m = a, v = l, b = h;\n                            switch(i){\n                                case Mr:\n                                    Qn(p, g, m, v, b);\n                                    break;\n                                case qr:\n                                    tr(p, g, m, v, b);\n                                    break;\n                                case Ur:\n                                    tr(p, g, m, v, b), Lr(v, b, 0, m, 1, 0);\n                                    break;\n                                case Er:\n                                    rr(p, g, m, v, b);\n                                    break;\n                                case Rr:\n                                    et(p, g, m, v, b, 1);\n                                    break;\n                                case Hr:\n                                    et(p, g, m, v, b, 1), Lr(v, b, 0, m, 1, 0);\n                                    break;\n                                case Dr:\n                                    et(p, g, m, v, b, 0);\n                                    break;\n                                case Wr:\n                                    et(p, g, m, v, b, 0), Lr(v, b, 1, m, 1, 0);\n                                    break;\n                                case Tr:\n                                    er(p, g, m, v, b);\n                                    break;\n                                case Vr:\n                                    er(p, g, m, v, b), xr(v, b, m, 1, 0);\n                                    break;\n                                case zr:\n                                    nr(p, g, m, v, b);\n                                    break;\n                                default:\n                                    e(0);\n                            }\n                            u += c, h += f;\n                        }\n                        t.Ma += o;\n                    } else alert(\"todo:EmitRescaledRowsYUVA\");\n                    e(t.Ma <= r.height);\n                }\n            }\n            t.C = n, e(t.C <= t.i);\n        }\n        function xt(t) {\n            var e;\n            if (0 < t.ua) return 0;\n            for(e = 0; e < t.Wb; ++e){\n                var n = t.Ya[e].G, r = t.Ya[e].H;\n                if (0 < n[1][r[1] + 0].g || 0 < n[2][r[2] + 0].g || 0 < n[3][r[3] + 0].g) return 0;\n            }\n            return 1;\n        }\n        function At(t, n, r, i, a, o) {\n            if (0 != t.Z) {\n                var s = t.qd, u = t.rd;\n                for(e(null != gi[t.Z]); n < r; ++n)gi[t.Z](s, u, i, a, i, a, o), s = i, u = a, a += o;\n                t.qd = s, t.rd = u;\n            }\n        }\n        function St(t, n) {\n            var r = t.l.ma, i = 0 == r.Z || 1 == r.Z ? t.l.j : t.C;\n            if (i = t.C < i ? i : t.C, e(n <= t.l.o), n > i) {\n                var a = t.l.width, o = r.ca, s = r.tb + a * i, u = t.V, c = t.Ba + t.c * i, l = t.gc;\n                e(1 == t.ab), e(3 == l[0].hc), Xn(l[0], i, n, u, c, o, s), At(r, i, n, o, s, a);\n            }\n            t.C = t.Ma = n;\n        }\n        function _t(t, n, r, i, a, o, s) {\n            var u = t.$ / i, c = t.$ % i, l = t.m, h = t.s, f = r + t.$, d = f;\n            a = r + i * a;\n            var p = r + i * o, g = 280 + h.ua, m = t.Pb ? u : 16777216, v = 0 < h.ua ? h.Wa : null, b = h.wc, y = f < p ? wt(h, c, u) : null;\n            e(t.C < o), e(p <= a);\n            var w = !1;\n            t: for(;;){\n                for(; w || f < p;){\n                    var N = 0;\n                    if (u >= m) {\n                        var _ = f - r;\n                        e((m = t).Pb), m.wd = m.m, m.xd = _, 0 < m.s.ua && B(m.s.Wa, m.s.vb), m = u + Qr;\n                    }\n                    if (c & b || (y = wt(h, c, u)), e(null != y), y.Qb && (n[f] = y.qb, w = !0), !w) if (S(l), y.jc) {\n                        N = l, _ = n;\n                        var P = f, k = y.pd[L(N) & Rn - 1];\n                        e(y.jc), 256 > k.g ? (A(N, N.u + k.g), _[P] = k.value, N = 0) : (A(N, N.u + k.g - 256), e(256 <= k.value), N = k.value), 0 == N && (w = !0);\n                    } else N = bt(y.G[0], y.H[0], l);\n                    if (l.h) break;\n                    if (w || 256 > N) {\n                        if (!w) if (y.nd) n[f] = (y.qb | N << 8) >>> 0;\n                        else {\n                            if (S(l), w = bt(y.G[1], y.H[1], l), S(l), _ = bt(y.G[2], y.H[2], l), P = bt(y.G[3], y.H[3], l), l.h) break;\n                            n[f] = (P << 24 | w << 16 | N << 8 | _) >>> 0;\n                        }\n                        if (w = !1, ++f, ++c >= i && (c = 0, ++u, null != s && u <= o && !(u % 16) && s(t, u), null != v)) for(; d < f;)N = n[d++], v.X[(506832829 * N & 4294967295) >>> v.Mb] = N;\n                    } else if (280 > N) {\n                        if (N = mt(N - 256, l), _ = bt(y.G[4], y.H[4], l), S(l), _ = vt(i, _ = mt(_, l)), l.h) break;\n                        if (f - r < _ || a - f < N) break t;\n                        for(P = 0; P < N; ++P)n[f + P] = n[f + P - _];\n                        for(f += N, c += N; c >= i;)c -= i, ++u, null != s && u <= o && !(u % 16) && s(t, u);\n                        if (e(f <= a), c & b && (y = wt(h, c, u)), null != v) for(; d < f;)N = n[d++], v.X[(506832829 * N & 4294967295) >>> v.Mb] = N;\n                    } else {\n                        if (!(N < g)) break t;\n                        for(w = N - 280, e(null != v); d < f;)N = n[d++], v.X[(506832829 * N & 4294967295) >>> v.Mb] = N;\n                        N = f, e(!(w >>> (_ = v).Xa)), n[N] = _.X[w], w = !0;\n                    }\n                    w || e(l.h == x(l));\n                }\n                if (t.Pb && l.h && f < a) e(t.m.h), t.a = 5, t.m = t.wd, t.$ = t.xd, 0 < t.s.ua && B(t.s.vb, t.s.Wa);\n                else {\n                    if (l.h) break t;\n                    null != s && s(t, u > o ? o : u), t.a = 0, t.$ = f - r;\n                }\n                return 1;\n            }\n            return t.a = 3, 0;\n        }\n        function Pt(t) {\n            e(null != t), t.vc = null, t.yc = null, t.Ya = null;\n            var n = t.Wa;\n            null != n && (n.X = null), t.vb = null, e(null != t);\n        }\n        function kt() {\n            var e = new on;\n            return null == e ? null : (e.a = 0, e.xb = pi, nt(\"Predictor\", \"VP8LPredictors\"), nt(\"Predictor\", \"VP8LPredictors_C\"), nt(\"PredictorAdd\", \"VP8LPredictorsAdd\"), nt(\"PredictorAdd\", \"VP8LPredictorsAdd_C\"), Gn = G, $n = J, Qn = K, tr = Z, er = $, nr = Q, rr = tt, t.VP8LMapColor32b = Jn, t.VP8LMapColor8b = Kn, e);\n        }\n        function Ft(t, n, r, s, u) {\n            var c = 1, f = [\n                t\n            ], p = [\n                n\n            ], g = s.m, m = s.s, v = null, b = 0;\n            t: for(;;){\n                if (r) for(; c && y(g, 1);){\n                    var w = f, N = p, x = s, _ = 1, P = x.m, k = x.gc[x.ab], F = y(P, 2);\n                    if (x.Oc & 1 << F) c = 0;\n                    else {\n                        switch(x.Oc |= 1 << F, k.hc = F, k.Ea = w[0], k.nc = N[0], k.K = [\n                            null\n                        ], ++x.ab, e(4 >= x.ab), F){\n                            case 0:\n                            case 1:\n                                k.b = y(P, 3) + 2, _ = Ft(E(k.Ea, k.b), E(k.nc, k.b), 0, x, k.K), k.K = k.K[0];\n                                break;\n                            case 3:\n                                var I, j = y(P, 8) + 1, C = 16 < j ? 0 : 4 < j ? 1 : 2 < j ? 2 : 3;\n                                if (w[0] = E(k.Ea, C), k.b = C, I = _ = Ft(j, 1, 0, x, k.K)) {\n                                    var B, M = j, q = k, D = 1 << (8 >> q.b), T = a(D);\n                                    if (null == T) I = 0;\n                                    else {\n                                        var z = q.K[0], U = q.w;\n                                        for(T[0] = q.K[0][0], B = 1; B < 1 * M; ++B)T[B] = R(z[U + B], T[B - 1]);\n                                        for(; B < 4 * D; ++B)T[B] = 0;\n                                        q.K[0] = null, q.K[0] = T, I = 1;\n                                    }\n                                }\n                                _ = I;\n                                break;\n                            case 2:\n                                break;\n                            default:\n                                e(0);\n                        }\n                        c = _;\n                    }\n                }\n                if (f = f[0], p = p[0], c && y(g, 1) && !(c = 1 <= (b = y(g, 4)) && 11 >= b)) {\n                    s.a = 3;\n                    break t;\n                }\n                var H;\n                if (H = c) e: {\n                    var W, V, G, Y = s, J = f, X = p, K = b, Z = r, $ = Y.m, Q = Y.s, tt = [\n                        null\n                    ], et = 1, nt = 0, rt = $r[K];\n                    n: for(;;){\n                        if (Z && y($, 1)) {\n                            var it = y($, 3) + 2, at = E(J, it), ot = E(X, it), st = at * ot;\n                            if (!Ft(at, ot, 0, Y, tt)) break n;\n                            for(tt = tt[0], Q.xc = it, W = 0; W < st; ++W){\n                                var ut = tt[W] >> 8 & 65535;\n                                tt[W] = ut, ut >= et && (et = ut + 1);\n                            }\n                        }\n                        if ($.h) break n;\n                        for(V = 0; 5 > V; ++V){\n                            var ct = Jr[V];\n                            !V && 0 < K && (ct += 1 << K), nt < ct && (nt = ct);\n                        }\n                        var lt = o(et * rt, h), ht = et, ft = o(ht, d);\n                        if (null == ft) var dt = null;\n                        else e(65536 >= ht), dt = ft;\n                        var pt = a(nt);\n                        if (null == dt || null == pt || null == lt) {\n                            Y.a = 1;\n                            break n;\n                        }\n                        var gt = lt;\n                        for(W = G = 0; W < et; ++W){\n                            var mt = dt[W], vt = mt.G, bt = mt.H, wt = 0, Nt = 1, Lt = 0;\n                            for(V = 0; 5 > V; ++V){\n                                ct = Jr[V], vt[V] = gt, bt[V] = G, !V && 0 < K && (ct += 1 << K);\n                                r: {\n                                    var xt, At = ct, St = Y, kt = pt, It = gt, jt = G, Ct = 0, Ot = St.m, Bt = y(Ot, 1);\n                                    if (i(kt, 0, 0, At), Bt) {\n                                        var Mt = y(Ot, 1) + 1, qt = y(Ot, 1), Et = y(Ot, 0 == qt ? 1 : 8);\n                                        kt[Et] = 1, 2 == Mt && (kt[Et = y(Ot, 8)] = 1);\n                                        var Rt = 1;\n                                    } else {\n                                        var Dt = a(19), Tt = y(Ot, 4) + 4;\n                                        if (19 < Tt) {\n                                            St.a = 3;\n                                            var zt = 0;\n                                            break r;\n                                        }\n                                        for(xt = 0; xt < Tt; ++xt)Dt[Kr[xt]] = y(Ot, 3);\n                                        var Ut = void 0, Ht = void 0, Wt = St, Vt = Dt, Gt = At, Yt = kt, Jt = 0, Xt = Wt.m, Kt = 8, Zt = o(128, h);\n                                        i: for(; l(Zt, 0, 7, Vt, 19);){\n                                            if (y(Xt, 1)) {\n                                                var $t = 2 + 2 * y(Xt, 3);\n                                                if ((Ut = 2 + y(Xt, $t)) > Gt) break i;\n                                            } else Ut = Gt;\n                                            for(Ht = 0; Ht < Gt && Ut--;){\n                                                S(Xt);\n                                                var Qt = Zt[0 + (127 & L(Xt))];\n                                                A(Xt, Xt.u + Qt.g);\n                                                var te = Qt.value;\n                                                if (16 > te) Yt[Ht++] = te, 0 != te && (Kt = te);\n                                                else {\n                                                    var ee = 16 == te, ne = te - 16, re = Yr[ne], ie = y(Xt, Gr[ne]) + re;\n                                                    if (Ht + ie > Gt) break i;\n                                                    for(var ae = ee ? Kt : 0; 0 < ie--;)Yt[Ht++] = ae;\n                                                }\n                                            }\n                                            Jt = 1;\n                                            break i;\n                                        }\n                                        Jt || (Wt.a = 3), Rt = Jt;\n                                    }\n                                    (Rt = Rt && !Ot.h) && (Ct = l(It, jt, 8, kt, At)), Rt && 0 != Ct ? zt = Ct : (St.a = 3, zt = 0);\n                                }\n                                if (0 == zt) break n;\n                                if (Nt && 1 == Xr[V] && (Nt = 0 == gt[G].g), wt += gt[G].g, G += zt, 3 >= V) {\n                                    var oe, se = pt[0];\n                                    for(oe = 1; oe < ct; ++oe)pt[oe] > se && (se = pt[oe]);\n                                    Lt += se;\n                                }\n                            }\n                            if (mt.nd = Nt, mt.Qb = 0, Nt && (mt.qb = (vt[3][bt[3] + 0].value << 24 | vt[1][bt[1] + 0].value << 16 | vt[2][bt[2] + 0].value) >>> 0, 0 == wt && 256 > vt[0][bt[0] + 0].value && (mt.Qb = 1, mt.qb += vt[0][bt[0] + 0].value << 8)), mt.jc = !mt.Qb && 6 > Lt, mt.jc) {\n                                var ue, ce = mt;\n                                for(ue = 0; ue < Rn; ++ue){\n                                    var le = ue, he = ce.pd[le], fe = ce.G[0][ce.H[0] + le];\n                                    256 <= fe.value ? (he.g = fe.g + 256, he.value = fe.value) : (he.g = 0, he.value = 0, le >>= yt(fe, 8, he), le >>= yt(ce.G[1][ce.H[1] + le], 16, he), le >>= yt(ce.G[2][ce.H[2] + le], 0, he), yt(ce.G[3][ce.H[3] + le], 24, he));\n                                }\n                            }\n                        }\n                        Q.vc = tt, Q.Wb = et, Q.Ya = dt, Q.yc = lt, H = 1;\n                        break e;\n                    }\n                    H = 0;\n                }\n                if (!(c = H)) {\n                    s.a = 3;\n                    break t;\n                }\n                if (0 < b) {\n                    if (m.ua = 1 << b, !O(m.Wa, b)) {\n                        s.a = 1, c = 0;\n                        break t;\n                    }\n                } else m.ua = 0;\n                var de = s, pe = f, ge = p, me = de.s, ve = me.xc;\n                if (de.c = pe, de.i = ge, me.md = E(pe, ve), me.wc = 0 == ve ? -1 : (1 << ve) - 1, r) {\n                    s.xb = di;\n                    break t;\n                }\n                if (null == (v = a(f * p))) {\n                    s.a = 1, c = 0;\n                    break t;\n                }\n                c = (c = _t(s, v, 0, f, p, p, null)) && !g.h;\n                break t;\n            }\n            return c ? (null != u ? u[0] = v : (e(null == v), e(r)), s.$ = 0, r || Pt(m)) : Pt(m), c;\n        }\n        function It(t, n) {\n            var r = t.c * t.i, i = r + n + 16 * n;\n            return e(t.c <= n), t.V = a(i), null == t.V ? (t.Ta = null, t.Ua = 0, t.a = 1, 0) : (t.Ta = t.V, t.Ua = t.Ba + r + n, 1);\n        }\n        function jt(t, n) {\n            var r = t.C, i = n - r, a = t.V, o = t.Ba + t.c * r;\n            for(e(n <= t.l.o); 0 < i;){\n                var s = 16 < i ? 16 : i, u = t.l.ma, c = t.l.width, l = c * s, h = u.ca, f = u.tb + c * r, d = t.Ta, p = t.Ua;\n                Nt(t, s, a, o), Sr(d, p, h, f, l), At(u, r, r + s, h, f, c), i -= s, a += s * t.c, r += s;\n            }\n            e(r == n), t.C = t.Ma = n;\n        }\n        function Ct() {\n            this.ub = this.yd = this.td = this.Rb = 0;\n        }\n        function Ot() {\n            this.Kd = this.Ld = this.Ud = this.Td = this.i = this.c = 0;\n        }\n        function Bt() {\n            this.Fb = this.Bb = this.Cb = 0, this.Zb = a(4), this.Lb = a(4);\n        }\n        function Mt() {\n            this.Yb = function() {\n                var t = [];\n                return function t(e, n, r) {\n                    for(var i = r[n], a = 0; a < i && (e.push(r.length > n + 1 ? [] : 0), !(r.length < n + 1)); a++)t(e[a], n + 1, r);\n                }(t, 0, [\n                    3,\n                    11\n                ]), t;\n            }();\n        }\n        function qt() {\n            this.jb = a(3), this.Wc = s([\n                4,\n                8\n            ], Mt), this.Xc = s([\n                4,\n                17\n            ], Mt);\n        }\n        function Et() {\n            this.Pc = this.wb = this.Tb = this.zd = 0, this.vd = new a(4), this.od = new a(4);\n        }\n        function Rt() {\n            this.ld = this.La = this.dd = this.tc = 0;\n        }\n        function Dt() {\n            this.Na = this.la = 0;\n        }\n        function Tt() {\n            this.Sc = [\n                0,\n                0\n            ], this.Eb = [\n                0,\n                0\n            ], this.Qc = [\n                0,\n                0\n            ], this.ia = this.lc = 0;\n        }\n        function zt() {\n            this.ad = a(384), this.Za = 0, this.Ob = a(16), this.$b = this.Ad = this.ia = this.Gc = this.Hc = this.Dd = 0;\n        }\n        function Ut() {\n            this.uc = this.M = this.Nb = 0, this.wa = Array(new Rt), this.Y = 0, this.ya = Array(new zt), this.aa = 0, this.l = new Gt;\n        }\n        function Ht() {\n            this.y = a(16), this.f = a(8), this.ea = a(8);\n        }\n        function Wt() {\n            this.cb = this.a = 0, this.sc = \"\", this.m = new w, this.Od = new Ct, this.Kc = new Ot, this.ed = new Et, this.Qa = new Bt, this.Ic = this.$c = this.Aa = 0, this.D = new Ut, this.Xb = this.Va = this.Hb = this.zb = this.yb = this.Ub = this.za = 0, this.Jc = o(8, w), this.ia = 0, this.pb = o(4, Tt), this.Pa = new qt, this.Bd = this.kc = 0, this.Ac = [], this.Bc = 0, this.zc = [\n                0,\n                0,\n                0,\n                0\n            ], this.Gd = Array(new Ht), this.Hd = 0, this.rb = Array(new Dt), this.sb = 0, this.wa = Array(new Rt), this.Y = 0, this.oc = [], this.pc = 0, this.sa = [], this.ta = 0, this.qa = [], this.ra = 0, this.Ha = [], this.B = this.R = this.Ia = 0, this.Ec = [], this.M = this.ja = this.Vb = this.Fc = 0, this.ya = Array(new zt), this.L = this.aa = 0, this.gd = s([\n                4,\n                2\n            ], Rt), this.ga = null, this.Fa = [], this.Cc = this.qc = this.P = 0, this.Gb = [], this.Uc = 0, this.mb = [], this.nb = 0, this.rc = [], this.Ga = this.Vc = 0;\n        }\n        function Vt(t, e) {\n            return 0 > t ? 0 : t > e ? e : t;\n        }\n        function Gt() {\n            this.T = this.U = this.ka = this.height = this.width = 0, this.y = [], this.f = [], this.ea = [], this.Rc = this.fa = this.W = this.N = this.O = 0, this.ma = \"void\", this.put = \"VP8IoPutHook\", this.ac = \"VP8IoSetupHook\", this.bc = \"VP8IoTeardownHook\", this.ha = this.Kb = 0, this.data = [], this.hb = this.ib = this.da = this.o = this.j = this.va = this.v = this.Da = this.ob = this.w = 0, this.F = [], this.J = 0;\n        }\n        function Yt() {\n            var t = new Wt;\n            return null != t && (t.a = 0, t.sc = \"OK\", t.cb = 0, t.Xb = 0, ni || (ni = Zt)), t;\n        }\n        function Jt(t, e, n) {\n            return 0 == t.a && (t.a = e, t.sc = n, t.cb = 0), 0;\n        }\n        function Xt(t, e, n) {\n            return 3 <= n && 157 == t[e + 0] && 1 == t[e + 1] && 42 == t[e + 2];\n        }\n        function Kt(t, n) {\n            if (null == t) return 0;\n            if (t.a = 0, t.sc = \"OK\", null == n) return Jt(t, 2, \"null VP8Io passed to VP8GetHeaders()\");\n            var r = n.data, a = n.w, o = n.ha;\n            if (4 > o) return Jt(t, 7, \"Truncated header.\");\n            var s = r[a + 0] | r[a + 1] << 8 | r[a + 2] << 16, u = t.Od;\n            if (u.Rb = !(1 & s), u.td = s >> 1 & 7, u.yd = s >> 4 & 1, u.ub = s >> 5, 3 < u.td) return Jt(t, 3, \"Incorrect keyframe parameters.\");\n            if (!u.yd) return Jt(t, 4, \"Frame not displayable.\");\n            a += 3, o -= 3;\n            var c = t.Kc;\n            if (u.Rb) {\n                if (7 > o) return Jt(t, 7, \"cannot parse picture header\");\n                if (!Xt(r, a, o)) return Jt(t, 3, \"Bad code word\");\n                c.c = 16383 & (r[a + 4] << 8 | r[a + 3]), c.Td = r[a + 4] >> 6, c.i = 16383 & (r[a + 6] << 8 | r[a + 5]), c.Ud = r[a + 6] >> 6, a += 7, o -= 7, t.za = c.c + 15 >> 4, t.Ub = c.i + 15 >> 4, n.width = c.c, n.height = c.i, n.Da = 0, n.j = 0, n.v = 0, n.va = n.width, n.o = n.height, n.da = 0, n.ib = n.width, n.hb = n.height, n.U = n.width, n.T = n.height, i((s = t.Pa).jb, 0, 255, s.jb.length), e(null != (s = t.Qa)), s.Cb = 0, s.Bb = 0, s.Fb = 1, i(s.Zb, 0, 0, s.Zb.length), i(s.Lb, 0, 0, s.Lb);\n            }\n            if (u.ub > o) return Jt(t, 7, \"bad partition length\");\n            p(s = t.m, r, a, u.ub), a += u.ub, o -= u.ub, u.Rb && (c.Ld = P(s), c.Kd = P(s)), c = t.Qa;\n            var l, h = t.Pa;\n            if (e(null != s), e(null != c), c.Cb = P(s), c.Cb) {\n                if (c.Bb = P(s), P(s)) {\n                    for(c.Fb = P(s), l = 0; 4 > l; ++l)c.Zb[l] = P(s) ? m(s, 7) : 0;\n                    for(l = 0; 4 > l; ++l)c.Lb[l] = P(s) ? m(s, 6) : 0;\n                }\n                if (c.Bb) for(l = 0; 3 > l; ++l)h.jb[l] = P(s) ? g(s, 8) : 255;\n            } else c.Bb = 0;\n            if (s.Ka) return Jt(t, 3, \"cannot parse segment header\");\n            if ((c = t.ed).zd = P(s), c.Tb = g(s, 6), c.wb = g(s, 3), c.Pc = P(s), c.Pc && P(s)) {\n                for(h = 0; 4 > h; ++h)P(s) && (c.vd[h] = m(s, 6));\n                for(h = 0; 4 > h; ++h)P(s) && (c.od[h] = m(s, 6));\n            }\n            if (t.L = 0 == c.Tb ? 0 : c.zd ? 1 : 2, s.Ka) return Jt(t, 3, \"cannot parse filter header\");\n            var f = o;\n            if (o = l = a, a = l + f, c = f, t.Xb = (1 << g(t.m, 2)) - 1, f < 3 * (h = t.Xb)) r = 7;\n            else {\n                for(l += 3 * h, c -= 3 * h, f = 0; f < h; ++f){\n                    var d = r[o + 0] | r[o + 1] << 8 | r[o + 2] << 16;\n                    d > c && (d = c), p(t.Jc[+f], r, l, d), l += d, c -= d, o += 3;\n                }\n                p(t.Jc[+h], r, l, c), r = l < a ? 0 : 5;\n            }\n            if (0 != r) return Jt(t, r, \"cannot parse partitions\");\n            for(r = g(l = t.m, 7), o = P(l) ? m(l, 4) : 0, a = P(l) ? m(l, 4) : 0, c = P(l) ? m(l, 4) : 0, h = P(l) ? m(l, 4) : 0, l = P(l) ? m(l, 4) : 0, f = t.Qa, d = 0; 4 > d; ++d){\n                if (f.Cb) {\n                    var v = f.Zb[d];\n                    f.Fb || (v += r);\n                } else {\n                    if (0 < d) {\n                        t.pb[d] = t.pb[0];\n                        continue;\n                    }\n                    v = r;\n                }\n                var b = t.pb[d];\n                b.Sc[0] = ti[Vt(v + o, 127)], b.Sc[1] = ei[Vt(v + 0, 127)], b.Eb[0] = 2 * ti[Vt(v + a, 127)], b.Eb[1] = 101581 * ei[Vt(v + c, 127)] >> 16, 8 > b.Eb[1] && (b.Eb[1] = 8), b.Qc[0] = ti[Vt(v + h, 117)], b.Qc[1] = ei[Vt(v + l, 127)], b.lc = v + l;\n            }\n            if (!u.Rb) return Jt(t, 4, \"Not a key frame.\");\n            for(P(s), u = t.Pa, r = 0; 4 > r; ++r){\n                for(o = 0; 8 > o; ++o)for(a = 0; 3 > a; ++a)for(c = 0; 11 > c; ++c)h = k(s, ui[r][o][a][c]) ? g(s, 8) : oi[r][o][a][c], u.Wc[r][o].Yb[a][c] = h;\n                for(o = 0; 17 > o; ++o)u.Xc[r][o] = u.Wc[r][ci[o]];\n            }\n            return t.kc = P(s), t.kc && (t.Bd = g(s, 8)), t.cb = 1;\n        }\n        function Zt(t, e, n, r, i, a, o) {\n            var s = e[i].Yb[n];\n            for(n = 0; 16 > i; ++i){\n                if (!k(t, s[n + 0])) return i;\n                for(; !k(t, s[n + 1]);)if (s = e[++i].Yb[0], n = 0, 16 == i) return 16;\n                var u = e[i + 1].Yb;\n                if (k(t, s[n + 2])) {\n                    var c = t, l = 0;\n                    if (k(c, (f = s)[(h = n) + 3])) if (k(c, f[h + 6])) {\n                        for(s = 0, h = 2 * (l = k(c, f[h + 8])) + (f = k(c, f[h + 9 + l])), l = 0, f = ri[h]; f[s]; ++s)l += l + k(c, f[s]);\n                        l += 3 + (8 << h);\n                    } else k(c, f[h + 7]) ? (l = 7 + 2 * k(c, 165), l += k(c, 145)) : l = 5 + k(c, 159);\n                    else l = k(c, f[h + 4]) ? 3 + k(c, f[h + 5]) : 2;\n                    s = u[2];\n                } else l = 1, s = u[1];\n                u = o + ii[i], 0 > (c = t).b && _(c);\n                var h, f = c.b, d = (h = c.Ca >> 1) - (c.I >> f) >> 31;\n                --c.b, c.Ca += d, c.Ca |= 1, c.I -= (h + 1 & d) << f, a[u] = ((l ^ d) - d) * r[(0 < i) + 0];\n            }\n            return 16;\n        }\n        function $t(t) {\n            var e = t.rb[t.sb - 1];\n            e.la = 0, e.Na = 0, i(t.zc, 0, 0, t.zc.length), t.ja = 0;\n        }\n        function Qt(t, e, n, r, i) {\n            i = t[e + n + 32 * r] + (i >> 3), t[e + n + 32 * r] = -256 & i ? 0 > i ? 0 : 255 : i;\n        }\n        function te(t, e, n, r, i, a) {\n            Qt(t, e, 0, n, r + i), Qt(t, e, 1, n, r + a), Qt(t, e, 2, n, r - a), Qt(t, e, 3, n, r - i);\n        }\n        function ee(t) {\n            return (20091 * t >> 16) + t;\n        }\n        function ne(t, e, n, r) {\n            var i, o = 0, s = a(16);\n            for(i = 0; 4 > i; ++i){\n                var u = t[e + 0] + t[e + 8], c = t[e + 0] - t[e + 8], l = (35468 * t[e + 4] >> 16) - ee(t[e + 12]), h = ee(t[e + 4]) + (35468 * t[e + 12] >> 16);\n                s[o + 0] = u + h, s[o + 1] = c + l, s[o + 2] = c - l, s[o + 3] = u - h, o += 4, e++;\n            }\n            for(i = o = 0; 4 > i; ++i)u = (t = s[o + 0] + 4) + s[o + 8], c = t - s[o + 8], l = (35468 * s[o + 4] >> 16) - ee(s[o + 12]), Qt(n, r, 0, 0, u + (h = ee(s[o + 4]) + (35468 * s[o + 12] >> 16))), Qt(n, r, 1, 0, c + l), Qt(n, r, 2, 0, c - l), Qt(n, r, 3, 0, u - h), o++, r += 32;\n        }\n        function re(t, e, n, r) {\n            var i = t[e + 0] + 4, a = 35468 * t[e + 4] >> 16, o = ee(t[e + 4]), s = 35468 * t[e + 1] >> 16;\n            te(n, r, 0, i + o, t = ee(t[e + 1]), s), te(n, r, 1, i + a, t, s), te(n, r, 2, i - a, t, s), te(n, r, 3, i - o, t, s);\n        }\n        function ie(t, e, n, r, i) {\n            ne(t, e, n, r), i && ne(t, e + 16, n, r + 4);\n        }\n        function ae(t, e, n, r) {\n            ar(t, e + 0, n, r, 1), ar(t, e + 32, n, r + 128, 1);\n        }\n        function oe(t, e, n, r) {\n            var i;\n            for(t = t[e + 0] + 4, i = 0; 4 > i; ++i)for(e = 0; 4 > e; ++e)Qt(n, r, e, i, t);\n        }\n        function se(t, e, n, r) {\n            t[e + 0] && ur(t, e + 0, n, r), t[e + 16] && ur(t, e + 16, n, r + 4), t[e + 32] && ur(t, e + 32, n, r + 128), t[e + 48] && ur(t, e + 48, n, r + 128 + 4);\n        }\n        function ue(t, e, n, r) {\n            var i, o = a(16);\n            for(i = 0; 4 > i; ++i){\n                var s = t[e + 0 + i] + t[e + 12 + i], u = t[e + 4 + i] + t[e + 8 + i], c = t[e + 4 + i] - t[e + 8 + i], l = t[e + 0 + i] - t[e + 12 + i];\n                o[0 + i] = s + u, o[8 + i] = s - u, o[4 + i] = l + c, o[12 + i] = l - c;\n            }\n            for(i = 0; 4 > i; ++i)s = (t = o[0 + 4 * i] + 3) + o[3 + 4 * i], u = o[1 + 4 * i] + o[2 + 4 * i], c = o[1 + 4 * i] - o[2 + 4 * i], l = t - o[3 + 4 * i], n[r + 0] = s + u >> 3, n[r + 16] = l + c >> 3, n[r + 32] = s - u >> 3, n[r + 48] = l - c >> 3, r += 64;\n        }\n        function ce(t, e, n) {\n            var r, i = e - 32, a = Or, o = 255 - t[i - 1];\n            for(r = 0; r < n; ++r){\n                var s, u = a, c = o + t[e - 1];\n                for(s = 0; s < n; ++s)t[e + s] = u[c + t[i + s]];\n                e += 32;\n            }\n        }\n        function le(t, e) {\n            ce(t, e, 4);\n        }\n        function he(t, e) {\n            ce(t, e, 8);\n        }\n        function fe(t, e) {\n            ce(t, e, 16);\n        }\n        function de(t, e) {\n            var n;\n            for(n = 0; 16 > n; ++n)r(t, e + 32 * n, t, e - 32, 16);\n        }\n        function pe(t, e) {\n            var n;\n            for(n = 16; 0 < n; --n)i(t, e, t[e - 1], 16), e += 32;\n        }\n        function ge(t, e, n) {\n            var r;\n            for(r = 0; 16 > r; ++r)i(e, n + 32 * r, t, 16);\n        }\n        function me(t, e) {\n            var n, r = 16;\n            for(n = 0; 16 > n; ++n)r += t[e - 1 + 32 * n] + t[e + n - 32];\n            ge(r >> 5, t, e);\n        }\n        function ve(t, e) {\n            var n, r = 8;\n            for(n = 0; 16 > n; ++n)r += t[e - 1 + 32 * n];\n            ge(r >> 4, t, e);\n        }\n        function be(t, e) {\n            var n, r = 8;\n            for(n = 0; 16 > n; ++n)r += t[e + n - 32];\n            ge(r >> 4, t, e);\n        }\n        function ye(t, e) {\n            ge(128, t, e);\n        }\n        function we(t, e, n) {\n            return t + 2 * e + n + 2 >> 2;\n        }\n        function Ne(t, e) {\n            var n, i = e - 32;\n            for(i = new Uint8Array([\n                we(t[i - 1], t[i + 0], t[i + 1]),\n                we(t[i + 0], t[i + 1], t[i + 2]),\n                we(t[i + 1], t[i + 2], t[i + 3]),\n                we(t[i + 2], t[i + 3], t[i + 4])\n            ]), n = 0; 4 > n; ++n)r(t, e + 32 * n, i, 0, i.length);\n        }\n        function Le(t, e) {\n            var n = t[e - 1], r = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 + 96];\n            F(t, e + 0, 16843009 * we(t[e - 1 - 32], n, r)), F(t, e + 32, 16843009 * we(n, r, i)), F(t, e + 64, 16843009 * we(r, i, a)), F(t, e + 96, 16843009 * we(i, a, a));\n        }\n        function xe(t, e) {\n            var n, r = 4;\n            for(n = 0; 4 > n; ++n)r += t[e + n - 32] + t[e - 1 + 32 * n];\n            for(r >>= 3, n = 0; 4 > n; ++n)i(t, e + 32 * n, r, 4);\n        }\n        function Ae(t, e) {\n            var n = t[e - 1 + 0], r = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 - 32], o = t[e + 0 - 32], s = t[e + 1 - 32], u = t[e + 2 - 32], c = t[e + 3 - 32];\n            t[e + 0 + 96] = we(r, i, t[e - 1 + 96]), t[e + 1 + 96] = t[e + 0 + 64] = we(n, r, i), t[e + 2 + 96] = t[e + 1 + 64] = t[e + 0 + 32] = we(a, n, r), t[e + 3 + 96] = t[e + 2 + 64] = t[e + 1 + 32] = t[e + 0 + 0] = we(o, a, n), t[e + 3 + 64] = t[e + 2 + 32] = t[e + 1 + 0] = we(s, o, a), t[e + 3 + 32] = t[e + 2 + 0] = we(u, s, o), t[e + 3 + 0] = we(c, u, s);\n        }\n        function Se(t, e) {\n            var n = t[e + 1 - 32], r = t[e + 2 - 32], i = t[e + 3 - 32], a = t[e + 4 - 32], o = t[e + 5 - 32], s = t[e + 6 - 32], u = t[e + 7 - 32];\n            t[e + 0 + 0] = we(t[e + 0 - 32], n, r), t[e + 1 + 0] = t[e + 0 + 32] = we(n, r, i), t[e + 2 + 0] = t[e + 1 + 32] = t[e + 0 + 64] = we(r, i, a), t[e + 3 + 0] = t[e + 2 + 32] = t[e + 1 + 64] = t[e + 0 + 96] = we(i, a, o), t[e + 3 + 32] = t[e + 2 + 64] = t[e + 1 + 96] = we(a, o, s), t[e + 3 + 64] = t[e + 2 + 96] = we(o, s, u), t[e + 3 + 96] = we(s, u, u);\n        }\n        function _e(t, e) {\n            var n = t[e - 1 + 0], r = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 - 32], o = t[e + 0 - 32], s = t[e + 1 - 32], u = t[e + 2 - 32], c = t[e + 3 - 32];\n            t[e + 0 + 0] = t[e + 1 + 64] = a + o + 1 >> 1, t[e + 1 + 0] = t[e + 2 + 64] = o + s + 1 >> 1, t[e + 2 + 0] = t[e + 3 + 64] = s + u + 1 >> 1, t[e + 3 + 0] = u + c + 1 >> 1, t[e + 0 + 96] = we(i, r, n), t[e + 0 + 64] = we(r, n, a), t[e + 0 + 32] = t[e + 1 + 96] = we(n, a, o), t[e + 1 + 32] = t[e + 2 + 96] = we(a, o, s), t[e + 2 + 32] = t[e + 3 + 96] = we(o, s, u), t[e + 3 + 32] = we(s, u, c);\n        }\n        function Pe(t, e) {\n            var n = t[e + 0 - 32], r = t[e + 1 - 32], i = t[e + 2 - 32], a = t[e + 3 - 32], o = t[e + 4 - 32], s = t[e + 5 - 32], u = t[e + 6 - 32], c = t[e + 7 - 32];\n            t[e + 0 + 0] = n + r + 1 >> 1, t[e + 1 + 0] = t[e + 0 + 64] = r + i + 1 >> 1, t[e + 2 + 0] = t[e + 1 + 64] = i + a + 1 >> 1, t[e + 3 + 0] = t[e + 2 + 64] = a + o + 1 >> 1, t[e + 0 + 32] = we(n, r, i), t[e + 1 + 32] = t[e + 0 + 96] = we(r, i, a), t[e + 2 + 32] = t[e + 1 + 96] = we(i, a, o), t[e + 3 + 32] = t[e + 2 + 96] = we(a, o, s), t[e + 3 + 64] = we(o, s, u), t[e + 3 + 96] = we(s, u, c);\n        }\n        function ke(t, e) {\n            var n = t[e - 1 + 0], r = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 + 96];\n            t[e + 0 + 0] = n + r + 1 >> 1, t[e + 2 + 0] = t[e + 0 + 32] = r + i + 1 >> 1, t[e + 2 + 32] = t[e + 0 + 64] = i + a + 1 >> 1, t[e + 1 + 0] = we(n, r, i), t[e + 3 + 0] = t[e + 1 + 32] = we(r, i, a), t[e + 3 + 32] = t[e + 1 + 64] = we(i, a, a), t[e + 3 + 64] = t[e + 2 + 64] = t[e + 0 + 96] = t[e + 1 + 96] = t[e + 2 + 96] = t[e + 3 + 96] = a;\n        }\n        function Fe(t, e) {\n            var n = t[e - 1 + 0], r = t[e - 1 + 32], i = t[e - 1 + 64], a = t[e - 1 + 96], o = t[e - 1 - 32], s = t[e + 0 - 32], u = t[e + 1 - 32], c = t[e + 2 - 32];\n            t[e + 0 + 0] = t[e + 2 + 32] = n + o + 1 >> 1, t[e + 0 + 32] = t[e + 2 + 64] = r + n + 1 >> 1, t[e + 0 + 64] = t[e + 2 + 96] = i + r + 1 >> 1, t[e + 0 + 96] = a + i + 1 >> 1, t[e + 3 + 0] = we(s, u, c), t[e + 2 + 0] = we(o, s, u), t[e + 1 + 0] = t[e + 3 + 32] = we(n, o, s), t[e + 1 + 32] = t[e + 3 + 64] = we(r, n, o), t[e + 1 + 64] = t[e + 3 + 96] = we(i, r, n), t[e + 1 + 96] = we(a, i, r);\n        }\n        function Ie(t, e) {\n            var n;\n            for(n = 0; 8 > n; ++n)r(t, e + 32 * n, t, e - 32, 8);\n        }\n        function je(t, e) {\n            var n;\n            for(n = 0; 8 > n; ++n)i(t, e, t[e - 1], 8), e += 32;\n        }\n        function Ce(t, e, n) {\n            var r;\n            for(r = 0; 8 > r; ++r)i(e, n + 32 * r, t, 8);\n        }\n        function Oe(t, e) {\n            var n, r = 8;\n            for(n = 0; 8 > n; ++n)r += t[e + n - 32] + t[e - 1 + 32 * n];\n            Ce(r >> 4, t, e);\n        }\n        function Be(t, e) {\n            var n, r = 4;\n            for(n = 0; 8 > n; ++n)r += t[e + n - 32];\n            Ce(r >> 3, t, e);\n        }\n        function Me(t, e) {\n            var n, r = 4;\n            for(n = 0; 8 > n; ++n)r += t[e - 1 + 32 * n];\n            Ce(r >> 3, t, e);\n        }\n        function qe(t, e) {\n            Ce(128, t, e);\n        }\n        function Ee(t, e, n) {\n            var r = t[e - n], i = t[e + 0], a = 3 * (i - r) + jr[1020 + t[e - 2 * n] - t[e + n]], o = Cr[112 + (a + 4 >> 3)];\n            t[e - n] = Or[255 + r + Cr[112 + (a + 3 >> 3)]], t[e + 0] = Or[255 + i - o];\n        }\n        function Re(t, e, n, r) {\n            var i = t[e + 0], a = t[e + n];\n            return Br[255 + t[e - 2 * n] - t[e - n]] > r || Br[255 + a - i] > r;\n        }\n        function De(t, e, n, r) {\n            return 4 * Br[255 + t[e - n] - t[e + 0]] + Br[255 + t[e - 2 * n] - t[e + n]] <= r;\n        }\n        function Te(t, e, n, r, i) {\n            var a = t[e - 3 * n], o = t[e - 2 * n], s = t[e - n], u = t[e + 0], c = t[e + n], l = t[e + 2 * n], h = t[e + 3 * n];\n            return 4 * Br[255 + s - u] + Br[255 + o - c] > r ? 0 : Br[255 + t[e - 4 * n] - a] <= i && Br[255 + a - o] <= i && Br[255 + o - s] <= i && Br[255 + h - l] <= i && Br[255 + l - c] <= i && Br[255 + c - u] <= i;\n        }\n        function ze(t, e, n, r) {\n            var i = 2 * r + 1;\n            for(r = 0; 16 > r; ++r)De(t, e + r, n, i) && Ee(t, e + r, n);\n        }\n        function Ue(t, e, n, r) {\n            var i = 2 * r + 1;\n            for(r = 0; 16 > r; ++r)De(t, e + r * n, 1, i) && Ee(t, e + r * n, 1);\n        }\n        function He(t, e, n, r) {\n            var i;\n            for(i = 3; 0 < i; --i)ze(t, e += 4 * n, n, r);\n        }\n        function We(t, e, n, r) {\n            var i;\n            for(i = 3; 0 < i; --i)Ue(t, e += 4, n, r);\n        }\n        function Ve(t, e, n, r, i, a, o, s) {\n            for(a = 2 * a + 1; 0 < i--;){\n                if (Te(t, e, n, a, o)) if (Re(t, e, n, s)) Ee(t, e, n);\n                else {\n                    var u = t, c = e, l = n, h = u[c - 2 * l], f = u[c - l], d = u[c + 0], p = u[c + l], g = u[c + 2 * l], m = 27 * (b = jr[1020 + 3 * (d - f) + jr[1020 + h - p]]) + 63 >> 7, v = 18 * b + 63 >> 7, b = 9 * b + 63 >> 7;\n                    u[c - 3 * l] = Or[255 + u[c - 3 * l] + b], u[c - 2 * l] = Or[255 + h + v], u[c - l] = Or[255 + f + m], u[c + 0] = Or[255 + d - m], u[c + l] = Or[255 + p - v], u[c + 2 * l] = Or[255 + g - b];\n                }\n                e += r;\n            }\n        }\n        function Ge(t, e, n, r, i, a, o, s) {\n            for(a = 2 * a + 1; 0 < i--;){\n                if (Te(t, e, n, a, o)) if (Re(t, e, n, s)) Ee(t, e, n);\n                else {\n                    var u = t, c = e, l = n, h = u[c - l], f = u[c + 0], d = u[c + l], p = Cr[112 + (4 + (g = 3 * (f - h)) >> 3)], g = Cr[112 + (g + 3 >> 3)], m = p + 1 >> 1;\n                    u[c - 2 * l] = Or[255 + u[c - 2 * l] + m], u[c - l] = Or[255 + h + g], u[c + 0] = Or[255 + f - p], u[c + l] = Or[255 + d - m];\n                }\n                e += r;\n            }\n        }\n        function Ye(t, e, n, r, i, a) {\n            Ve(t, e, n, 1, 16, r, i, a);\n        }\n        function Je(t, e, n, r, i, a) {\n            Ve(t, e, 1, n, 16, r, i, a);\n        }\n        function Xe(t, e, n, r, i, a) {\n            var o;\n            for(o = 3; 0 < o; --o)Ge(t, e += 4 * n, n, 1, 16, r, i, a);\n        }\n        function Ke(t, e, n, r, i, a) {\n            var o;\n            for(o = 3; 0 < o; --o)Ge(t, e += 4, 1, n, 16, r, i, a);\n        }\n        function Ze(t, e, n, r, i, a, o, s) {\n            Ve(t, e, i, 1, 8, a, o, s), Ve(n, r, i, 1, 8, a, o, s);\n        }\n        function $e(t, e, n, r, i, a, o, s) {\n            Ve(t, e, 1, i, 8, a, o, s), Ve(n, r, 1, i, 8, a, o, s);\n        }\n        function Qe(t, e, n, r, i, a, o, s) {\n            Ge(t, e + 4 * i, i, 1, 8, a, o, s), Ge(n, r + 4 * i, i, 1, 8, a, o, s);\n        }\n        function tn(t, e, n, r, i, a, o, s) {\n            Ge(t, e + 4, 1, i, 8, a, o, s), Ge(n, r + 4, 1, i, 8, a, o, s);\n        }\n        function en() {\n            this.ba = new ot, this.ec = [], this.cc = [], this.Mc = [], this.Dc = this.Nc = this.dc = this.fc = 0, this.Oa = new ut, this.memory = 0, this.Ib = \"OutputFunc\", this.Jb = \"OutputAlphaFunc\", this.Nd = \"OutputRowFunc\";\n        }\n        function nn() {\n            this.data = [], this.offset = this.kd = this.ha = this.w = 0, this.na = [], this.xa = this.gb = this.Ja = this.Sa = this.P = 0;\n        }\n        function rn() {\n            this.nc = this.Ea = this.b = this.hc = 0, this.K = [], this.w = 0;\n        }\n        function an() {\n            this.ua = 0, this.Wa = new M, this.vb = new M, this.md = this.xc = this.wc = 0, this.vc = [], this.Wb = 0, this.Ya = new d, this.yc = new h;\n        }\n        function on() {\n            this.xb = this.a = 0, this.l = new Gt, this.ca = new ot, this.V = [], this.Ba = 0, this.Ta = [], this.Ua = 0, this.m = new N, this.Pb = 0, this.wd = new N, this.Ma = this.$ = this.C = this.i = this.c = this.xd = 0, this.s = new an, this.ab = 0, this.gc = o(4, rn), this.Oc = 0;\n        }\n        function sn() {\n            this.Lc = this.Z = this.$a = this.i = this.c = 0, this.l = new Gt, this.ic = 0, this.ca = [], this.tb = 0, this.qd = null, this.rd = 0;\n        }\n        function un(t, e, n, r, i, a, o) {\n            for(t = null == t ? 0 : t[e + 0], e = 0; e < o; ++e)i[a + e] = t + n[r + e] & 255, t = i[a + e];\n        }\n        function cn(t, e, n, r, i, a, o) {\n            var s;\n            if (null == t) un(null, null, n, r, i, a, o);\n            else for(s = 0; s < o; ++s)i[a + s] = t[e + s] + n[r + s] & 255;\n        }\n        function ln(t, e, n, r, i, a, o) {\n            if (null == t) un(null, null, n, r, i, a, o);\n            else {\n                var s, u = t[e + 0], c = u, l = u;\n                for(s = 0; s < o; ++s)c = l + (u = t[e + s]) - c, l = n[r + s] + (-256 & c ? 0 > c ? 0 : 255 : c) & 255, c = u, i[a + s] = l;\n            }\n        }\n        function hn(t, n, i, o) {\n            var s = n.width, u = n.o;\n            if (e(null != t && null != n), 0 > i || 0 >= o || i + o > u) return null;\n            if (!t.Cc) {\n                if (null == t.ga) {\n                    var c;\n                    if (t.ga = new sn, (c = null == t.ga) || (c = n.width * n.o, e(0 == t.Gb.length), t.Gb = a(c), t.Uc = 0, null == t.Gb ? c = 0 : (t.mb = t.Gb, t.nb = t.Uc, t.rc = null, c = 1), c = !c), !c) {\n                        c = t.ga;\n                        var l = t.Fa, h = t.P, f = t.qc, d = t.mb, p = t.nb, g = h + 1, m = f - 1, b = c.l;\n                        if (e(null != l && null != d && null != n), gi[0] = null, gi[1] = un, gi[2] = cn, gi[3] = ln, c.ca = d, c.tb = p, c.c = n.width, c.i = n.height, e(0 < c.c && 0 < c.i), 1 >= f) n = 0;\n                        else if (c.$a = 3 & l[h + 0], c.Z = l[h + 0] >> 2 & 3, c.Lc = l[h + 0] >> 4 & 3, h = l[h + 0] >> 6 & 3, 0 > c.$a || 1 < c.$a || 4 <= c.Z || 1 < c.Lc || h) n = 0;\n                        else if (b.put = dt, b.ac = ft, b.bc = pt, b.ma = c, b.width = n.width, b.height = n.height, b.Da = n.Da, b.v = n.v, b.va = n.va, b.j = n.j, b.o = n.o, c.$a) t: {\n                            e(1 == c.$a), n = kt();\n                            e: for(;;){\n                                if (null == n) {\n                                    n = 0;\n                                    break t;\n                                }\n                                if (e(null != c), c.mc = n, n.c = c.c, n.i = c.i, n.l = c.l, n.l.ma = c, n.l.width = c.c, n.l.height = c.i, n.a = 0, v(n.m, l, g, m), !Ft(c.c, c.i, 1, n, null)) break e;\n                                if (1 == n.ab && 3 == n.gc[0].hc && xt(n.s) ? (c.ic = 1, l = n.c * n.i, n.Ta = null, n.Ua = 0, n.V = a(l), n.Ba = 0, null == n.V ? (n.a = 1, n = 0) : n = 1) : (c.ic = 0, n = It(n, c.c)), !n) break e;\n                                n = 1;\n                                break t;\n                            }\n                            c.mc = null, n = 0;\n                        }\n                        else n = m >= c.c * c.i;\n                        c = !n;\n                    }\n                    if (c) return null;\n                    1 != t.ga.Lc ? t.Ga = 0 : o = u - i;\n                }\n                e(null != t.ga), e(i + o <= u);\n                t: {\n                    if (n = (l = t.ga).c, u = l.l.o, 0 == l.$a) {\n                        if (g = t.rc, m = t.Vc, b = t.Fa, h = t.P + 1 + i * n, f = t.mb, d = t.nb + i * n, e(h <= t.P + t.qc), 0 != l.Z) for(e(null != gi[l.Z]), c = 0; c < o; ++c)gi[l.Z](g, m, b, h, f, d, n), g = f, m = d, d += n, h += n;\n                        else for(c = 0; c < o; ++c)r(f, d, b, h, n), g = f, m = d, d += n, h += n;\n                        t.rc = g, t.Vc = m;\n                    } else {\n                        if (e(null != l.mc), n = i + o, e(null != (c = l.mc)), e(n <= c.i), c.C >= n) n = 1;\n                        else if (l.ic || mn(), l.ic) {\n                            l = c.V, g = c.Ba, m = c.c;\n                            var y = c.i, w = (b = 1, h = c.$ / m, f = c.$ % m, d = c.m, p = c.s, c.$), N = m * y, L = m * n, A = p.wc, _ = w < L ? wt(p, f, h) : null;\n                            e(w <= N), e(n <= y), e(xt(p));\n                            e: for(;;){\n                                for(; !d.h && w < L;){\n                                    if (f & A || (_ = wt(p, f, h)), e(null != _), S(d), 256 > (y = bt(_.G[0], _.H[0], d))) l[g + w] = y, ++w, ++f >= m && (f = 0, ++h <= n && !(h % 16) && St(c, h));\n                                    else {\n                                        if (!(280 > y)) {\n                                            b = 0;\n                                            break e;\n                                        }\n                                        y = mt(y - 256, d);\n                                        var P, k = bt(_.G[4], _.H[4], d);\n                                        if (S(d), !(w >= (k = vt(m, k = mt(k, d))) && N - w >= y)) {\n                                            b = 0;\n                                            break e;\n                                        }\n                                        for(P = 0; P < y; ++P)l[g + w + P] = l[g + w + P - k];\n                                        for(w += y, f += y; f >= m;)f -= m, ++h <= n && !(h % 16) && St(c, h);\n                                        w < L && f & A && (_ = wt(p, f, h));\n                                    }\n                                    e(d.h == x(d));\n                                }\n                                St(c, h > n ? n : h);\n                                break e;\n                            }\n                            !b || d.h && w < N ? (b = 0, c.a = d.h ? 5 : 3) : c.$ = w, n = b;\n                        } else n = _t(c, c.V, c.Ba, c.c, c.i, n, jt);\n                        if (!n) {\n                            o = 0;\n                            break t;\n                        }\n                    }\n                    i + o >= u && (t.Cc = 1), o = 1;\n                }\n                if (!o) return null;\n                if (t.Cc && (null != (o = t.ga) && (o.mc = null), t.ga = null, 0 < t.Ga)) return alert(\"todo:WebPDequantizeLevels\"), null;\n            }\n            return t.nb + i * s;\n        }\n        function fn(t, e, n, r, i, a) {\n            for(; 0 < i--;){\n                var o, s = t, u = e + (n ? 1 : 0), c = t, l = e + (n ? 0 : 3);\n                for(o = 0; o < r; ++o){\n                    var h = c[l + 4 * o];\n                    255 != h && (h *= 32897, s[u + 4 * o + 0] = s[u + 4 * o + 0] * h >> 23, s[u + 4 * o + 1] = s[u + 4 * o + 1] * h >> 23, s[u + 4 * o + 2] = s[u + 4 * o + 2] * h >> 23);\n                }\n                e += a;\n            }\n        }\n        function dn(t, e, n, r, i) {\n            for(; 0 < r--;){\n                var a;\n                for(a = 0; a < n; ++a){\n                    var o = t[e + 2 * a + 0], s = 15 & (c = t[e + 2 * a + 1]), u = 4369 * s, c = (240 & c | c >> 4) * u >> 16;\n                    t[e + 2 * a + 0] = (240 & o | o >> 4) * u >> 16 & 240 | (15 & o | o << 4) * u >> 16 >> 4 & 15, t[e + 2 * a + 1] = 240 & c | s;\n                }\n                e += i;\n            }\n        }\n        function pn(t, e, n, r, i, a, o, s) {\n            var u, c, l = 255;\n            for(c = 0; c < i; ++c){\n                for(u = 0; u < r; ++u){\n                    var h = t[e + u];\n                    a[o + 4 * u] = h, l &= h;\n                }\n                e += n, o += s;\n            }\n            return 255 != l;\n        }\n        function gn(t, e, n, r, i) {\n            var a;\n            for(a = 0; a < i; ++a)n[r + a] = t[e + a] >> 8;\n        }\n        function mn() {\n            Lr = fn, xr = dn, Ar = pn, Sr = gn;\n        }\n        function vn(n, r, i) {\n            t[n] = function(t, n, a, o, s, u, c, l, h, f, d, p, g, m, v, b, y) {\n                var w, N = y - 1 >> 1, L = s[u + 0] | c[l + 0] << 16, x = h[f + 0] | d[p + 0] << 16;\n                e(null != t);\n                var A = 3 * L + x + 131074 >> 2;\n                for(r(t[n + 0], 255 & A, A >> 16, g, m), null != a && (A = 3 * x + L + 131074 >> 2, r(a[o + 0], 255 & A, A >> 16, v, b)), w = 1; w <= N; ++w){\n                    var S = s[u + w] | c[l + w] << 16, _ = h[f + w] | d[p + w] << 16, P = L + S + x + _ + 524296, k = P + 2 * (S + x) >> 3;\n                    A = k + L >> 1, L = (P = P + 2 * (L + _) >> 3) + S >> 1, r(t[n + 2 * w - 1], 255 & A, A >> 16, g, m + (2 * w - 1) * i), r(t[n + 2 * w - 0], 255 & L, L >> 16, g, m + (2 * w - 0) * i), null != a && (A = P + x >> 1, L = k + _ >> 1, r(a[o + 2 * w - 1], 255 & A, A >> 16, v, b + (2 * w - 1) * i), r(a[o + 2 * w + 0], 255 & L, L >> 16, v, b + (2 * w + 0) * i)), L = S, x = _;\n                }\n                1 & y || (A = 3 * L + x + 131074 >> 2, r(t[n + y - 1], 255 & A, A >> 16, g, m + (y - 1) * i), null != a && (A = 3 * x + L + 131074 >> 2, r(a[o + y - 1], 255 & A, A >> 16, v, b + (y - 1) * i)));\n            };\n        }\n        function bn() {\n            mi[Mr] = vi, mi[qr] = yi, mi[Er] = bi, mi[Rr] = wi, mi[Dr] = Ni, mi[Tr] = Li, mi[zr] = xi, mi[Ur] = yi, mi[Hr] = wi, mi[Wr] = Ni, mi[Vr] = Li;\n        }\n        function yn(t) {\n            return t & ~Fi ? 0 > t ? 0 : 255 : t >> ki;\n        }\n        function wn(t, e) {\n            return yn((19077 * t >> 8) + (26149 * e >> 8) - 14234);\n        }\n        function Nn(t, e, n) {\n            return yn((19077 * t >> 8) - (6419 * e >> 8) - (13320 * n >> 8) + 8708);\n        }\n        function Ln(t, e) {\n            return yn((19077 * t >> 8) + (33050 * e >> 8) - 17685);\n        }\n        function xn(t, e, n, r, i) {\n            r[i + 0] = wn(t, n), r[i + 1] = Nn(t, e, n), r[i + 2] = Ln(t, e);\n        }\n        function An(t, e, n, r, i) {\n            r[i + 0] = Ln(t, e), r[i + 1] = Nn(t, e, n), r[i + 2] = wn(t, n);\n        }\n        function Sn(t, e, n, r, i) {\n            var a = Nn(t, e, n);\n            e = a << 3 & 224 | Ln(t, e) >> 3, r[i + 0] = 248 & wn(t, n) | a >> 5, r[i + 1] = e;\n        }\n        function _n(t, e, n, r, i) {\n            var a = 240 & Ln(t, e) | 15;\n            r[i + 0] = 240 & wn(t, n) | Nn(t, e, n) >> 4, r[i + 1] = a;\n        }\n        function Pn(t, e, n, r, i) {\n            r[i + 0] = 255, xn(t, e, n, r, i + 1);\n        }\n        function kn(t, e, n, r, i) {\n            An(t, e, n, r, i), r[i + 3] = 255;\n        }\n        function Fn(t, e, n, r, i) {\n            xn(t, e, n, r, i), r[i + 3] = 255;\n        }\n        function Vt(t, e) {\n            return 0 > t ? 0 : t > e ? e : t;\n        }\n        function In(e, n, r) {\n            t[e] = function(t, e, i, a, o, s, u, c, l) {\n                for(var h = c + (-2 & l) * r; c != h;)n(t[e + 0], i[a + 0], o[s + 0], u, c), n(t[e + 1], i[a + 0], o[s + 0], u, c + r), e += 2, ++a, ++s, c += 2 * r;\n                1 & l && n(t[e + 0], i[a + 0], o[s + 0], u, c);\n            };\n        }\n        function jn(t, e, n) {\n            return 0 == n ? 0 == t ? 0 == e ? 6 : 5 : 0 == e ? 4 : 0 : n;\n        }\n        function Cn(t, e, n, r, i) {\n            switch(t >>> 30){\n                case 3:\n                    ar(e, n, r, i, 0);\n                    break;\n                case 2:\n                    or(e, n, r, i);\n                    break;\n                case 1:\n                    ur(e, n, r, i);\n            }\n        }\n        function On(t, e) {\n            var n, a, o = e.M, s = e.Nb, u = t.oc, c = t.pc + 40, l = t.oc, h = t.pc + 584, f = t.oc, d = t.pc + 600;\n            for(n = 0; 16 > n; ++n)u[c + 32 * n - 1] = 129;\n            for(n = 0; 8 > n; ++n)l[h + 32 * n - 1] = 129, f[d + 32 * n - 1] = 129;\n            for(0 < o ? u[c - 1 - 32] = l[h - 1 - 32] = f[d - 1 - 32] = 129 : (i(u, c - 32 - 1, 127, 21), i(l, h - 32 - 1, 127, 9), i(f, d - 32 - 1, 127, 9)), a = 0; a < t.za; ++a){\n                var p = e.ya[e.aa + a];\n                if (0 < a) {\n                    for(n = -1; 16 > n; ++n)r(u, c + 32 * n - 4, u, c + 32 * n + 12, 4);\n                    for(n = -1; 8 > n; ++n)r(l, h + 32 * n - 4, l, h + 32 * n + 4, 4), r(f, d + 32 * n - 4, f, d + 32 * n + 4, 4);\n                }\n                var g = t.Gd, m = t.Hd + a, v = p.ad, b = p.Hc;\n                if (0 < o && (r(u, c - 32, g[m].y, 0, 16), r(l, h - 32, g[m].f, 0, 8), r(f, d - 32, g[m].ea, 0, 8)), p.Za) {\n                    var y = u, w = c - 32 + 16;\n                    for(0 < o && (a >= t.za - 1 ? i(y, w, g[m].y[15], 4) : r(y, w, g[m + 1].y, 0, 4)), n = 0; 4 > n; n++)y[w + 128 + n] = y[w + 256 + n] = y[w + 384 + n] = y[w + 0 + n];\n                    for(n = 0; 16 > n; ++n, b <<= 2)y = u, w = c + Ei[n], hi[p.Ob[n]](y, w), Cn(b, v, 16 * +n, y, w);\n                } else if (y = jn(a, o, p.Ob[0]), li[y](u, c), 0 != b) for(n = 0; 16 > n; ++n, b <<= 2)Cn(b, v, 16 * +n, u, c + Ei[n]);\n                for(n = p.Gc, y = jn(a, o, p.Dd), fi[y](l, h), fi[y](f, d), b = v, y = l, w = h, 255 & (p = 0 | n) && (170 & p ? sr(b, 256, y, w) : cr(b, 256, y, w)), p = f, b = d, 255 & (n >>= 8) && (170 & n ? sr(v, 320, p, b) : cr(v, 320, p, b)), o < t.Ub - 1 && (r(g[m].y, 0, u, c + 480, 16), r(g[m].f, 0, l, h + 224, 8), r(g[m].ea, 0, f, d + 224, 8)), n = 8 * s * t.B, g = t.sa, m = t.ta + 16 * a + 16 * s * t.R, v = t.qa, p = t.ra + 8 * a + n, b = t.Ha, y = t.Ia + 8 * a + n, n = 0; 16 > n; ++n)r(g, m + n * t.R, u, c + 32 * n, 16);\n                for(n = 0; 8 > n; ++n)r(v, p + n * t.B, l, h + 32 * n, 8), r(b, y + n * t.B, f, d + 32 * n, 8);\n            }\n        }\n        function Bn(t, r, i, a, o, s, u, c, l) {\n            var h = [\n                0\n            ], f = [\n                0\n            ], d = 0, p = null != l ? l.kd : 0, g = null != l ? l : new nn;\n            if (null == t || 12 > i) return 7;\n            g.data = t, g.w = r, g.ha = i, r = [\n                r\n            ], i = [\n                i\n            ], g.gb = [\n                g.gb\n            ];\n            t: {\n                var m = r, b = i, y = g.gb;\n                if (e(null != t), e(null != b), e(null != y), y[0] = 0, 12 <= b[0] && !n(t, m[0], \"RIFF\")) {\n                    if (n(t, m[0] + 8, \"WEBP\")) {\n                        y = 3;\n                        break t;\n                    }\n                    var w = C(t, m[0] + 4);\n                    if (12 > w || 4294967286 < w) {\n                        y = 3;\n                        break t;\n                    }\n                    if (p && w > b[0] - 8) {\n                        y = 7;\n                        break t;\n                    }\n                    y[0] = w, m[0] += 12, b[0] -= 12;\n                }\n                y = 0;\n            }\n            if (0 != y) return y;\n            for(w = 0 < g.gb[0], i = i[0];;){\n                t: {\n                    var L = t;\n                    b = r, y = i;\n                    var x = h, A = f, S = m = [\n                        0\n                    ];\n                    if ((k = d = [\n                        d\n                    ])[0] = 0, 8 > y[0]) y = 7;\n                    else {\n                        if (!n(L, b[0], \"VP8X\")) {\n                            if (10 != C(L, b[0] + 4)) {\n                                y = 3;\n                                break t;\n                            }\n                            if (18 > y[0]) {\n                                y = 7;\n                                break t;\n                            }\n                            var _ = C(L, b[0] + 8), P = 1 + j(L, b[0] + 12);\n                            if (2147483648 <= P * (L = 1 + j(L, b[0] + 15))) {\n                                y = 3;\n                                break t;\n                            }\n                            null != S && (S[0] = _), null != x && (x[0] = P), null != A && (A[0] = L), b[0] += 18, y[0] -= 18, k[0] = 1;\n                        }\n                        y = 0;\n                    }\n                }\n                if (d = d[0], m = m[0], 0 != y) return y;\n                if (b = !!(2 & m), !w && d) return 3;\n                if (null != s && (s[0] = !!(16 & m)), null != u && (u[0] = b), null != c && (c[0] = 0), u = h[0], m = f[0], d && b && null == l) {\n                    y = 0;\n                    break;\n                }\n                if (4 > i) {\n                    y = 7;\n                    break;\n                }\n                if (w && d || !w && !d && !n(t, r[0], \"ALPH\")) {\n                    i = [\n                        i\n                    ], g.na = [\n                        g.na\n                    ], g.P = [\n                        g.P\n                    ], g.Sa = [\n                        g.Sa\n                    ];\n                    t: {\n                        _ = t, y = r, w = i;\n                        var k = g.gb;\n                        x = g.na, A = g.P, S = g.Sa, P = 22, e(null != _), e(null != w), L = y[0];\n                        var F = w[0];\n                        for(e(null != x), e(null != S), x[0] = null, A[0] = null, S[0] = 0;;){\n                            if (y[0] = L, w[0] = F, 8 > F) {\n                                y = 7;\n                                break t;\n                            }\n                            var I = C(_, L + 4);\n                            if (4294967286 < I) {\n                                y = 3;\n                                break t;\n                            }\n                            var O = 8 + I + 1 & -2;\n                            if (P += O, 0 < k && P > k) {\n                                y = 3;\n                                break t;\n                            }\n                            if (!n(_, L, \"VP8 \") || !n(_, L, \"VP8L\")) {\n                                y = 0;\n                                break t;\n                            }\n                            if (F[0] < O) {\n                                y = 7;\n                                break t;\n                            }\n                            n(_, L, \"ALPH\") || (x[0] = _, A[0] = L + 8, S[0] = I), L += O, F -= O;\n                        }\n                    }\n                    if (i = i[0], g.na = g.na[0], g.P = g.P[0], g.Sa = g.Sa[0], 0 != y) break;\n                }\n                i = [\n                    i\n                ], g.Ja = [\n                    g.Ja\n                ], g.xa = [\n                    g.xa\n                ];\n                t: if (k = t, y = r, w = i, x = g.gb[0], A = g.Ja, S = g.xa, _ = y[0], L = !n(k, _, \"VP8 \"), P = !n(k, _, \"VP8L\"), e(null != k), e(null != w), e(null != A), e(null != S), 8 > w[0]) y = 7;\n                else {\n                    if (L || P) {\n                        if (k = C(k, _ + 4), 12 <= x && k > x - 12) {\n                            y = 3;\n                            break t;\n                        }\n                        if (p && k > w[0] - 8) {\n                            y = 7;\n                            break t;\n                        }\n                        A[0] = k, y[0] += 8, w[0] -= 8, S[0] = P;\n                    } else S[0] = 5 <= w[0] && 47 == k[_ + 0] && !(k[_ + 4] >> 5), A[0] = w[0];\n                    y = 0;\n                }\n                if (i = i[0], g.Ja = g.Ja[0], g.xa = g.xa[0], r = r[0], 0 != y) break;\n                if (4294967286 < g.Ja) return 3;\n                if (null == c || b || (c[0] = g.xa ? 2 : 1), u = [\n                    u\n                ], m = [\n                    m\n                ], g.xa) {\n                    if (5 > i) {\n                        y = 7;\n                        break;\n                    }\n                    c = u, p = m, b = s, null == t || 5 > i ? t = 0 : 5 <= i && 47 == t[r + 0] && !(t[r + 4] >> 5) ? (w = [\n                        0\n                    ], k = [\n                        0\n                    ], x = [\n                        0\n                    ], v(A = new N, t, r, i), gt(A, w, k, x) ? (null != c && (c[0] = w[0]), null != p && (p[0] = k[0]), null != b && (b[0] = x[0]), t = 1) : t = 0) : t = 0;\n                } else {\n                    if (10 > i) {\n                        y = 7;\n                        break;\n                    }\n                    c = m, null == t || 10 > i || !Xt(t, r + 3, i - 3) ? t = 0 : (p = t[r + 0] | t[r + 1] << 8 | t[r + 2] << 16, b = 16383 & (t[r + 7] << 8 | t[r + 6]), t = 16383 & (t[r + 9] << 8 | t[r + 8]), 1 & p || 3 < (p >> 1 & 7) || !(p >> 4 & 1) || p >> 5 >= g.Ja || !b || !t ? t = 0 : (u && (u[0] = b), c && (c[0] = t), t = 1));\n                }\n                if (!t) return 3;\n                if (u = u[0], m = m[0], d && (h[0] != u || f[0] != m)) return 3;\n                null != l && (l[0] = g, l.offset = r - l.w, e(4294967286 > r - l.w), e(l.offset == l.ha - i));\n                break;\n            }\n            return 0 == y || 7 == y && d && null == l ? (null != s && (s[0] |= null != g.na && 0 < g.na.length), null != a && (a[0] = u), null != o && (o[0] = m), 0) : y;\n        }\n        function Mn(t, e, n) {\n            var r = e.width, i = e.height, a = 0, o = 0, s = r, u = i;\n            if (e.Da = null != t && 0 < t.Da, e.Da && (s = t.cd, u = t.bd, a = t.v, o = t.j, 11 > n || (a &= -2, o &= -2), 0 > a || 0 > o || 0 >= s || 0 >= u || a + s > r || o + u > i)) return 0;\n            if (e.v = a, e.j = o, e.va = a + s, e.o = o + u, e.U = s, e.T = u, e.da = null != t && 0 < t.da, e.da) {\n                if (!q(s, u, n = [\n                    t.ib\n                ], a = [\n                    t.hb\n                ])) return 0;\n                e.ib = n[0], e.hb = a[0];\n            }\n            return e.ob = null != t && t.ob, e.Kb = null == t || !t.Sd, e.da && (e.ob = e.ib < 3 * r / 4 && e.hb < 3 * i / 4, e.Kb = 0), 1;\n        }\n        function qn(t) {\n            if (null == t) return 2;\n            if (11 > t.S) {\n                var e = t.f.RGBA;\n                e.fb += (t.height - 1) * e.A, e.A = -e.A;\n            } else e = t.f.kb, t = t.height, e.O += (t - 1) * e.fa, e.fa = -e.fa, e.N += (t - 1 >> 1) * e.Ab, e.Ab = -e.Ab, e.W += (t - 1 >> 1) * e.Db, e.Db = -e.Db, null != e.F && (e.J += (t - 1) * e.lb, e.lb = -e.lb);\n            return 0;\n        }\n        function En(t, e, n, r) {\n            if (null == r || 0 >= t || 0 >= e) return 2;\n            if (null != n) {\n                if (n.Da) {\n                    var i = n.cd, o = n.bd, s = -2 & n.v, u = -2 & n.j;\n                    if (0 > s || 0 > u || 0 >= i || 0 >= o || s + i > t || u + o > e) return 2;\n                    t = i, e = o;\n                }\n                if (n.da) {\n                    if (!q(t, e, i = [\n                        n.ib\n                    ], o = [\n                        n.hb\n                    ])) return 2;\n                    t = i[0], e = o[0];\n                }\n            }\n            r.width = t, r.height = e;\n            t: {\n                var c = r.width, l = r.height;\n                if (t = r.S, 0 >= c || 0 >= l || !(t >= Mr && 13 > t)) t = 2;\n                else {\n                    if (0 >= r.Rd && null == r.sd) {\n                        s = o = i = e = 0;\n                        var h = (u = c * zi[t]) * l;\n                        if (11 > t || (o = (l + 1) / 2 * (e = (c + 1) / 2), 12 == t && (s = (i = c) * l)), null == (l = a(h + 2 * o + s))) {\n                            t = 1;\n                            break t;\n                        }\n                        r.sd = l, 11 > t ? ((c = r.f.RGBA).eb = l, c.fb = 0, c.A = u, c.size = h) : ((c = r.f.kb).y = l, c.O = 0, c.fa = u, c.Fd = h, c.f = l, c.N = 0 + h, c.Ab = e, c.Cd = o, c.ea = l, c.W = 0 + h + o, c.Db = e, c.Ed = o, 12 == t && (c.F = l, c.J = 0 + h + 2 * o), c.Tc = s, c.lb = i);\n                    }\n                    if (e = 1, i = r.S, o = r.width, s = r.height, i >= Mr && 13 > i) if (11 > i) t = r.f.RGBA, e &= (u = Math.abs(t.A)) * (s - 1) + o <= t.size, e &= u >= o * zi[i], e &= null != t.eb;\n                    else {\n                        t = r.f.kb, u = (o + 1) / 2, h = (s + 1) / 2, c = Math.abs(t.fa), l = Math.abs(t.Ab);\n                        var f = Math.abs(t.Db), d = Math.abs(t.lb), p = d * (s - 1) + o;\n                        e &= c * (s - 1) + o <= t.Fd, e &= l * (h - 1) + u <= t.Cd, e = (e &= f * (h - 1) + u <= t.Ed) & c >= o & l >= u & f >= u, e &= null != t.y, e &= null != t.f, e &= null != t.ea, 12 == i && (e &= d >= o, e &= p <= t.Tc, e &= null != t.F);\n                    }\n                    else e = 0;\n                    t = e ? 0 : 2;\n                }\n            }\n            return 0 != t || null != n && n.fd && (t = qn(r)), t;\n        }\n        var Rn = 64, Dn = [\n            0,\n            1,\n            3,\n            7,\n            15,\n            31,\n            63,\n            127,\n            255,\n            511,\n            1023,\n            2047,\n            4095,\n            8191,\n            16383,\n            32767,\n            65535,\n            131071,\n            262143,\n            524287,\n            1048575,\n            2097151,\n            4194303,\n            8388607,\n            16777215\n        ], Tn = 24, zn = 32, Un = 8, Hn = [\n            0,\n            0,\n            1,\n            1,\n            2,\n            2,\n            2,\n            2,\n            3,\n            3,\n            3,\n            3,\n            3,\n            3,\n            3,\n            3,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            4,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            5,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7,\n            7\n        ];\n        D(\"Predictor0\", \"PredictorAdd0\"), t.Predictor0 = function() {\n            return 4278190080;\n        }, t.Predictor1 = function(t) {\n            return t;\n        }, t.Predictor2 = function(t, e, n) {\n            return e[n + 0];\n        }, t.Predictor3 = function(t, e, n) {\n            return e[n + 1];\n        }, t.Predictor4 = function(t, e, n) {\n            return e[n - 1];\n        }, t.Predictor5 = function(t, e, n) {\n            return z(z(t, e[n + 1]), e[n + 0]);\n        }, t.Predictor6 = function(t, e, n) {\n            return z(t, e[n - 1]);\n        }, t.Predictor7 = function(t, e, n) {\n            return z(t, e[n + 0]);\n        }, t.Predictor8 = function(t, e, n) {\n            return z(e[n - 1], e[n + 0]);\n        }, t.Predictor9 = function(t, e, n) {\n            return z(e[n + 0], e[n + 1]);\n        }, t.Predictor10 = function(t, e, n) {\n            return z(z(t, e[n - 1]), z(e[n + 0], e[n + 1]));\n        }, t.Predictor11 = function(t, e, n) {\n            var r = e[n + 0];\n            return 0 >= W(r >> 24 & 255, t >> 24 & 255, (e = e[n - 1]) >> 24 & 255) + W(r >> 16 & 255, t >> 16 & 255, e >> 16 & 255) + W(r >> 8 & 255, t >> 8 & 255, e >> 8 & 255) + W(255 & r, 255 & t, 255 & e) ? r : t;\n        }, t.Predictor12 = function(t, e, n) {\n            var r = e[n + 0];\n            return (U((t >> 24 & 255) + (r >> 24 & 255) - ((e = e[n - 1]) >> 24 & 255)) << 24 | U((t >> 16 & 255) + (r >> 16 & 255) - (e >> 16 & 255)) << 16 | U((t >> 8 & 255) + (r >> 8 & 255) - (e >> 8 & 255)) << 8 | U((255 & t) + (255 & r) - (255 & e))) >>> 0;\n        }, t.Predictor13 = function(t, e, n) {\n            var r = e[n - 1];\n            return (H((t = z(t, e[n + 0])) >> 24 & 255, r >> 24 & 255) << 24 | H(t >> 16 & 255, r >> 16 & 255) << 16 | H(t >> 8 & 255, r >> 8 & 255) << 8 | H(255 & t, 255 & r)) >>> 0;\n        };\n        var Wn = t.PredictorAdd0;\n        t.PredictorAdd1 = V, D(\"Predictor2\", \"PredictorAdd2\"), D(\"Predictor3\", \"PredictorAdd3\"), D(\"Predictor4\", \"PredictorAdd4\"), D(\"Predictor5\", \"PredictorAdd5\"), D(\"Predictor6\", \"PredictorAdd6\"), D(\"Predictor7\", \"PredictorAdd7\"), D(\"Predictor8\", \"PredictorAdd8\"), D(\"Predictor9\", \"PredictorAdd9\"), D(\"Predictor10\", \"PredictorAdd10\"), D(\"Predictor11\", \"PredictorAdd11\"), D(\"Predictor12\", \"PredictorAdd12\"), D(\"Predictor13\", \"PredictorAdd13\");\n        var Vn = t.PredictorAdd2;\n        X(\"ColorIndexInverseTransform\", \"MapARGB\", \"32b\", function(t) {\n            return t >> 8 & 255;\n        }, function(t) {\n            return t;\n        }), X(\"VP8LColorIndexInverseTransformAlpha\", \"MapAlpha\", \"8b\", function(t) {\n            return t;\n        }, function(t) {\n            return t >> 8 & 255;\n        });\n        var Gn, Yn = t.ColorIndexInverseTransform, Jn = t.MapARGB, Xn = t.VP8LColorIndexInverseTransformAlpha, Kn = t.MapAlpha, Zn = t.VP8LPredictorsAdd = [];\n        Zn.length = 16, (t.VP8LPredictors = []).length = 16, (t.VP8LPredictorsAdd_C = []).length = 16, (t.VP8LPredictors_C = []).length = 16;\n        var $n, Qn, tr, er, nr, rr, ir, ar, or, sr, ur, cr, lr, hr, fr, dr, pr, gr, mr, vr, br, yr, wr, Nr, Lr, xr, Ar, Sr, _r = a(511), Pr = a(2041), kr = a(225), Fr = a(767), Ir = 0, jr = Pr, Cr = kr, Or = Fr, Br = _r, Mr = 0, qr = 1, Er = 2, Rr = 3, Dr = 4, Tr = 5, zr = 6, Ur = 7, Hr = 8, Wr = 9, Vr = 10, Gr = [\n            2,\n            3,\n            7\n        ], Yr = [\n            3,\n            3,\n            11\n        ], Jr = [\n            280,\n            256,\n            256,\n            256,\n            40\n        ], Xr = [\n            0,\n            1,\n            1,\n            1,\n            0\n        ], Kr = [\n            17,\n            18,\n            0,\n            1,\n            2,\n            3,\n            4,\n            5,\n            16,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15\n        ], Zr = [\n            24,\n            7,\n            23,\n            25,\n            40,\n            6,\n            39,\n            41,\n            22,\n            26,\n            38,\n            42,\n            56,\n            5,\n            55,\n            57,\n            21,\n            27,\n            54,\n            58,\n            37,\n            43,\n            72,\n            4,\n            71,\n            73,\n            20,\n            28,\n            53,\n            59,\n            70,\n            74,\n            36,\n            44,\n            88,\n            69,\n            75,\n            52,\n            60,\n            3,\n            87,\n            89,\n            19,\n            29,\n            86,\n            90,\n            35,\n            45,\n            68,\n            76,\n            85,\n            91,\n            51,\n            61,\n            104,\n            2,\n            103,\n            105,\n            18,\n            30,\n            102,\n            106,\n            34,\n            46,\n            84,\n            92,\n            67,\n            77,\n            101,\n            107,\n            50,\n            62,\n            120,\n            1,\n            119,\n            121,\n            83,\n            93,\n            17,\n            31,\n            100,\n            108,\n            66,\n            78,\n            118,\n            122,\n            33,\n            47,\n            117,\n            123,\n            49,\n            63,\n            99,\n            109,\n            82,\n            94,\n            0,\n            116,\n            124,\n            65,\n            79,\n            16,\n            32,\n            98,\n            110,\n            48,\n            115,\n            125,\n            81,\n            95,\n            64,\n            114,\n            126,\n            97,\n            111,\n            80,\n            113,\n            127,\n            96,\n            112\n        ], $r = [\n            2954,\n            2956,\n            2958,\n            2962,\n            2970,\n            2986,\n            3018,\n            3082,\n            3212,\n            3468,\n            3980,\n            5004\n        ], Qr = 8, ti = [\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            17,\n            18,\n            19,\n            20,\n            20,\n            21,\n            21,\n            22,\n            22,\n            23,\n            23,\n            24,\n            25,\n            25,\n            26,\n            27,\n            28,\n            29,\n            30,\n            31,\n            32,\n            33,\n            34,\n            35,\n            36,\n            37,\n            37,\n            38,\n            39,\n            40,\n            41,\n            42,\n            43,\n            44,\n            45,\n            46,\n            46,\n            47,\n            48,\n            49,\n            50,\n            51,\n            52,\n            53,\n            54,\n            55,\n            56,\n            57,\n            58,\n            59,\n            60,\n            61,\n            62,\n            63,\n            64,\n            65,\n            66,\n            67,\n            68,\n            69,\n            70,\n            71,\n            72,\n            73,\n            74,\n            75,\n            76,\n            76,\n            77,\n            78,\n            79,\n            80,\n            81,\n            82,\n            83,\n            84,\n            85,\n            86,\n            87,\n            88,\n            89,\n            91,\n            93,\n            95,\n            96,\n            98,\n            100,\n            101,\n            102,\n            104,\n            106,\n            108,\n            110,\n            112,\n            114,\n            116,\n            118,\n            122,\n            124,\n            126,\n            128,\n            130,\n            132,\n            134,\n            136,\n            138,\n            140,\n            143,\n            145,\n            148,\n            151,\n            154,\n            157\n        ], ei = [\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10,\n            11,\n            12,\n            13,\n            14,\n            15,\n            16,\n            17,\n            18,\n            19,\n            20,\n            21,\n            22,\n            23,\n            24,\n            25,\n            26,\n            27,\n            28,\n            29,\n            30,\n            31,\n            32,\n            33,\n            34,\n            35,\n            36,\n            37,\n            38,\n            39,\n            40,\n            41,\n            42,\n            43,\n            44,\n            45,\n            46,\n            47,\n            48,\n            49,\n            50,\n            51,\n            52,\n            53,\n            54,\n            55,\n            56,\n            57,\n            58,\n            60,\n            62,\n            64,\n            66,\n            68,\n            70,\n            72,\n            74,\n            76,\n            78,\n            80,\n            82,\n            84,\n            86,\n            88,\n            90,\n            92,\n            94,\n            96,\n            98,\n            100,\n            102,\n            104,\n            106,\n            108,\n            110,\n            112,\n            114,\n            116,\n            119,\n            122,\n            125,\n            128,\n            131,\n            134,\n            137,\n            140,\n            143,\n            146,\n            149,\n            152,\n            155,\n            158,\n            161,\n            164,\n            167,\n            170,\n            173,\n            177,\n            181,\n            185,\n            189,\n            193,\n            197,\n            201,\n            205,\n            209,\n            213,\n            217,\n            221,\n            225,\n            229,\n            234,\n            239,\n            245,\n            249,\n            254,\n            259,\n            264,\n            269,\n            274,\n            279,\n            284\n        ], ni = null, ri = [\n            [\n                173,\n                148,\n                140,\n                0\n            ],\n            [\n                176,\n                155,\n                140,\n                135,\n                0\n            ],\n            [\n                180,\n                157,\n                141,\n                134,\n                130,\n                0\n            ],\n            [\n                254,\n                254,\n                243,\n                230,\n                196,\n                177,\n                153,\n                140,\n                133,\n                130,\n                129,\n                0\n            ]\n        ], ii = [\n            0,\n            1,\n            4,\n            8,\n            5,\n            2,\n            3,\n            6,\n            9,\n            12,\n            13,\n            10,\n            7,\n            11,\n            14,\n            15\n        ], ai = [\n            -0,\n            1,\n            -1,\n            2,\n            -2,\n            3,\n            4,\n            6,\n            -3,\n            5,\n            -4,\n            -5,\n            -6,\n            7,\n            -7,\n            8,\n            -8,\n            -9\n        ], oi = [\n            [\n                [\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        253,\n                        136,\n                        254,\n                        255,\n                        228,\n                        219,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        189,\n                        129,\n                        242,\n                        255,\n                        227,\n                        213,\n                        255,\n                        219,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        106,\n                        126,\n                        227,\n                        252,\n                        214,\n                        209,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        98,\n                        248,\n                        255,\n                        236,\n                        226,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        181,\n                        133,\n                        238,\n                        254,\n                        221,\n                        234,\n                        255,\n                        154,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        78,\n                        134,\n                        202,\n                        247,\n                        198,\n                        180,\n                        255,\n                        219,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        185,\n                        249,\n                        255,\n                        243,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        184,\n                        150,\n                        247,\n                        255,\n                        236,\n                        224,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        77,\n                        110,\n                        216,\n                        255,\n                        236,\n                        230,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        101,\n                        251,\n                        255,\n                        241,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        170,\n                        139,\n                        241,\n                        252,\n                        236,\n                        209,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        37,\n                        116,\n                        196,\n                        243,\n                        228,\n                        255,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        204,\n                        254,\n                        255,\n                        245,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        207,\n                        160,\n                        250,\n                        255,\n                        238,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        102,\n                        103,\n                        231,\n                        255,\n                        211,\n                        171,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        152,\n                        252,\n                        255,\n                        240,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        177,\n                        135,\n                        243,\n                        255,\n                        234,\n                        225,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        80,\n                        129,\n                        211,\n                        255,\n                        194,\n                        224,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        246,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        198,\n                        35,\n                        237,\n                        223,\n                        193,\n                        187,\n                        162,\n                        160,\n                        145,\n                        155,\n                        62\n                    ],\n                    [\n                        131,\n                        45,\n                        198,\n                        221,\n                        172,\n                        176,\n                        220,\n                        157,\n                        252,\n                        221,\n                        1\n                    ],\n                    [\n                        68,\n                        47,\n                        146,\n                        208,\n                        149,\n                        167,\n                        221,\n                        162,\n                        255,\n                        223,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        149,\n                        241,\n                        255,\n                        221,\n                        224,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        184,\n                        141,\n                        234,\n                        253,\n                        222,\n                        220,\n                        255,\n                        199,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        81,\n                        99,\n                        181,\n                        242,\n                        176,\n                        190,\n                        249,\n                        202,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        129,\n                        232,\n                        253,\n                        214,\n                        197,\n                        242,\n                        196,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        99,\n                        121,\n                        210,\n                        250,\n                        201,\n                        198,\n                        255,\n                        202,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        23,\n                        91,\n                        163,\n                        242,\n                        170,\n                        187,\n                        247,\n                        210,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        200,\n                        246,\n                        255,\n                        234,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        109,\n                        178,\n                        241,\n                        255,\n                        231,\n                        245,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        44,\n                        130,\n                        201,\n                        253,\n                        205,\n                        192,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        132,\n                        239,\n                        251,\n                        219,\n                        209,\n                        255,\n                        165,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        94,\n                        136,\n                        225,\n                        251,\n                        218,\n                        190,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        22,\n                        100,\n                        174,\n                        245,\n                        186,\n                        161,\n                        255,\n                        199,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        182,\n                        249,\n                        255,\n                        232,\n                        235,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        124,\n                        143,\n                        241,\n                        255,\n                        227,\n                        234,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        35,\n                        77,\n                        181,\n                        251,\n                        193,\n                        211,\n                        255,\n                        205,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        157,\n                        247,\n                        255,\n                        236,\n                        231,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        121,\n                        141,\n                        235,\n                        255,\n                        225,\n                        227,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        45,\n                        99,\n                        188,\n                        251,\n                        195,\n                        217,\n                        255,\n                        224,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        1,\n                        251,\n                        255,\n                        213,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        203,\n                        1,\n                        248,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        137,\n                        1,\n                        177,\n                        255,\n                        224,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        253,\n                        9,\n                        248,\n                        251,\n                        207,\n                        208,\n                        255,\n                        192,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        175,\n                        13,\n                        224,\n                        243,\n                        193,\n                        185,\n                        249,\n                        198,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        73,\n                        17,\n                        171,\n                        221,\n                        161,\n                        179,\n                        236,\n                        167,\n                        255,\n                        234,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        95,\n                        247,\n                        253,\n                        212,\n                        183,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        239,\n                        90,\n                        244,\n                        250,\n                        211,\n                        209,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        155,\n                        77,\n                        195,\n                        248,\n                        188,\n                        195,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        24,\n                        239,\n                        251,\n                        218,\n                        219,\n                        255,\n                        205,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        201,\n                        51,\n                        219,\n                        255,\n                        196,\n                        186,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        69,\n                        46,\n                        190,\n                        239,\n                        201,\n                        218,\n                        255,\n                        228,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        191,\n                        251,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        223,\n                        165,\n                        249,\n                        255,\n                        213,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        141,\n                        124,\n                        248,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        16,\n                        248,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        190,\n                        36,\n                        230,\n                        255,\n                        236,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        149,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        226,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        247,\n                        192,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        240,\n                        128,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        134,\n                        252,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        213,\n                        62,\n                        250,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        55,\n                        93,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        202,\n                        24,\n                        213,\n                        235,\n                        186,\n                        191,\n                        220,\n                        160,\n                        240,\n                        175,\n                        255\n                    ],\n                    [\n                        126,\n                        38,\n                        182,\n                        232,\n                        169,\n                        184,\n                        228,\n                        174,\n                        255,\n                        187,\n                        128\n                    ],\n                    [\n                        61,\n                        46,\n                        138,\n                        219,\n                        151,\n                        178,\n                        240,\n                        170,\n                        255,\n                        216,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        112,\n                        230,\n                        250,\n                        199,\n                        191,\n                        247,\n                        159,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        166,\n                        109,\n                        228,\n                        252,\n                        211,\n                        215,\n                        255,\n                        174,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        39,\n                        77,\n                        162,\n                        232,\n                        172,\n                        180,\n                        245,\n                        178,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        52,\n                        220,\n                        246,\n                        198,\n                        199,\n                        249,\n                        220,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        124,\n                        74,\n                        191,\n                        243,\n                        183,\n                        193,\n                        250,\n                        221,\n                        255,\n                        255,\n                        128\n                    ],\n                    [\n                        24,\n                        71,\n                        130,\n                        219,\n                        154,\n                        170,\n                        243,\n                        182,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        182,\n                        225,\n                        249,\n                        219,\n                        240,\n                        255,\n                        224,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        149,\n                        150,\n                        226,\n                        252,\n                        216,\n                        205,\n                        255,\n                        171,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        28,\n                        108,\n                        170,\n                        242,\n                        183,\n                        194,\n                        254,\n                        223,\n                        255,\n                        255,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        81,\n                        230,\n                        252,\n                        204,\n                        203,\n                        255,\n                        192,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        123,\n                        102,\n                        209,\n                        247,\n                        188,\n                        196,\n                        255,\n                        233,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        20,\n                        95,\n                        153,\n                        243,\n                        164,\n                        173,\n                        255,\n                        203,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        222,\n                        248,\n                        255,\n                        216,\n                        213,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        168,\n                        175,\n                        246,\n                        252,\n                        235,\n                        205,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        47,\n                        116,\n                        215,\n                        255,\n                        211,\n                        212,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        121,\n                        236,\n                        253,\n                        212,\n                        214,\n                        255,\n                        255,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        141,\n                        84,\n                        213,\n                        252,\n                        201,\n                        202,\n                        255,\n                        219,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        42,\n                        80,\n                        160,\n                        240,\n                        162,\n                        185,\n                        255,\n                        205,\n                        128,\n                        128,\n                        128\n                    ]\n                ],\n                [\n                    [\n                        1,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        244,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ],\n                    [\n                        238,\n                        1,\n                        255,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128,\n                        128\n                    ]\n                ]\n            ]\n        ], si = [\n            [\n                [\n                    231,\n                    120,\n                    48,\n                    89,\n                    115,\n                    113,\n                    120,\n                    152,\n                    112\n                ],\n                [\n                    152,\n                    179,\n                    64,\n                    126,\n                    170,\n                    118,\n                    46,\n                    70,\n                    95\n                ],\n                [\n                    175,\n                    69,\n                    143,\n                    80,\n                    85,\n                    82,\n                    72,\n                    155,\n                    103\n                ],\n                [\n                    56,\n                    58,\n                    10,\n                    171,\n                    218,\n                    189,\n                    17,\n                    13,\n                    152\n                ],\n                [\n                    114,\n                    26,\n                    17,\n                    163,\n                    44,\n                    195,\n                    21,\n                    10,\n                    173\n                ],\n                [\n                    121,\n                    24,\n                    80,\n                    195,\n                    26,\n                    62,\n                    44,\n                    64,\n                    85\n                ],\n                [\n                    144,\n                    71,\n                    10,\n                    38,\n                    171,\n                    213,\n                    144,\n                    34,\n                    26\n                ],\n                [\n                    170,\n                    46,\n                    55,\n                    19,\n                    136,\n                    160,\n                    33,\n                    206,\n                    71\n                ],\n                [\n                    63,\n                    20,\n                    8,\n                    114,\n                    114,\n                    208,\n                    12,\n                    9,\n                    226\n                ],\n                [\n                    81,\n                    40,\n                    11,\n                    96,\n                    182,\n                    84,\n                    29,\n                    16,\n                    36\n                ]\n            ],\n            [\n                [\n                    134,\n                    183,\n                    89,\n                    137,\n                    98,\n                    101,\n                    106,\n                    165,\n                    148\n                ],\n                [\n                    72,\n                    187,\n                    100,\n                    130,\n                    157,\n                    111,\n                    32,\n                    75,\n                    80\n                ],\n                [\n                    66,\n                    102,\n                    167,\n                    99,\n                    74,\n                    62,\n                    40,\n                    234,\n                    128\n                ],\n                [\n                    41,\n                    53,\n                    9,\n                    178,\n                    241,\n                    141,\n                    26,\n                    8,\n                    107\n                ],\n                [\n                    74,\n                    43,\n                    26,\n                    146,\n                    73,\n                    166,\n                    49,\n                    23,\n                    157\n                ],\n                [\n                    65,\n                    38,\n                    105,\n                    160,\n                    51,\n                    52,\n                    31,\n                    115,\n                    128\n                ],\n                [\n                    104,\n                    79,\n                    12,\n                    27,\n                    217,\n                    255,\n                    87,\n                    17,\n                    7\n                ],\n                [\n                    87,\n                    68,\n                    71,\n                    44,\n                    114,\n                    51,\n                    15,\n                    186,\n                    23\n                ],\n                [\n                    47,\n                    41,\n                    14,\n                    110,\n                    182,\n                    183,\n                    21,\n                    17,\n                    194\n                ],\n                [\n                    66,\n                    45,\n                    25,\n                    102,\n                    197,\n                    189,\n                    23,\n                    18,\n                    22\n                ]\n            ],\n            [\n                [\n                    88,\n                    88,\n                    147,\n                    150,\n                    42,\n                    46,\n                    45,\n                    196,\n                    205\n                ],\n                [\n                    43,\n                    97,\n                    183,\n                    117,\n                    85,\n                    38,\n                    35,\n                    179,\n                    61\n                ],\n                [\n                    39,\n                    53,\n                    200,\n                    87,\n                    26,\n                    21,\n                    43,\n                    232,\n                    171\n                ],\n                [\n                    56,\n                    34,\n                    51,\n                    104,\n                    114,\n                    102,\n                    29,\n                    93,\n                    77\n                ],\n                [\n                    39,\n                    28,\n                    85,\n                    171,\n                    58,\n                    165,\n                    90,\n                    98,\n                    64\n                ],\n                [\n                    34,\n                    22,\n                    116,\n                    206,\n                    23,\n                    34,\n                    43,\n                    166,\n                    73\n                ],\n                [\n                    107,\n                    54,\n                    32,\n                    26,\n                    51,\n                    1,\n                    81,\n                    43,\n                    31\n                ],\n                [\n                    68,\n                    25,\n                    106,\n                    22,\n                    64,\n                    171,\n                    36,\n                    225,\n                    114\n                ],\n                [\n                    34,\n                    19,\n                    21,\n                    102,\n                    132,\n                    188,\n                    16,\n                    76,\n                    124\n                ],\n                [\n                    62,\n                    18,\n                    78,\n                    95,\n                    85,\n                    57,\n                    50,\n                    48,\n                    51\n                ]\n            ],\n            [\n                [\n                    193,\n                    101,\n                    35,\n                    159,\n                    215,\n                    111,\n                    89,\n                    46,\n                    111\n                ],\n                [\n                    60,\n                    148,\n                    31,\n                    172,\n                    219,\n                    228,\n                    21,\n                    18,\n                    111\n                ],\n                [\n                    112,\n                    113,\n                    77,\n                    85,\n                    179,\n                    255,\n                    38,\n                    120,\n                    114\n                ],\n                [\n                    40,\n                    42,\n                    1,\n                    196,\n                    245,\n                    209,\n                    10,\n                    25,\n                    109\n                ],\n                [\n                    88,\n                    43,\n                    29,\n                    140,\n                    166,\n                    213,\n                    37,\n                    43,\n                    154\n                ],\n                [\n                    61,\n                    63,\n                    30,\n                    155,\n                    67,\n                    45,\n                    68,\n                    1,\n                    209\n                ],\n                [\n                    100,\n                    80,\n                    8,\n                    43,\n                    154,\n                    1,\n                    51,\n                    26,\n                    71\n                ],\n                [\n                    142,\n                    78,\n                    78,\n                    16,\n                    255,\n                    128,\n                    34,\n                    197,\n                    171\n                ],\n                [\n                    41,\n                    40,\n                    5,\n                    102,\n                    211,\n                    183,\n                    4,\n                    1,\n                    221\n                ],\n                [\n                    51,\n                    50,\n                    17,\n                    168,\n                    209,\n                    192,\n                    23,\n                    25,\n                    82\n                ]\n            ],\n            [\n                [\n                    138,\n                    31,\n                    36,\n                    171,\n                    27,\n                    166,\n                    38,\n                    44,\n                    229\n                ],\n                [\n                    67,\n                    87,\n                    58,\n                    169,\n                    82,\n                    115,\n                    26,\n                    59,\n                    179\n                ],\n                [\n                    63,\n                    59,\n                    90,\n                    180,\n                    59,\n                    166,\n                    93,\n                    73,\n                    154\n                ],\n                [\n                    40,\n                    40,\n                    21,\n                    116,\n                    143,\n                    209,\n                    34,\n                    39,\n                    175\n                ],\n                [\n                    47,\n                    15,\n                    16,\n                    183,\n                    34,\n                    223,\n                    49,\n                    45,\n                    183\n                ],\n                [\n                    46,\n                    17,\n                    33,\n                    183,\n                    6,\n                    98,\n                    15,\n                    32,\n                    183\n                ],\n                [\n                    57,\n                    46,\n                    22,\n                    24,\n                    128,\n                    1,\n                    54,\n                    17,\n                    37\n                ],\n                [\n                    65,\n                    32,\n                    73,\n                    115,\n                    28,\n                    128,\n                    23,\n                    128,\n                    205\n                ],\n                [\n                    40,\n                    3,\n                    9,\n                    115,\n                    51,\n                    192,\n                    18,\n                    6,\n                    223\n                ],\n                [\n                    87,\n                    37,\n                    9,\n                    115,\n                    59,\n                    77,\n                    64,\n                    21,\n                    47\n                ]\n            ],\n            [\n                [\n                    104,\n                    55,\n                    44,\n                    218,\n                    9,\n                    54,\n                    53,\n                    130,\n                    226\n                ],\n                [\n                    64,\n                    90,\n                    70,\n                    205,\n                    40,\n                    41,\n                    23,\n                    26,\n                    57\n                ],\n                [\n                    54,\n                    57,\n                    112,\n                    184,\n                    5,\n                    41,\n                    38,\n                    166,\n                    213\n                ],\n                [\n                    30,\n                    34,\n                    26,\n                    133,\n                    152,\n                    116,\n                    10,\n                    32,\n                    134\n                ],\n                [\n                    39,\n                    19,\n                    53,\n                    221,\n                    26,\n                    114,\n                    32,\n                    73,\n                    255\n                ],\n                [\n                    31,\n                    9,\n                    65,\n                    234,\n                    2,\n                    15,\n                    1,\n                    118,\n                    73\n                ],\n                [\n                    75,\n                    32,\n                    12,\n                    51,\n                    192,\n                    255,\n                    160,\n                    43,\n                    51\n                ],\n                [\n                    88,\n                    31,\n                    35,\n                    67,\n                    102,\n                    85,\n                    55,\n                    186,\n                    85\n                ],\n                [\n                    56,\n                    21,\n                    23,\n                    111,\n                    59,\n                    205,\n                    45,\n                    37,\n                    192\n                ],\n                [\n                    55,\n                    38,\n                    70,\n                    124,\n                    73,\n                    102,\n                    1,\n                    34,\n                    98\n                ]\n            ],\n            [\n                [\n                    125,\n                    98,\n                    42,\n                    88,\n                    104,\n                    85,\n                    117,\n                    175,\n                    82\n                ],\n                [\n                    95,\n                    84,\n                    53,\n                    89,\n                    128,\n                    100,\n                    113,\n                    101,\n                    45\n                ],\n                [\n                    75,\n                    79,\n                    123,\n                    47,\n                    51,\n                    128,\n                    81,\n                    171,\n                    1\n                ],\n                [\n                    57,\n                    17,\n                    5,\n                    71,\n                    102,\n                    57,\n                    53,\n                    41,\n                    49\n                ],\n                [\n                    38,\n                    33,\n                    13,\n                    121,\n                    57,\n                    73,\n                    26,\n                    1,\n                    85\n                ],\n                [\n                    41,\n                    10,\n                    67,\n                    138,\n                    77,\n                    110,\n                    90,\n                    47,\n                    114\n                ],\n                [\n                    115,\n                    21,\n                    2,\n                    10,\n                    102,\n                    255,\n                    166,\n                    23,\n                    6\n                ],\n                [\n                    101,\n                    29,\n                    16,\n                    10,\n                    85,\n                    128,\n                    101,\n                    196,\n                    26\n                ],\n                [\n                    57,\n                    18,\n                    10,\n                    102,\n                    102,\n                    213,\n                    34,\n                    20,\n                    43\n                ],\n                [\n                    117,\n                    20,\n                    15,\n                    36,\n                    163,\n                    128,\n                    68,\n                    1,\n                    26\n                ]\n            ],\n            [\n                [\n                    102,\n                    61,\n                    71,\n                    37,\n                    34,\n                    53,\n                    31,\n                    243,\n                    192\n                ],\n                [\n                    69,\n                    60,\n                    71,\n                    38,\n                    73,\n                    119,\n                    28,\n                    222,\n                    37\n                ],\n                [\n                    68,\n                    45,\n                    128,\n                    34,\n                    1,\n                    47,\n                    11,\n                    245,\n                    171\n                ],\n                [\n                    62,\n                    17,\n                    19,\n                    70,\n                    146,\n                    85,\n                    55,\n                    62,\n                    70\n                ],\n                [\n                    37,\n                    43,\n                    37,\n                    154,\n                    100,\n                    163,\n                    85,\n                    160,\n                    1\n                ],\n                [\n                    63,\n                    9,\n                    92,\n                    136,\n                    28,\n                    64,\n                    32,\n                    201,\n                    85\n                ],\n                [\n                    75,\n                    15,\n                    9,\n                    9,\n                    64,\n                    255,\n                    184,\n                    119,\n                    16\n                ],\n                [\n                    86,\n                    6,\n                    28,\n                    5,\n                    64,\n                    255,\n                    25,\n                    248,\n                    1\n                ],\n                [\n                    56,\n                    8,\n                    17,\n                    132,\n                    137,\n                    255,\n                    55,\n                    116,\n                    128\n                ],\n                [\n                    58,\n                    15,\n                    20,\n                    82,\n                    135,\n                    57,\n                    26,\n                    121,\n                    40\n                ]\n            ],\n            [\n                [\n                    164,\n                    50,\n                    31,\n                    137,\n                    154,\n                    133,\n                    25,\n                    35,\n                    218\n                ],\n                [\n                    51,\n                    103,\n                    44,\n                    131,\n                    131,\n                    123,\n                    31,\n                    6,\n                    158\n                ],\n                [\n                    86,\n                    40,\n                    64,\n                    135,\n                    148,\n                    224,\n                    45,\n                    183,\n                    128\n                ],\n                [\n                    22,\n                    26,\n                    17,\n                    131,\n                    240,\n                    154,\n                    14,\n                    1,\n                    209\n                ],\n                [\n                    45,\n                    16,\n                    21,\n                    91,\n                    64,\n                    222,\n                    7,\n                    1,\n                    197\n                ],\n                [\n                    56,\n                    21,\n                    39,\n                    155,\n                    60,\n                    138,\n                    23,\n                    102,\n                    213\n                ],\n                [\n                    83,\n                    12,\n                    13,\n                    54,\n                    192,\n                    255,\n                    68,\n                    47,\n                    28\n                ],\n                [\n                    85,\n                    26,\n                    85,\n                    85,\n                    128,\n                    128,\n                    32,\n                    146,\n                    171\n                ],\n                [\n                    18,\n                    11,\n                    7,\n                    63,\n                    144,\n                    171,\n                    4,\n                    4,\n                    246\n                ],\n                [\n                    35,\n                    27,\n                    10,\n                    146,\n                    174,\n                    171,\n                    12,\n                    26,\n                    128\n                ]\n            ],\n            [\n                [\n                    190,\n                    80,\n                    35,\n                    99,\n                    180,\n                    80,\n                    126,\n                    54,\n                    45\n                ],\n                [\n                    85,\n                    126,\n                    47,\n                    87,\n                    176,\n                    51,\n                    41,\n                    20,\n                    32\n                ],\n                [\n                    101,\n                    75,\n                    128,\n                    139,\n                    118,\n                    146,\n                    116,\n                    128,\n                    85\n                ],\n                [\n                    56,\n                    41,\n                    15,\n                    176,\n                    236,\n                    85,\n                    37,\n                    9,\n                    62\n                ],\n                [\n                    71,\n                    30,\n                    17,\n                    119,\n                    118,\n                    255,\n                    17,\n                    18,\n                    138\n                ],\n                [\n                    101,\n                    38,\n                    60,\n                    138,\n                    55,\n                    70,\n                    43,\n                    26,\n                    142\n                ],\n                [\n                    146,\n                    36,\n                    19,\n                    30,\n                    171,\n                    255,\n                    97,\n                    27,\n                    20\n                ],\n                [\n                    138,\n                    45,\n                    61,\n                    62,\n                    219,\n                    1,\n                    81,\n                    188,\n                    64\n                ],\n                [\n                    32,\n                    41,\n                    20,\n                    117,\n                    151,\n                    142,\n                    20,\n                    21,\n                    163\n                ],\n                [\n                    112,\n                    19,\n                    12,\n                    61,\n                    195,\n                    128,\n                    48,\n                    4,\n                    24\n                ]\n            ]\n        ], ui = [\n            [\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        176,\n                        246,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        223,\n                        241,\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        249,\n                        253,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        244,\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        234,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        246,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        239,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        248,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        251,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        251,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        253,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        250,\n                        255,\n                        254,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        217,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        225,\n                        252,\n                        241,\n                        253,\n                        255,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        234,\n                        250,\n                        241,\n                        250,\n                        253,\n                        255,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        223,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        238,\n                        253,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        248,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        249,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        247,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        250,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        186,\n                        251,\n                        250,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        234,\n                        251,\n                        244,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        251,\n                        251,\n                        243,\n                        253,\n                        254,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        236,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        251,\n                        253,\n                        253,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ]\n            ],\n            [\n                [\n                    [\n                        248,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        250,\n                        254,\n                        252,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        248,\n                        254,\n                        249,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        253,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        246,\n                        253,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        252,\n                        254,\n                        251,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        254,\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        248,\n                        254,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        253,\n                        255,\n                        254,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        251,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        245,\n                        251,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        253,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        251,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        252,\n                        253,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        252,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        249,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        253,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        250,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ],\n                [\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        254,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ],\n                    [\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255,\n                        255\n                    ]\n                ]\n            ]\n        ], ci = [\n            0,\n            1,\n            2,\n            3,\n            6,\n            4,\n            5,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            6,\n            7,\n            0\n        ], li = [], hi = [], fi = [], di = 1, pi = 2, gi = [], mi = [];\n        vn(\"UpsampleRgbLinePair\", xn, 3), vn(\"UpsampleBgrLinePair\", An, 3), vn(\"UpsampleRgbaLinePair\", Fn, 4), vn(\"UpsampleBgraLinePair\", kn, 4), vn(\"UpsampleArgbLinePair\", Pn, 4), vn(\"UpsampleRgba4444LinePair\", _n, 2), vn(\"UpsampleRgb565LinePair\", Sn, 2);\n        var vi = t.UpsampleRgbLinePair, bi = t.UpsampleBgrLinePair, yi = t.UpsampleRgbaLinePair, wi = t.UpsampleBgraLinePair, Ni = t.UpsampleArgbLinePair, Li = t.UpsampleRgba4444LinePair, xi = t.UpsampleRgb565LinePair, Ai = 16, Si = 1 << Ai - 1, _i = -227, Pi = 482, ki = 6, Fi = (256 << ki) - 1, Ii = 0, ji = a(256), Ci = a(256), Oi = a(256), Bi = a(256), Mi = a(Pi - _i), qi = a(Pi - _i);\n        In(\"YuvToRgbRow\", xn, 3), In(\"YuvToBgrRow\", An, 3), In(\"YuvToRgbaRow\", Fn, 4), In(\"YuvToBgraRow\", kn, 4), In(\"YuvToArgbRow\", Pn, 4), In(\"YuvToRgba4444Row\", _n, 2), In(\"YuvToRgb565Row\", Sn, 2);\n        var Ei = [\n            0,\n            4,\n            8,\n            12,\n            128,\n            132,\n            136,\n            140,\n            256,\n            260,\n            264,\n            268,\n            384,\n            388,\n            392,\n            396\n        ], Ri = [\n            0,\n            2,\n            8\n        ], Di = [\n            8,\n            7,\n            6,\n            4,\n            4,\n            2,\n            2,\n            2,\n            1,\n            1,\n            1,\n            1\n        ], Ti = 1;\n        this.WebPDecodeRGBA = function(t, n, s, u, c) {\n            var l = qr, h = new en, f = new ot;\n            h.ba = f, f.S = l, f.width = [\n                f.width\n            ], f.height = [\n                f.height\n            ];\n            var d = f.width, p = f.height, g = new st;\n            if (null == g || null == t) var m = 2;\n            else e(null != g), m = Bn(t, n, s, g.width, g.height, g.Pd, g.Qd, g.format, null);\n            if (0 != m ? d = 0 : (null != d && (d[0] = g.width[0]), null != p && (p[0] = g.height[0]), d = 1), d) {\n                f.width = f.width[0], f.height = f.height[0], null != u && (u[0] = f.width), null != c && (c[0] = f.height);\n                t: {\n                    if (u = new Gt, (c = new nn).data = t, c.w = n, c.ha = s, c.kd = 1, n = [\n                        0\n                    ], e(null != c), (0 == (t = Bn(c.data, c.w, c.ha, null, null, null, n, null, c)) || 7 == t) && n[0] && (t = 4), 0 == (n = t)) {\n                        if (e(null != h), u.data = c.data, u.w = c.w + c.offset, u.ha = c.ha - c.offset, u.put = dt, u.ac = ft, u.bc = pt, u.ma = h, c.xa) {\n                            if (null == (t = kt())) {\n                                h = 1;\n                                break t;\n                            }\n                            if (function(t, n) {\n                                var r = [\n                                    0\n                                ], i = [\n                                    0\n                                ], a = [\n                                    0\n                                ];\n                                e: for(;;){\n                                    if (null == t) return 0;\n                                    if (null == n) return t.a = 2, 0;\n                                    if (t.l = n, t.a = 0, v(t.m, n.data, n.w, n.ha), !gt(t.m, r, i, a)) {\n                                        t.a = 3;\n                                        break e;\n                                    }\n                                    if (t.xb = pi, n.width = r[0], n.height = i[0], !Ft(r[0], i[0], 1, t, null)) break e;\n                                    return 1;\n                                }\n                                return e(0 != t.a), 0;\n                            }(t, u)) {\n                                if (u = 0 == (n = En(u.width, u.height, h.Oa, h.ba))) {\n                                    e: {\n                                        u = t;\n                                        n: for(;;){\n                                            if (null == u) {\n                                                u = 0;\n                                                break e;\n                                            }\n                                            if (e(null != u.s.yc), e(null != u.s.Ya), e(0 < u.s.Wb), e(null != (s = u.l)), e(null != (c = s.ma)), 0 != u.xb) {\n                                                if (u.ca = c.ba, u.tb = c.tb, e(null != u.ca), !Mn(c.Oa, s, Rr)) {\n                                                    u.a = 2;\n                                                    break n;\n                                                }\n                                                if (!It(u, s.width)) break n;\n                                                if (s.da) break n;\n                                                if ((s.da || rt(u.ca.S)) && mn(), 11 > u.ca.S || (alert(\"todo:WebPInitConvertARGBToYUV\"), null != u.ca.f.kb.F && mn()), u.Pb && 0 < u.s.ua && null == u.s.vb.X && !O(u.s.vb, u.s.Wa.Xa)) {\n                                                    u.a = 1;\n                                                    break n;\n                                                }\n                                                u.xb = 0;\n                                            }\n                                            if (!_t(u, u.V, u.Ba, u.c, u.i, s.o, Lt)) break n;\n                                            c.Dc = u.Ma, u = 1;\n                                            break e;\n                                        }\n                                        e(0 != u.a), u = 0;\n                                    }\n                                    u = !u;\n                                }\n                                u && (n = t.a);\n                            } else n = t.a;\n                        } else {\n                            if (null == (t = new Yt)) {\n                                h = 1;\n                                break t;\n                            }\n                            if (t.Fa = c.na, t.P = c.P, t.qc = c.Sa, Kt(t, u)) {\n                                if (0 == (n = En(u.width, u.height, h.Oa, h.ba))) {\n                                    if (t.Aa = 0, s = h.Oa, e(null != (c = t)), null != s) {\n                                        if (0 < (d = 0 > (d = s.Md) ? 0 : 100 < d ? 255 : 255 * d / 100)) {\n                                            for(p = g = 0; 4 > p; ++p)12 > (m = c.pb[p]).lc && (m.ia = d * Di[0 > m.lc ? 0 : m.lc] >> 3), g |= m.ia;\n                                            g && (alert(\"todo:VP8InitRandom\"), c.ia = 1);\n                                        }\n                                        c.Ga = s.Id, 100 < c.Ga ? c.Ga = 100 : 0 > c.Ga && (c.Ga = 0);\n                                    }\n                                    (function(t, n) {\n                                        if (null == t) return 0;\n                                        if (null == n) return Jt(t, 2, \"NULL VP8Io parameter in VP8Decode().\");\n                                        if (!t.cb && !Kt(t, n)) return 0;\n                                        if (e(t.cb), null == n.ac || n.ac(n)) {\n                                            n.ob && (t.L = 0);\n                                            var s = Ri[t.L];\n                                            if (2 == t.L ? (t.yb = 0, t.zb = 0) : (t.yb = n.v - s >> 4, t.zb = n.j - s >> 4, 0 > t.yb && (t.yb = 0), 0 > t.zb && (t.zb = 0)), t.Va = n.o + 15 + s >> 4, t.Hb = n.va + 15 + s >> 4, t.Hb > t.za && (t.Hb = t.za), t.Va > t.Ub && (t.Va = t.Ub), 0 < t.L) {\n                                                var u = t.ed;\n                                                for(s = 0; 4 > s; ++s){\n                                                    var c;\n                                                    if (t.Qa.Cb) {\n                                                        var l = t.Qa.Lb[s];\n                                                        t.Qa.Fb || (l += u.Tb);\n                                                    } else l = u.Tb;\n                                                    for(c = 0; 1 >= c; ++c){\n                                                        var h = t.gd[s][c], f = l;\n                                                        if (u.Pc && (f += u.vd[0], c && (f += u.od[0])), 0 < (f = 0 > f ? 0 : 63 < f ? 63 : f)) {\n                                                            var d = f;\n                                                            0 < u.wb && (d = 4 < u.wb ? d >> 2 : d >> 1) > 9 - u.wb && (d = 9 - u.wb), 1 > d && (d = 1), h.dd = d, h.tc = 2 * f + d, h.ld = 40 <= f ? 2 : 15 <= f ? 1 : 0;\n                                                        } else h.tc = 0;\n                                                        h.La = c;\n                                                    }\n                                                }\n                                            }\n                                            s = 0;\n                                        } else Jt(t, 6, \"Frame setup failed\"), s = t.a;\n                                        if (s = 0 == s) {\n                                            if (s) {\n                                                t.$c = 0, 0 < t.Aa || (t.Ic = Ti);\n                                                e: {\n                                                    s = t.Ic, u = 4 * (d = t.za);\n                                                    var p = 32 * d, g = d + 1, m = 0 < t.L ? d * (0 < t.Aa ? 2 : 1) : 0, v = (2 == t.Aa ? 2 : 1) * d;\n                                                    if ((h = u + 832 + (c = 3 * (16 * s + Ri[t.L]) / 2 * p) + (l = null != t.Fa && 0 < t.Fa.length ? t.Kc.c * t.Kc.i : 0)) != h) s = 0;\n                                                    else {\n                                                        if (h > t.Vb) {\n                                                            if (t.Vb = 0, t.Ec = a(h), t.Fc = 0, null == t.Ec) {\n                                                                s = Jt(t, 1, \"no memory during frame initialization.\");\n                                                                break e;\n                                                            }\n                                                            t.Vb = h;\n                                                        }\n                                                        h = t.Ec, f = t.Fc, t.Ac = h, t.Bc = f, f += u, t.Gd = o(p, Ht), t.Hd = 0, t.rb = o(g + 1, Dt), t.sb = 1, t.wa = m ? o(m, Rt) : null, t.Y = 0, t.D.Nb = 0, t.D.wa = t.wa, t.D.Y = t.Y, 0 < t.Aa && (t.D.Y += d), e(!0), t.oc = h, t.pc = f, f += 832, t.ya = o(v, zt), t.aa = 0, t.D.ya = t.ya, t.D.aa = t.aa, 2 == t.Aa && (t.D.aa += d), t.R = 16 * d, t.B = 8 * d, d = (p = Ri[t.L]) * t.R, p = p / 2 * t.B, t.sa = h, t.ta = f + d, t.qa = t.sa, t.ra = t.ta + 16 * s * t.R + p, t.Ha = t.qa, t.Ia = t.ra + 8 * s * t.B + p, t.$c = 0, f += c, t.mb = l ? h : null, t.nb = l ? f : null, e(f + l <= t.Fc + t.Vb), $t(t), i(t.Ac, t.Bc, 0, u), s = 1;\n                                                    }\n                                                }\n                                                if (s) {\n                                                    if (n.ka = 0, n.y = t.sa, n.O = t.ta, n.f = t.qa, n.N = t.ra, n.ea = t.Ha, n.Vd = t.Ia, n.fa = t.R, n.Rc = t.B, n.F = null, n.J = 0, !Ir) {\n                                                        for(s = -255; 255 >= s; ++s)_r[255 + s] = 0 > s ? -s : s;\n                                                        for(s = -1020; 1020 >= s; ++s)Pr[1020 + s] = -128 > s ? -128 : 127 < s ? 127 : s;\n                                                        for(s = -112; 112 >= s; ++s)kr[112 + s] = -16 > s ? -16 : 15 < s ? 15 : s;\n                                                        for(s = -255; 510 >= s; ++s)Fr[255 + s] = 0 > s ? 0 : 255 < s ? 255 : s;\n                                                        Ir = 1;\n                                                    }\n                                                    ir = ue, ar = ie, sr = ae, ur = oe, cr = se, or = re, lr = Ye, hr = Je, fr = Ze, dr = $e, pr = Xe, gr = Ke, mr = Qe, vr = tn, br = ze, yr = Ue, wr = He, Nr = We, hi[0] = xe, hi[1] = le, hi[2] = Ne, hi[3] = Le, hi[4] = Ae, hi[5] = _e, hi[6] = Se, hi[7] = Pe, hi[8] = Fe, hi[9] = ke, li[0] = me, li[1] = fe, li[2] = de, li[3] = pe, li[4] = ve, li[5] = be, li[6] = ye, fi[0] = Oe, fi[1] = he, fi[2] = Ie, fi[3] = je, fi[4] = Me, fi[5] = Be, fi[6] = qe, s = 1;\n                                                } else s = 0;\n                                            }\n                                            s && (s = function(t, n) {\n                                                for(t.M = 0; t.M < t.Va; ++t.M){\n                                                    var o, s = t.Jc[t.M & t.Xb], u = t.m, c = t;\n                                                    for(o = 0; o < c.za; ++o){\n                                                        var l = u, h = c, f = h.Ac, d = h.Bc + 4 * o, p = h.zc, g = h.ya[h.aa + o];\n                                                        if (h.Qa.Bb ? g.$b = k(l, h.Pa.jb[0]) ? 2 + k(l, h.Pa.jb[2]) : k(l, h.Pa.jb[1]) : g.$b = 0, h.kc && (g.Ad = k(l, h.Bd)), g.Za = !k(l, 145) + 0, g.Za) {\n                                                            var m = g.Ob, v = 0;\n                                                            for(h = 0; 4 > h; ++h){\n                                                                var b, y = p[0 + h];\n                                                                for(b = 0; 4 > b; ++b){\n                                                                    y = si[f[d + b]][y];\n                                                                    for(var w = ai[k(l, y[0])]; 0 < w;)w = ai[2 * w + k(l, y[w])];\n                                                                    y = -w, f[d + b] = y;\n                                                                }\n                                                                r(m, v, f, d, 4), v += 4, p[0 + h] = y;\n                                                            }\n                                                        } else y = k(l, 156) ? k(l, 128) ? 1 : 3 : k(l, 163) ? 2 : 0, g.Ob[0] = y, i(f, d, y, 4), i(p, 0, y, 4);\n                                                        g.Dd = k(l, 142) ? k(l, 114) ? k(l, 183) ? 1 : 3 : 2 : 0;\n                                                    }\n                                                    if (c.m.Ka) return Jt(t, 7, \"Premature end-of-partition0 encountered.\");\n                                                    for(; t.ja < t.za; ++t.ja){\n                                                        if (c = s, l = (u = t).rb[u.sb - 1], f = u.rb[u.sb + u.ja], o = u.ya[u.aa + u.ja], d = u.kc ? o.Ad : 0) l.la = f.la = 0, o.Za || (l.Na = f.Na = 0), o.Hc = 0, o.Gc = 0, o.ia = 0;\n                                                        else {\n                                                            var N, L;\n                                                            if (l = f, f = c, d = u.Pa.Xc, p = u.ya[u.aa + u.ja], g = u.pb[p.$b], h = p.ad, m = 0, v = u.rb[u.sb - 1], y = b = 0, i(h, m, 0, 384), p.Za) var x = 0, A = d[3];\n                                                            else {\n                                                                w = a(16);\n                                                                var S = l.Na + v.Na;\n                                                                if (S = ni(f, d[1], S, g.Eb, 0, w, 0), l.Na = v.Na = (0 < S) + 0, 1 < S) ir(w, 0, h, m);\n                                                                else {\n                                                                    var _ = w[0] + 3 >> 3;\n                                                                    for(w = 0; 256 > w; w += 16)h[m + w] = _;\n                                                                }\n                                                                x = 1, A = d[0];\n                                                            }\n                                                            var P = 15 & l.la, F = 15 & v.la;\n                                                            for(w = 0; 4 > w; ++w){\n                                                                var I = 1 & F;\n                                                                for(_ = L = 0; 4 > _; ++_)P = P >> 1 | (I = (S = ni(f, A, S = I + (1 & P), g.Sc, x, h, m)) > x) << 7, L = L << 2 | (3 < S ? 3 : 1 < S ? 2 : 0 != h[m + 0]), m += 16;\n                                                                P >>= 4, F = F >> 1 | I << 7, b = (b << 8 | L) >>> 0;\n                                                            }\n                                                            for(A = P, x = F >> 4, N = 0; 4 > N; N += 2){\n                                                                for(L = 0, P = l.la >> 4 + N, F = v.la >> 4 + N, w = 0; 2 > w; ++w){\n                                                                    for(I = 1 & F, _ = 0; 2 > _; ++_)S = I + (1 & P), P = P >> 1 | (I = 0 < (S = ni(f, d[2], S, g.Qc, 0, h, m))) << 3, L = L << 2 | (3 < S ? 3 : 1 < S ? 2 : 0 != h[m + 0]), m += 16;\n                                                                    P >>= 2, F = F >> 1 | I << 5;\n                                                                }\n                                                                y |= L << 4 * N, A |= P << 4 << N, x |= (240 & F) << N;\n                                                            }\n                                                            l.la = A, v.la = x, p.Hc = b, p.Gc = y, p.ia = 43690 & y ? 0 : g.ia, d = !(b | y);\n                                                        }\n                                                        if (0 < u.L && (u.wa[u.Y + u.ja] = u.gd[o.$b][o.Za], u.wa[u.Y + u.ja].La |= !d), c.Ka) return Jt(t, 7, \"Premature end-of-file encountered.\");\n                                                    }\n                                                    if ($t(t), u = n, c = 1, o = (s = t).D, l = 0 < s.L && s.M >= s.zb && s.M <= s.Va, 0 == s.Aa) e: {\n                                                        if (o.M = s.M, o.uc = l, On(s, o), c = 1, o = (L = s.D).Nb, l = (y = Ri[s.L]) * s.R, f = y / 2 * s.B, w = 16 * o * s.R, _ = 8 * o * s.B, d = s.sa, p = s.ta - l + w, g = s.qa, h = s.ra - f + _, m = s.Ha, v = s.Ia - f + _, F = 0 == (P = L.M), b = P >= s.Va - 1, 2 == s.Aa && On(s, L), L.uc) for(I = (S = s).D.M, e(S.D.uc), L = S.yb; L < S.Hb; ++L){\n                                                            x = L, A = I;\n                                                            var j = (C = (z = S).D).Nb;\n                                                            N = z.R;\n                                                            var C = C.wa[C.Y + x], O = z.sa, B = z.ta + 16 * j * N + 16 * x, M = C.dd, q = C.tc;\n                                                            if (0 != q) if (e(3 <= q), 1 == z.L) 0 < x && yr(O, B, N, q + 4), C.La && Nr(O, B, N, q), 0 < A && br(O, B, N, q + 4), C.La && wr(O, B, N, q);\n                                                            else {\n                                                                var E = z.B, R = z.qa, D = z.ra + 8 * j * E + 8 * x, T = z.Ha, z = z.Ia + 8 * j * E + 8 * x;\n                                                                j = C.ld, 0 < x && (hr(O, B, N, q + 4, M, j), dr(R, D, T, z, E, q + 4, M, j)), C.La && (gr(O, B, N, q, M, j), vr(R, D, T, z, E, q, M, j)), 0 < A && (lr(O, B, N, q + 4, M, j), fr(R, D, T, z, E, q + 4, M, j)), C.La && (pr(O, B, N, q, M, j), mr(R, D, T, z, E, q, M, j));\n                                                            }\n                                                        }\n                                                        if (s.ia && alert(\"todo:DitherRow\"), null != u.put) {\n                                                            if (L = 16 * P, P = 16 * (P + 1), F ? (u.y = s.sa, u.O = s.ta + w, u.f = s.qa, u.N = s.ra + _, u.ea = s.Ha, u.W = s.Ia + _) : (L -= y, u.y = d, u.O = p, u.f = g, u.N = h, u.ea = m, u.W = v), b || (P -= y), P > u.o && (P = u.o), u.F = null, u.J = null, null != s.Fa && 0 < s.Fa.length && L < P && (u.J = hn(s, u, L, P - L), u.F = s.mb, null == u.F && 0 == u.F.length)) {\n                                                                c = Jt(s, 3, \"Could not decode alpha data.\");\n                                                                break e;\n                                                            }\n                                                            L < u.j && (y = u.j - L, L = u.j, e(!(1 & y)), u.O += s.R * y, u.N += s.B * (y >> 1), u.W += s.B * (y >> 1), null != u.F && (u.J += u.width * y)), L < P && (u.O += u.v, u.N += u.v >> 1, u.W += u.v >> 1, null != u.F && (u.J += u.v), u.ka = L - u.j, u.U = u.va - u.v, u.T = P - L, c = u.put(u));\n                                                        }\n                                                        o + 1 != s.Ic || b || (r(s.sa, s.ta - l, d, p + 16 * s.R, l), r(s.qa, s.ra - f, g, h + 8 * s.B, f), r(s.Ha, s.Ia - f, m, v + 8 * s.B, f));\n                                                    }\n                                                    if (!c) return Jt(t, 6, \"Output aborted.\");\n                                                }\n                                                return 1;\n                                            }(t, n)), null != n.bc && n.bc(n), s &= 1;\n                                        }\n                                        return s ? (t.cb = 0, s) : 0;\n                                    })(t, u) || (n = t.a);\n                                }\n                            } else n = t.a;\n                        }\n                        0 == n && null != h.Oa && h.Oa.fd && (n = qn(h.ba));\n                    }\n                    h = n;\n                }\n                l = 0 != h ? null : 11 > l ? f.f.RGBA.eb : f.f.kb.y;\n            } else l = null;\n            return l;\n        };\n        var zi = [\n            3,\n            4,\n            3,\n            4,\n            4,\n            2,\n            2,\n            4,\n            4,\n            4,\n            2,\n            1,\n            1\n        ];\n    };\n    function c(t, e) {\n        for(var n = \"\", r = 0; r < 4; r++)n += String.fromCharCode(t[e++]);\n        return n;\n    }\n    function l(t, e) {\n        return t[e + 0] | t[e + 1] << 8;\n    }\n    function h(t, e) {\n        return (t[e + 0] | t[e + 1] << 8 | t[e + 2] << 16) >>> 0;\n    }\n    function f(t, e) {\n        return (t[e + 0] | t[e + 1] << 8 | t[e + 2] << 16 | t[e + 3] << 24) >>> 0;\n    }\n    new u;\n    var d = [\n        0\n    ], p = [\n        0\n    ], g = [], m = new u, v = t, b = function(t, e) {\n        var n = {}, r = 0, i = !1, a = 0, o = 0;\n        if (n.frames = [], !/** @license\n   * Copyright (c) 2017 Dominik Homberger\n  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n  https://webpjs.appspot.com\n  WebPRiffParser dominikhlbg@gmail.com\n  */ function(t, e) {\n            for(var n = 0; n < 4; n++)if (t[e + n] != \"RIFF\".charCodeAt(n)) return !0;\n            return !1;\n        }(t, e)) {\n            for(f(t, e += 4), e += 8; e < t.length;){\n                var s = c(t, e), u = f(t, e += 4);\n                e += 4;\n                var d = u + (1 & u);\n                switch(s){\n                    case \"VP8 \":\n                    case \"VP8L\":\n                        void 0 === n.frames[r] && (n.frames[r] = {}), (m = n.frames[r]).src_off = i ? o : e - 8, m.src_size = a + u + 8, r++, i && (i = !1, a = 0, o = 0);\n                        break;\n                    case \"VP8X\":\n                        (m = n.header = {}).feature_flags = t[e];\n                        var p = e + 4;\n                        m.canvas_width = 1 + h(t, p), p += 3, m.canvas_height = 1 + h(t, p), p += 3;\n                        break;\n                    case \"ALPH\":\n                        i = !0, a = d + 8, o = e - 8;\n                        break;\n                    case \"ANIM\":\n                        (m = n.header).bgcolor = f(t, e), p = e + 4, m.loop_count = l(t, p), p += 2;\n                        break;\n                    case \"ANMF\":\n                        var g, m;\n                        (m = n.frames[r] = {}).offset_x = 2 * h(t, e), e += 3, m.offset_y = 2 * h(t, e), e += 3, m.width = 1 + h(t, e), e += 3, m.height = 1 + h(t, e), e += 3, m.duration = h(t, e), e += 3, g = t[e++], m.dispose = 1 & g, m.blend = g >> 1 & 1;\n                }\n                \"ANMF\" != s && (e += d);\n            }\n            return n;\n        }\n    }(v, 0);\n    b.response = v, b.rgbaoutput = !0, b.dataurl = !1;\n    var y = b.header ? b.header : null, w = b.frames ? b.frames : null;\n    if (y) {\n        y.loop_counter = y.loop_count, d = [\n            y.canvas_height\n        ], p = [\n            y.canvas_width\n        ];\n        for(var N = 0; N < w.length && 0 != w[N].blend; N++);\n    }\n    var L = w[0], x = m.WebPDecodeRGBA(v, L.src_off, L.src_size, p, d);\n    L.rgba = x, L.imgwidth = p[0], L.imgheight = d[0];\n    for(var A = 0; A < p[0] * d[0] * 4; A++)g[A] = x[A];\n    return this.width = p, this.height = d, this.data = g, this;\n}\n!function(e) {\n    var n, r, i, a, s, u, c, l, f, d = function(t) {\n        return t = t || {}, this.isStrokeTransparent = t.isStrokeTransparent || !1, this.strokeOpacity = t.strokeOpacity || 1, this.strokeStyle = t.strokeStyle || \"#000000\", this.fillStyle = t.fillStyle || \"#000000\", this.isFillTransparent = t.isFillTransparent || !1, this.fillOpacity = t.fillOpacity || 1, this.font = t.font || \"10px sans-serif\", this.textBaseline = t.textBaseline || \"alphabetic\", this.textAlign = t.textAlign || \"left\", this.lineWidth = t.lineWidth || 1, this.lineJoin = t.lineJoin || \"miter\", this.lineCap = t.lineCap || \"butt\", this.path = t.path || [], this.transform = void 0 !== t.transform ? t.transform.clone() : new l, this.globalCompositeOperation = t.globalCompositeOperation || \"normal\", this.globalAlpha = t.globalAlpha || 1, this.clip_path = t.clip_path || [], this.currentPoint = t.currentPoint || new u, this.miterLimit = t.miterLimit || 10, this.lastPoint = t.lastPoint || new u, this.lineDashOffset = t.lineDashOffset || 0, this.lineDash = t.lineDash || [], this.margin = t.margin || [\n            0,\n            0,\n            0,\n            0\n        ], this.prevPageLastElemOffset = t.prevPageLastElemOffset || 0, this.ignoreClearRect = \"boolean\" != typeof t.ignoreClearRect || t.ignoreClearRect, this;\n    };\n    e.events.push([\n        \"initialized\",\n        function() {\n            this.context2d = new p(this), n = this.internal.f2, r = this.internal.getCoordinateString, i = this.internal.getVerticalCoordinateString, a = this.internal.getHorizontalCoordinate, s = this.internal.getVerticalCoordinate, u = this.internal.Point, c = this.internal.Rectangle, l = this.internal.Matrix, f = new d;\n        }\n    ]);\n    var p = function(t) {\n        Object.defineProperty(this, \"canvas\", {\n            get: function() {\n                return {\n                    parentNode: !1,\n                    style: !1\n                };\n            }\n        });\n        var e = t;\n        Object.defineProperty(this, \"pdf\", {\n            get: function() {\n                return e;\n            }\n        });\n        var n = !1;\n        Object.defineProperty(this, \"pageWrapXEnabled\", {\n            get: function() {\n                return n;\n            },\n            set: function(t) {\n                n = Boolean(t);\n            }\n        });\n        var r = !1;\n        Object.defineProperty(this, \"pageWrapYEnabled\", {\n            get: function() {\n                return r;\n            },\n            set: function(t) {\n                r = Boolean(t);\n            }\n        });\n        var i = 0;\n        Object.defineProperty(this, \"posX\", {\n            get: function() {\n                return i;\n            },\n            set: function(t) {\n                isNaN(t) || (i = t);\n            }\n        });\n        var a = 0;\n        Object.defineProperty(this, \"posY\", {\n            get: function() {\n                return a;\n            },\n            set: function(t) {\n                isNaN(t) || (a = t);\n            }\n        }), Object.defineProperty(this, \"margin\", {\n            get: function() {\n                return f.margin;\n            },\n            set: function(t) {\n                var e;\n                \"number\" == typeof t ? e = [\n                    t,\n                    t,\n                    t,\n                    t\n                ] : ((e = new Array(4))[0] = t[0], e[1] = t.length >= 2 ? t[1] : e[0], e[2] = t.length >= 3 ? t[2] : e[0], e[3] = t.length >= 4 ? t[3] : e[1]), f.margin = e;\n            }\n        });\n        var o = !1;\n        Object.defineProperty(this, \"autoPaging\", {\n            get: function() {\n                return o;\n            },\n            set: function(t) {\n                o = t;\n            }\n        });\n        var s = 0;\n        Object.defineProperty(this, \"lastBreak\", {\n            get: function() {\n                return s;\n            },\n            set: function(t) {\n                s = t;\n            }\n        });\n        var u = [];\n        Object.defineProperty(this, \"pageBreaks\", {\n            get: function() {\n                return u;\n            },\n            set: function(t) {\n                u = t;\n            }\n        }), Object.defineProperty(this, \"ctx\", {\n            get: function() {\n                return f;\n            },\n            set: function(t) {\n                t instanceof d && (f = t);\n            }\n        }), Object.defineProperty(this, \"path\", {\n            get: function() {\n                return f.path;\n            },\n            set: function(t) {\n                f.path = t;\n            }\n        });\n        var c = [];\n        Object.defineProperty(this, \"ctxStack\", {\n            get: function() {\n                return c;\n            },\n            set: function(t) {\n                c = t;\n            }\n        }), Object.defineProperty(this, \"fillStyle\", {\n            get: function() {\n                return this.ctx.fillStyle;\n            },\n            set: function(t) {\n                var e;\n                e = g(t), this.ctx.fillStyle = e.style, this.ctx.isFillTransparent = 0 === e.a, this.ctx.fillOpacity = e.a, this.pdf.setFillColor(e.r, e.g, e.b, {\n                    a: e.a\n                }), this.pdf.setTextColor(e.r, e.g, e.b, {\n                    a: e.a\n                });\n            }\n        }), Object.defineProperty(this, \"strokeStyle\", {\n            get: function() {\n                return this.ctx.strokeStyle;\n            },\n            set: function(t) {\n                var e = g(t);\n                this.ctx.strokeStyle = e.style, this.ctx.isStrokeTransparent = 0 === e.a, this.ctx.strokeOpacity = e.a, 0 === e.a ? this.pdf.setDrawColor(255, 255, 255) : (e.a, this.pdf.setDrawColor(e.r, e.g, e.b));\n            }\n        }), Object.defineProperty(this, \"lineCap\", {\n            get: function() {\n                return this.ctx.lineCap;\n            },\n            set: function(t) {\n                -1 !== [\n                    \"butt\",\n                    \"round\",\n                    \"square\"\n                ].indexOf(t) && (this.ctx.lineCap = t, this.pdf.setLineCap(t));\n            }\n        }), Object.defineProperty(this, \"lineWidth\", {\n            get: function() {\n                return this.ctx.lineWidth;\n            },\n            set: function(t) {\n                isNaN(t) || (this.ctx.lineWidth = t, this.pdf.setLineWidth(t));\n            }\n        }), Object.defineProperty(this, \"lineJoin\", {\n            get: function() {\n                return this.ctx.lineJoin;\n            },\n            set: function(t) {\n                -1 !== [\n                    \"bevel\",\n                    \"round\",\n                    \"miter\"\n                ].indexOf(t) && (this.ctx.lineJoin = t, this.pdf.setLineJoin(t));\n            }\n        }), Object.defineProperty(this, \"miterLimit\", {\n            get: function() {\n                return this.ctx.miterLimit;\n            },\n            set: function(t) {\n                isNaN(t) || (this.ctx.miterLimit = t, this.pdf.setMiterLimit(t));\n            }\n        }), Object.defineProperty(this, \"textBaseline\", {\n            get: function() {\n                return this.ctx.textBaseline;\n            },\n            set: function(t) {\n                this.ctx.textBaseline = t;\n            }\n        }), Object.defineProperty(this, \"textAlign\", {\n            get: function() {\n                return this.ctx.textAlign;\n            },\n            set: function(t) {\n                -1 !== [\n                    \"right\",\n                    \"end\",\n                    \"center\",\n                    \"left\",\n                    \"start\"\n                ].indexOf(t) && (this.ctx.textAlign = t);\n            }\n        });\n        var l = null;\n        var h = null;\n        Object.defineProperty(this, \"fontFaces\", {\n            get: function() {\n                return h;\n            },\n            set: function(t) {\n                l = null, h = t;\n            }\n        }), Object.defineProperty(this, \"font\", {\n            get: function() {\n                return this.ctx.font;\n            },\n            set: function(t) {\n                var e;\n                if (this.ctx.font = t, null !== (e = /^\\s*(?=(?:(?:[-a-z]+\\s*){0,2}(italic|oblique))?)(?=(?:(?:[-a-z]+\\s*){0,2}(small-caps))?)(?=(?:(?:[-a-z]+\\s*){0,2}(bold(?:er)?|lighter|[1-9]00))?)(?:(?:normal|\\1|\\2|\\3)\\s*){0,3}((?:xx?-)?(?:small|large)|medium|smaller|larger|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx]))(?:\\s*\\/\\s*(normal|[.\\d]+(?:\\%|in|[cem]m|ex|p[ctx])))?\\s*([-_,\\\"\\'\\sa-z]+?)\\s*$/i.exec(t))) {\n                    var n = e[1];\n                    e[2];\n                    var r = e[3], i = e[4];\n                    e[5];\n                    var a = e[6], o = /^([.\\d]+)((?:%|in|[cem]m|ex|p[ctx]))$/i.exec(i)[2];\n                    i = \"px\" === o ? Math.floor(parseFloat(i) * this.pdf.internal.scaleFactor) : \"em\" === o ? Math.floor(parseFloat(i) * this.pdf.getFontSize()) : Math.floor(parseFloat(i) * this.pdf.internal.scaleFactor), this.pdf.setFontSize(i);\n                    var s = function(t) {\n                        var e, n, r = [], i = t.trim();\n                        if (\"\" === i) return Jt;\n                        if (i in Mt) return [\n                            Mt[i]\n                        ];\n                        for(; \"\" !== i;){\n                            switch(n = null, e = (i = Et(i)).charAt(0)){\n                                case '\"':\n                                case \"'\":\n                                    n = Rt(i.substring(1), e);\n                                    break;\n                                default:\n                                    n = Dt(i);\n                            }\n                            if (null === n) return Jt;\n                            if (r.push(n[0]), \"\" !== (i = Et(n[1])) && \",\" !== i.charAt(0)) return Jt;\n                            i = i.replace(/^,/, \"\");\n                        }\n                        return r;\n                    }(a);\n                    if (this.fontFaces) {\n                        var u = function(t, e) {\n                            if (null === l) {\n                                var n = function(t) {\n                                    var e = [];\n                                    return Object.keys(t).forEach(function(n) {\n                                        t[n].forEach(function(t) {\n                                            var r = null;\n                                            switch(t){\n                                                case \"bold\":\n                                                    r = {\n                                                        family: n,\n                                                        weight: \"bold\"\n                                                    };\n                                                    break;\n                                                case \"italic\":\n                                                    r = {\n                                                        family: n,\n                                                        style: \"italic\"\n                                                    };\n                                                    break;\n                                                case \"bolditalic\":\n                                                    r = {\n                                                        family: n,\n                                                        weight: \"bold\",\n                                                        style: \"italic\"\n                                                    };\n                                                    break;\n                                                case \"\":\n                                                case \"normal\":\n                                                    r = {\n                                                        family: n\n                                                    };\n                                            }\n                                            null !== r && (r.ref = {\n                                                name: n,\n                                                style: t\n                                            }, e.push(r));\n                                        });\n                                    }), e;\n                                }(t.getFontList());\n                                l = function(t) {\n                                    for(var e = {}, n = 0; n < t.length; ++n){\n                                        var r = Ct(t[n]), i = r.family, a = r.stretch, o = r.style, s = r.weight;\n                                        e[i] = e[i] || {}, e[i][a] = e[i][a] || {}, e[i][a][o] = e[i][a][o] || {}, e[i][a][o][s] = r;\n                                    }\n                                    return e;\n                                }(n.concat(e));\n                            }\n                            return l;\n                        }(this.pdf, this.fontFaces), c = s.map(function(t) {\n                            return {\n                                family: t,\n                                stretch: \"normal\",\n                                weight: r,\n                                style: n\n                            };\n                        }), h = function(t, e, n) {\n                            for(var r = (n = n || {}).defaultFontFamily || \"times\", i = Object.assign({}, Bt, n.genericFontFamilies || {}), a = null, o = null, s = 0; s < e.length; ++s)if (i[(a = Ct(e[s])).family] && (a.family = i[a.family]), t.hasOwnProperty(a.family)) {\n                                o = t[a.family];\n                                break;\n                            }\n                            if (!(o = o || t[r])) throw new Error(\"Could not find a font-family for the rule '\" + qt(a) + \"' and default family '\" + r + \"'.\");\n                            if (o = function(t, e) {\n                                if (e[t]) return e[t];\n                                var n = Ft[t], r = n <= Ft.normal ? -1 : 1, i = Ot(e, kt, n, r);\n                                if (!i) throw new Error(\"Could not find a matching font-stretch value for \" + t);\n                                return i;\n                            }(a.stretch, o), o = function(t, e) {\n                                if (e[t]) return e[t];\n                                for(var n = Pt[t], r = 0; r < n.length; ++r)if (e[n[r]]) return e[n[r]];\n                                throw new Error(\"Could not find a matching font-style for \" + t);\n                            }(a.style, o), !(o = function(t, e) {\n                                if (e[t]) return e[t];\n                                if (400 === t && e[500]) return e[500];\n                                if (500 === t && e[400]) return e[400];\n                                var n = jt[t], r = Ot(e, It, n, t < 400 ? -1 : 1);\n                                if (!r) throw new Error(\"Could not find a matching font-weight for value \" + t);\n                                return r;\n                            }(a.weight, o))) throw new Error(\"Failed to resolve a font for the rule '\" + qt(a) + \"'.\");\n                            return o;\n                        }(u, c);\n                        this.pdf.setFont(h.ref.name, h.ref.style);\n                    } else {\n                        var f = \"\";\n                        (\"bold\" === r || parseInt(r, 10) >= 700 || \"bold\" === n) && (f = \"bold\"), \"italic\" === n && (f += \"italic\"), 0 === f.length && (f = \"normal\");\n                        for(var d = \"\", p = {\n                            arial: \"Helvetica\",\n                            Arial: \"Helvetica\",\n                            verdana: \"Helvetica\",\n                            Verdana: \"Helvetica\",\n                            helvetica: \"Helvetica\",\n                            Helvetica: \"Helvetica\",\n                            \"sans-serif\": \"Helvetica\",\n                            fixed: \"Courier\",\n                            monospace: \"Courier\",\n                            terminal: \"Courier\",\n                            cursive: \"Times\",\n                            fantasy: \"Times\",\n                            serif: \"Times\"\n                        }, g = 0; g < s.length; g++){\n                            if (void 0 !== this.pdf.internal.getFont(s[g], f, {\n                                noFallback: !0,\n                                disableWarning: !0\n                            })) {\n                                d = s[g];\n                                break;\n                            }\n                            if (\"bolditalic\" === f && void 0 !== this.pdf.internal.getFont(s[g], \"bold\", {\n                                noFallback: !0,\n                                disableWarning: !0\n                            })) d = s[g], f = \"bold\";\n                            else if (void 0 !== this.pdf.internal.getFont(s[g], \"normal\", {\n                                noFallback: !0,\n                                disableWarning: !0\n                            })) {\n                                d = s[g], f = \"normal\";\n                                break;\n                            }\n                        }\n                        if (\"\" === d) {\n                            for(var m = 0; m < s.length; m++)if (p[s[m]]) {\n                                d = p[s[m]];\n                                break;\n                            }\n                        }\n                        d = \"\" === d ? \"Times\" : d, this.pdf.setFont(d, f);\n                    }\n                }\n            }\n        }), Object.defineProperty(this, \"globalCompositeOperation\", {\n            get: function() {\n                return this.ctx.globalCompositeOperation;\n            },\n            set: function(t) {\n                this.ctx.globalCompositeOperation = t;\n            }\n        }), Object.defineProperty(this, \"globalAlpha\", {\n            get: function() {\n                return this.ctx.globalAlpha;\n            },\n            set: function(t) {\n                this.ctx.globalAlpha = t;\n            }\n        }), Object.defineProperty(this, \"lineDashOffset\", {\n            get: function() {\n                return this.ctx.lineDashOffset;\n            },\n            set: function(t) {\n                this.ctx.lineDashOffset = t, T.call(this);\n            }\n        }), Object.defineProperty(this, \"lineDash\", {\n            get: function() {\n                return this.ctx.lineDash;\n            },\n            set: function(t) {\n                this.ctx.lineDash = t, T.call(this);\n            }\n        }), Object.defineProperty(this, \"ignoreClearRect\", {\n            get: function() {\n                return this.ctx.ignoreClearRect;\n            },\n            set: function(t) {\n                this.ctx.ignoreClearRect = Boolean(t);\n            }\n        });\n    };\n    p.prototype.setLineDash = function(t) {\n        this.lineDash = t;\n    }, p.prototype.getLineDash = function() {\n        return this.lineDash.length % 2 ? this.lineDash.concat(this.lineDash) : this.lineDash.slice();\n    }, p.prototype.fill = function() {\n        x.call(this, \"fill\", !1);\n    }, p.prototype.stroke = function() {\n        x.call(this, \"stroke\", !1);\n    }, p.prototype.beginPath = function() {\n        this.path = [\n            {\n                type: \"begin\"\n            }\n        ];\n    }, p.prototype.moveTo = function(t, e) {\n        if (isNaN(t) || isNaN(e)) throw o.error(\"jsPDF.context2d.moveTo: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.moveTo\");\n        var n = this.ctx.transform.applyToPoint(new u(t, e));\n        this.path.push({\n            type: \"mt\",\n            x: n.x,\n            y: n.y\n        }), this.ctx.lastPoint = new u(t, e);\n    }, p.prototype.closePath = function() {\n        var e = new u(0, 0), n = 0;\n        for(n = this.path.length - 1; -1 !== n; n--)if (\"begin\" === this.path[n].type && \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(this.path[n + 1]) && \"number\" == typeof this.path[n + 1].x) {\n            e = new u(this.path[n + 1].x, this.path[n + 1].y);\n            break;\n        }\n        this.path.push({\n            type: \"close\"\n        }), this.ctx.lastPoint = new u(e.x, e.y);\n    }, p.prototype.lineTo = function(t, e) {\n        if (isNaN(t) || isNaN(e)) throw o.error(\"jsPDF.context2d.lineTo: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.lineTo\");\n        var n = this.ctx.transform.applyToPoint(new u(t, e));\n        this.path.push({\n            type: \"lt\",\n            x: n.x,\n            y: n.y\n        }), this.ctx.lastPoint = new u(n.x, n.y);\n    }, p.prototype.clip = function() {\n        this.ctx.clip_path = JSON.parse(JSON.stringify(this.path)), x.call(this, null, !0);\n    }, p.prototype.quadraticCurveTo = function(t, e, n, r) {\n        if (isNaN(n) || isNaN(r) || isNaN(t) || isNaN(e)) throw o.error(\"jsPDF.context2d.quadraticCurveTo: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.quadraticCurveTo\");\n        var i = this.ctx.transform.applyToPoint(new u(n, r)), a = this.ctx.transform.applyToPoint(new u(t, e));\n        this.path.push({\n            type: \"qct\",\n            x1: a.x,\n            y1: a.y,\n            x: i.x,\n            y: i.y\n        }), this.ctx.lastPoint = new u(i.x, i.y);\n    }, p.prototype.bezierCurveTo = function(t, e, n, r, i, a) {\n        if (isNaN(i) || isNaN(a) || isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw o.error(\"jsPDF.context2d.bezierCurveTo: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.bezierCurveTo\");\n        var s = this.ctx.transform.applyToPoint(new u(i, a)), c = this.ctx.transform.applyToPoint(new u(t, e)), l = this.ctx.transform.applyToPoint(new u(n, r));\n        this.path.push({\n            type: \"bct\",\n            x1: c.x,\n            y1: c.y,\n            x2: l.x,\n            y2: l.y,\n            x: s.x,\n            y: s.y\n        }), this.ctx.lastPoint = new u(s.x, s.y);\n    }, p.prototype.arc = function(t, e, n, r, i, a) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || isNaN(i)) throw o.error(\"jsPDF.context2d.arc: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.arc\");\n        if (a = Boolean(a), !this.ctx.transform.isIdentity) {\n            var s = this.ctx.transform.applyToPoint(new u(t, e));\n            t = s.x, e = s.y;\n            var c = this.ctx.transform.applyToPoint(new u(0, n)), l = this.ctx.transform.applyToPoint(new u(0, 0));\n            n = Math.sqrt(Math.pow(c.x - l.x, 2) + Math.pow(c.y - l.y, 2));\n        }\n        Math.abs(i - r) >= 2 * Math.PI && (r = 0, i = 2 * Math.PI), this.path.push({\n            type: \"arc\",\n            x: t,\n            y: e,\n            radius: n,\n            startAngle: r,\n            endAngle: i,\n            counterclockwise: a\n        });\n    }, p.prototype.arcTo = function(t, e, n, r, i) {\n        throw new Error(\"arcTo not implemented.\");\n    }, p.prototype.rect = function(t, e, n, r) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw o.error(\"jsPDF.context2d.rect: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.rect\");\n        this.moveTo(t, e), this.lineTo(t + n, e), this.lineTo(t + n, e + r), this.lineTo(t, e + r), this.lineTo(t, e), this.lineTo(t + n, e), this.lineTo(t, e);\n    }, p.prototype.fillRect = function(t, e, n, r) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw o.error(\"jsPDF.context2d.fillRect: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.fillRect\");\n        if (!m.call(this)) {\n            var i = {};\n            \"butt\" !== this.lineCap && (i.lineCap = this.lineCap, this.lineCap = \"butt\"), \"miter\" !== this.lineJoin && (i.lineJoin = this.lineJoin, this.lineJoin = \"miter\"), this.beginPath(), this.rect(t, e, n, r), this.fill(), i.hasOwnProperty(\"lineCap\") && (this.lineCap = i.lineCap), i.hasOwnProperty(\"lineJoin\") && (this.lineJoin = i.lineJoin);\n        }\n    }, p.prototype.strokeRect = function(t, e, n, r) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw o.error(\"jsPDF.context2d.strokeRect: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.strokeRect\");\n        v.call(this) || (this.beginPath(), this.rect(t, e, n, r), this.stroke());\n    }, p.prototype.clearRect = function(t, e, n, r) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r)) throw o.error(\"jsPDF.context2d.clearRect: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.clearRect\");\n        this.ignoreClearRect || (this.fillStyle = \"#ffffff\", this.fillRect(t, e, n, r));\n    }, p.prototype.save = function(t) {\n        t = \"boolean\" != typeof t || t;\n        for(var e = this.pdf.internal.getCurrentPageInfo().pageNumber, n = 0; n < this.pdf.internal.getNumberOfPages(); n++)this.pdf.setPage(n + 1), this.pdf.internal.out(\"q\");\n        if (this.pdf.setPage(e), t) {\n            this.ctx.fontSize = this.pdf.internal.getFontSize();\n            var r = new d(this.ctx);\n            this.ctxStack.push(this.ctx), this.ctx = r;\n        }\n    }, p.prototype.restore = function(t) {\n        t = \"boolean\" != typeof t || t;\n        for(var e = this.pdf.internal.getCurrentPageInfo().pageNumber, n = 0; n < this.pdf.internal.getNumberOfPages(); n++)this.pdf.setPage(n + 1), this.pdf.internal.out(\"Q\");\n        this.pdf.setPage(e), t && 0 !== this.ctxStack.length && (this.ctx = this.ctxStack.pop(), this.fillStyle = this.ctx.fillStyle, this.strokeStyle = this.ctx.strokeStyle, this.font = this.ctx.font, this.lineCap = this.ctx.lineCap, this.lineWidth = this.ctx.lineWidth, this.lineJoin = this.ctx.lineJoin, this.lineDash = this.ctx.lineDash, this.lineDashOffset = this.ctx.lineDashOffset);\n    }, p.prototype.toDataURL = function() {\n        throw new Error(\"toDataUrl not implemented.\");\n    };\n    var g = function(t) {\n        var e, n, r, i;\n        if (!0 === t.isCanvasGradient && (t = t.getColor()), !t) return {\n            r: 0,\n            g: 0,\n            b: 0,\n            a: 0,\n            style: t\n        };\n        if (/transparent|rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*0+\\s*\\)/.test(t)) e = 0, n = 0, r = 0, i = 0;\n        else {\n            var a = /rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)/.exec(t);\n            if (null !== a) e = parseInt(a[1]), n = parseInt(a[2]), r = parseInt(a[3]), i = 1;\n            else if (null !== (a = /rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([\\d.]+)\\s*\\)/.exec(t))) e = parseInt(a[1]), n = parseInt(a[2]), r = parseInt(a[3]), i = parseFloat(a[4]);\n            else {\n                if (i = 1, \"string\" == typeof t && \"#\" !== t.charAt(0)) {\n                    var o = new h(t);\n                    t = o.ok ? o.toHex() : \"#000000\";\n                }\n                4 === t.length ? (e = t.substring(1, 2), e += e, n = t.substring(2, 3), n += n, r = t.substring(3, 4), r += r) : (e = t.substring(1, 3), n = t.substring(3, 5), r = t.substring(5, 7)), e = parseInt(e, 16), n = parseInt(n, 16), r = parseInt(r, 16);\n            }\n        }\n        return {\n            r: e,\n            g: n,\n            b: r,\n            a: i,\n            style: t\n        };\n    }, m = function() {\n        return this.ctx.isFillTransparent || 0 == this.globalAlpha;\n    }, v = function() {\n        return Boolean(this.ctx.isStrokeTransparent || 0 == this.globalAlpha);\n    };\n    p.prototype.fillText = function(t, e, n, r) {\n        if (isNaN(e) || isNaN(n) || \"string\" != typeof t) throw o.error(\"jsPDF.context2d.fillText: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.fillText\");\n        if (r = isNaN(r) ? void 0 : r, !m.call(this)) {\n            var i = E(this.ctx.transform.rotation), a = this.ctx.transform.scaleX;\n            j.call(this, {\n                text: t,\n                x: e,\n                y: n,\n                scale: a,\n                angle: i,\n                align: this.textAlign,\n                maxWidth: r\n            });\n        }\n    }, p.prototype.strokeText = function(t, e, n, r) {\n        if (isNaN(e) || isNaN(n) || \"string\" != typeof t) throw o.error(\"jsPDF.context2d.strokeText: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.strokeText\");\n        if (!v.call(this)) {\n            r = isNaN(r) ? void 0 : r;\n            var i = E(this.ctx.transform.rotation), a = this.ctx.transform.scaleX;\n            j.call(this, {\n                text: t,\n                x: e,\n                y: n,\n                scale: a,\n                renderingMode: \"stroke\",\n                angle: i,\n                align: this.textAlign,\n                maxWidth: r\n            });\n        }\n    }, p.prototype.measureText = function(t) {\n        if (\"string\" != typeof t) throw o.error(\"jsPDF.context2d.measureText: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.measureText\");\n        var e = this.pdf, n = this.pdf.internal.scaleFactor, r = e.internal.getFontSize(), i = e.getStringUnitWidth(t) * r / e.internal.scaleFactor;\n        return new function(t) {\n            var e = (t = t || {}).width || 0;\n            return Object.defineProperty(this, \"width\", {\n                get: function() {\n                    return e;\n                }\n            }), this;\n        }({\n            width: i *= Math.round(96 * n / 72 * 1e4) / 1e4\n        });\n    }, p.prototype.scale = function(t, e) {\n        if (isNaN(t) || isNaN(e)) throw o.error(\"jsPDF.context2d.scale: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.scale\");\n        var n = new l(t, 0, 0, e, 0, 0);\n        this.ctx.transform = this.ctx.transform.multiply(n);\n    }, p.prototype.rotate = function(t) {\n        if (isNaN(t)) throw o.error(\"jsPDF.context2d.rotate: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.rotate\");\n        var e = new l(Math.cos(t), Math.sin(t), -Math.sin(t), Math.cos(t), 0, 0);\n        this.ctx.transform = this.ctx.transform.multiply(e);\n    }, p.prototype.translate = function(t, e) {\n        if (isNaN(t) || isNaN(e)) throw o.error(\"jsPDF.context2d.translate: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.translate\");\n        var n = new l(1, 0, 0, 1, t, e);\n        this.ctx.transform = this.ctx.transform.multiply(n);\n    }, p.prototype.transform = function(t, e, n, r, i, a) {\n        if (isNaN(t) || isNaN(e) || isNaN(n) || isNaN(r) || isNaN(i) || isNaN(a)) throw o.error(\"jsPDF.context2d.transform: Invalid arguments\", arguments), new Error(\"Invalid arguments passed to jsPDF.context2d.transform\");\n        var s = new l(t, e, n, r, i, a);\n        this.ctx.transform = this.ctx.transform.multiply(s);\n    }, p.prototype.setTransform = function(t, e, n, r, i, a) {\n        t = isNaN(t) ? 1 : t, e = isNaN(e) ? 0 : e, n = isNaN(n) ? 0 : n, r = isNaN(r) ? 1 : r, i = isNaN(i) ? 0 : i, a = isNaN(a) ? 0 : a, this.ctx.transform = new l(t, e, n, r, i, a);\n    };\n    var b = function() {\n        return this.margin[0] > 0 || this.margin[1] > 0 || this.margin[2] > 0 || this.margin[3] > 0;\n    };\n    p.prototype.drawImage = function(t, e, n, r, i, a, o, s, u) {\n        var h = this.pdf.getImageProperties(t), f = 1, d = 1, p = 1, g = 1;\n        void 0 !== r && void 0 !== s && (p = s / r, g = u / i, f = h.width / r * s / r, d = h.height / i * u / i), void 0 === a && (a = e, o = n, e = 0, n = 0), void 0 !== r && void 0 === s && (s = r, u = i), void 0 === r && void 0 === s && (s = h.width, u = h.height);\n        for(var m, v = this.ctx.transform.decompose(), w = E(v.rotate.shx), x = new l, S = (x = (x = (x = x.multiply(v.translate)).multiply(v.skew)).multiply(v.scale)).applyToRectangle(new c(a - e * p, o - n * g, r * f, i * d)), _ = y.call(this, S), P = [], k = 0; k < _.length; k += 1)-1 === P.indexOf(_[k]) && P.push(_[k]);\n        if (L(P), this.autoPaging) for(var F = P[0], I = P[P.length - 1], j = F; j < I + 1; j++){\n            this.pdf.setPage(j);\n            var C = this.pdf.internal.pageSize.width - this.margin[3] - this.margin[1], O = 1 === j ? this.posY + this.margin[0] : this.margin[0], B = this.pdf.internal.pageSize.height - this.posY - this.margin[0] - this.margin[2], M = this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2], q = 1 === j ? 0 : B + (j - 2) * M;\n            if (0 !== this.ctx.clip_path.length) {\n                var R = this.path;\n                m = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = N(m, this.posX + this.margin[3], -q + O + this.ctx.prevPageLastElemOffset), A.call(this, \"fill\", !0), this.path = R;\n            }\n            var D = JSON.parse(JSON.stringify(S));\n            D = N([\n                D\n            ], this.posX + this.margin[3], -q + O + this.ctx.prevPageLastElemOffset)[0];\n            var T = (j > F || j < I) && b.call(this);\n            T && (this.pdf.saveGraphicsState(), this.pdf.rect(this.margin[3], this.margin[0], C, M, null).clip().discardPath()), this.pdf.addImage(t, \"JPEG\", D.x, D.y, D.w, D.h, null, null, w), T && this.pdf.restoreGraphicsState();\n        }\n        else this.pdf.addImage(t, \"JPEG\", S.x, S.y, S.w, S.h, null, null, w);\n    };\n    var y = function(t, e, n) {\n        var r = [];\n        e = e || this.pdf.internal.pageSize.width, n = n || this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2];\n        var i = this.posY + this.ctx.prevPageLastElemOffset;\n        switch(t.type){\n            default:\n            case \"mt\":\n            case \"lt\":\n                r.push(Math.floor((t.y + i) / n) + 1);\n                break;\n            case \"arc\":\n                r.push(Math.floor((t.y + i - t.radius) / n) + 1), r.push(Math.floor((t.y + i + t.radius) / n) + 1);\n                break;\n            case \"qct\":\n                var a = R(this.ctx.lastPoint.x, this.ctx.lastPoint.y, t.x1, t.y1, t.x, t.y);\n                r.push(Math.floor((a.y + i) / n) + 1), r.push(Math.floor((a.y + a.h + i) / n) + 1);\n                break;\n            case \"bct\":\n                var o = D(this.ctx.lastPoint.x, this.ctx.lastPoint.y, t.x1, t.y1, t.x2, t.y2, t.x, t.y);\n                r.push(Math.floor((o.y + i) / n) + 1), r.push(Math.floor((o.y + o.h + i) / n) + 1);\n                break;\n            case \"rect\":\n                r.push(Math.floor((t.y + i) / n) + 1), r.push(Math.floor((t.y + t.h + i) / n) + 1);\n        }\n        for(var s = 0; s < r.length; s += 1)for(; this.pdf.internal.getNumberOfPages() < r[s];)w.call(this);\n        return r;\n    }, w = function() {\n        var t = this.fillStyle, e = this.strokeStyle, n = this.font, r = this.lineCap, i = this.lineWidth, a = this.lineJoin;\n        this.pdf.addPage(), this.fillStyle = t, this.strokeStyle = e, this.font = n, this.lineCap = r, this.lineWidth = i, this.lineJoin = a;\n    }, N = function(t, e, n) {\n        for(var r = 0; r < t.length; r++)switch(t[r].type){\n            case \"bct\":\n                t[r].x2 += e, t[r].y2 += n;\n            case \"qct\":\n                t[r].x1 += e, t[r].y1 += n;\n            default:\n                t[r].x += e, t[r].y += n;\n        }\n        return t;\n    }, L = function(t) {\n        return t.sort(function(t, e) {\n            return t - e;\n        });\n    }, x = function(t, e) {\n        for(var n, r, i = this.fillStyle, a = this.strokeStyle, o = this.lineCap, s = this.lineWidth, u = Math.abs(s * this.ctx.transform.scaleX), c = this.lineJoin, l = JSON.parse(JSON.stringify(this.path)), h = JSON.parse(JSON.stringify(this.path)), f = [], d = 0; d < h.length; d++)if (void 0 !== h[d].x) for(var p = y.call(this, h[d]), g = 0; g < p.length; g += 1)-1 === f.indexOf(p[g]) && f.push(p[g]);\n        for(var m = 0; m < f.length; m++)for(; this.pdf.internal.getNumberOfPages() < f[m];)w.call(this);\n        if (L(f), this.autoPaging) for(var v = f[0], x = f[f.length - 1], S = v; S < x + 1; S++){\n            this.pdf.setPage(S), this.fillStyle = i, this.strokeStyle = a, this.lineCap = o, this.lineWidth = u, this.lineJoin = c;\n            var _ = this.pdf.internal.pageSize.width - this.margin[3] - this.margin[1], P = 1 === S ? this.posY + this.margin[0] : this.margin[0], k = this.pdf.internal.pageSize.height - this.posY - this.margin[0] - this.margin[2], F = this.pdf.internal.pageSize.height - this.margin[0] - this.margin[2], I = 1 === S ? 0 : k + (S - 2) * F;\n            if (0 !== this.ctx.clip_path.length) {\n                var j = this.path;\n                n = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = N(n, this.posX + this.margin[3], -I + P + this.ctx.prevPageLastElemOffset), A.call(this, t, !0), this.path = j;\n            }\n            if (r = JSON.parse(JSON.stringify(l)), this.path = N(r, this.posX + this.margin[3], -I + P + this.ctx.prevPageLastElemOffset), !1 === e || 0 === S) {\n                var C = (S > v || S < x) && b.call(this);\n                C && (this.pdf.saveGraphicsState(), this.pdf.rect(this.margin[3], this.margin[0], _, F, null).clip().discardPath()), A.call(this, t, e), C && this.pdf.restoreGraphicsState();\n            }\n            this.lineWidth = s;\n        }\n        else this.lineWidth = u, A.call(this, t, e), this.lineWidth = s;\n        this.path = l;\n    }, A = function(t, e) {\n        if ((\"stroke\" !== t || e || !v.call(this)) && (\"stroke\" === t || e || !m.call(this))) {\n            for(var n, r, i = [], a = this.path, o = 0; o < a.length; o++){\n                var s = a[o];\n                switch(s.type){\n                    case \"begin\":\n                        i.push({\n                            begin: !0\n                        });\n                        break;\n                    case \"close\":\n                        i.push({\n                            close: !0\n                        });\n                        break;\n                    case \"mt\":\n                        i.push({\n                            start: s,\n                            deltas: [],\n                            abs: []\n                        });\n                        break;\n                    case \"lt\":\n                        var u = i.length;\n                        if (a[o - 1] && !isNaN(a[o - 1].x) && (n = [\n                            s.x - a[o - 1].x,\n                            s.y - a[o - 1].y\n                        ], u > 0)) {\n                            for(; u >= 0; u--)if (!0 !== i[u - 1].close && !0 !== i[u - 1].begin) {\n                                i[u - 1].deltas.push(n), i[u - 1].abs.push(s);\n                                break;\n                            }\n                        }\n                        break;\n                    case \"bct\":\n                        n = [\n                            s.x1 - a[o - 1].x,\n                            s.y1 - a[o - 1].y,\n                            s.x2 - a[o - 1].x,\n                            s.y2 - a[o - 1].y,\n                            s.x - a[o - 1].x,\n                            s.y - a[o - 1].y\n                        ], i[i.length - 1].deltas.push(n);\n                        break;\n                    case \"qct\":\n                        var c = a[o - 1].x + 2 / 3 * (s.x1 - a[o - 1].x), l = a[o - 1].y + 2 / 3 * (s.y1 - a[o - 1].y), h = s.x + 2 / 3 * (s.x1 - s.x), f = s.y + 2 / 3 * (s.y1 - s.y), d = s.x, p = s.y;\n                        n = [\n                            c - a[o - 1].x,\n                            l - a[o - 1].y,\n                            h - a[o - 1].x,\n                            f - a[o - 1].y,\n                            d - a[o - 1].x,\n                            p - a[o - 1].y\n                        ], i[i.length - 1].deltas.push(n);\n                        break;\n                    case \"arc\":\n                        i.push({\n                            deltas: [],\n                            abs: [],\n                            arc: !0\n                        }), Array.isArray(i[i.length - 1].abs) && i[i.length - 1].abs.push(s);\n                }\n            }\n            r = e ? null : \"stroke\" === t ? \"stroke\" : \"fill\";\n            for(var g = !1, b = 0; b < i.length; b++)if (i[b].arc) for(var y = i[b].abs, w = 0; w < y.length; w++){\n                var N = y[w];\n                \"arc\" === N.type ? P.call(this, N.x, N.y, N.radius, N.startAngle, N.endAngle, N.counterclockwise, void 0, e, !g) : C.call(this, N.x, N.y), g = !0;\n            }\n            else if (!0 === i[b].close) this.pdf.internal.out(\"h\"), g = !1;\n            else if (!0 !== i[b].begin) {\n                var L = i[b].start.x, x = i[b].start.y;\n                O.call(this, i[b].deltas, L, x), g = !0;\n            }\n            r && k.call(this, r), e && F.call(this);\n        }\n    }, S = function(t) {\n        var e = this.pdf.internal.getFontSize() / this.pdf.internal.scaleFactor, n = e * (this.pdf.internal.getLineHeightFactor() - 1);\n        switch(this.ctx.textBaseline){\n            case \"bottom\":\n                return t - n;\n            case \"top\":\n                return t + e - n;\n            case \"hanging\":\n                return t + e - 2 * n;\n            case \"middle\":\n                return t + e / 2 - n;\n            default:\n                return t;\n        }\n    }, _ = function(t) {\n        return t + this.pdf.internal.getFontSize() / this.pdf.internal.scaleFactor * (this.pdf.internal.getLineHeightFactor() - 1);\n    };\n    p.prototype.createLinearGradient = function() {\n        var t = function() {};\n        return t.colorStops = [], t.addColorStop = function(t, e) {\n            this.colorStops.push([\n                t,\n                e\n            ]);\n        }, t.getColor = function() {\n            return 0 === this.colorStops.length ? \"#000000\" : this.colorStops[0][1];\n        }, t.isCanvasGradient = !0, t;\n    }, p.prototype.createPattern = function() {\n        return this.createLinearGradient();\n    }, p.prototype.createRadialGradient = function() {\n        return this.createLinearGradient();\n    };\n    var P = function(t, e, n, r, i, a, o, s, u) {\n        for(var c = M.call(this, n, r, i, a), l = 0; l < c.length; l++){\n            var h = c[l];\n            0 === l && (u ? I.call(this, h.x1 + t, h.y1 + e) : C.call(this, h.x1 + t, h.y1 + e)), B.call(this, t, e, h.x2, h.y2, h.x3, h.y3, h.x4, h.y4);\n        }\n        s ? F.call(this) : k.call(this, o);\n    }, k = function(t) {\n        switch(t){\n            case \"stroke\":\n                this.pdf.internal.out(\"S\");\n                break;\n            case \"fill\":\n                this.pdf.internal.out(\"f\");\n        }\n    }, F = function() {\n        this.pdf.clip(), this.pdf.discardPath();\n    }, I = function(t, e) {\n        this.pdf.internal.out(r(t) + \" \" + i(e) + \" m\");\n    }, j = function(t) {\n        var e;\n        switch(t.align){\n            case \"right\":\n            case \"end\":\n                e = \"right\";\n                break;\n            case \"center\":\n                e = \"center\";\n                break;\n            default:\n                e = \"left\";\n        }\n        var n = this.pdf.getTextDimensions(t.text), r = S.call(this, t.y), i = _.call(this, r) - n.h, a = this.ctx.transform.applyToPoint(new u(t.x, r)), o = this.ctx.transform.decompose(), s = new l;\n        s = (s = (s = s.multiply(o.translate)).multiply(o.skew)).multiply(o.scale);\n        for(var h, f, d, p = this.ctx.transform.applyToRectangle(new c(t.x, r, n.w, n.h)), g = s.applyToRectangle(new c(t.x, i, n.w, n.h)), m = y.call(this, g), v = [], w = 0; w < m.length; w += 1)-1 === v.indexOf(m[w]) && v.push(m[w]);\n        if (L(v), this.autoPaging) for(var x = v[0], P = v[v.length - 1], k = x; k < P + 1; k++){\n            this.pdf.setPage(k);\n            var F = 1 === k ? this.posY + this.margin[0] : this.margin[0], I = this.pdf.internal.pageSize.height - this.posY - this.margin[0] - this.margin[2], j = this.pdf.internal.pageSize.height - this.margin[2], C = j - this.margin[0], O = this.pdf.internal.pageSize.width - this.margin[1], B = O - this.margin[3], M = 1 === k ? 0 : I + (k - 2) * C;\n            if (0 !== this.ctx.clip_path.length) {\n                var q = this.path;\n                h = JSON.parse(JSON.stringify(this.ctx.clip_path)), this.path = N(h, this.posX + this.margin[3], -1 * M + F), A.call(this, \"fill\", !0), this.path = q;\n            }\n            var E = N([\n                JSON.parse(JSON.stringify(g))\n            ], this.posX + this.margin[3], -M + F + this.ctx.prevPageLastElemOffset)[0];\n            t.scale >= .01 && (f = this.pdf.internal.getFontSize(), this.pdf.setFontSize(f * t.scale), d = this.lineWidth, this.lineWidth = d * t.scale);\n            var R = \"text\" !== this.autoPaging;\n            if (R || E.y + E.h <= j) {\n                if (R || E.y >= F && E.x <= O) {\n                    var D = R ? t.text : this.pdf.splitTextToSize(t.text, t.maxWidth || O - E.x)[0], T = N([\n                        JSON.parse(JSON.stringify(p))\n                    ], this.posX + this.margin[3], -M + F + this.ctx.prevPageLastElemOffset)[0], z = R && (k > x || k < P) && b.call(this);\n                    z && (this.pdf.saveGraphicsState(), this.pdf.rect(this.margin[3], this.margin[0], B, C, null).clip().discardPath()), this.pdf.text(D, T.x, T.y, {\n                        angle: t.angle,\n                        align: e,\n                        renderingMode: t.renderingMode\n                    }), z && this.pdf.restoreGraphicsState();\n                }\n            } else E.y < j && (this.ctx.prevPageLastElemOffset += j - E.y);\n            t.scale >= .01 && (this.pdf.setFontSize(f), this.lineWidth = d);\n        }\n        else t.scale >= .01 && (f = this.pdf.internal.getFontSize(), this.pdf.setFontSize(f * t.scale), d = this.lineWidth, this.lineWidth = d * t.scale), this.pdf.text(t.text, a.x + this.posX, a.y + this.posY, {\n            angle: t.angle,\n            align: e,\n            renderingMode: t.renderingMode,\n            maxWidth: t.maxWidth\n        }), t.scale >= .01 && (this.pdf.setFontSize(f), this.lineWidth = d);\n    }, C = function(t, e, n, a) {\n        n = n || 0, a = a || 0, this.pdf.internal.out(r(t + n) + \" \" + i(e + a) + \" l\");\n    }, O = function(t, e, n) {\n        return this.pdf.lines(t, e, n, null, null);\n    }, B = function(t, e, r, i, o, u, c, l) {\n        this.pdf.internal.out([\n            n(a(r + t)),\n            n(s(i + e)),\n            n(a(o + t)),\n            n(s(u + e)),\n            n(a(c + t)),\n            n(s(l + e)),\n            \"c\"\n        ].join(\" \"));\n    }, M = function(t, e, n, r) {\n        for(var i = 2 * Math.PI, a = Math.PI / 2; e > n;)e -= i;\n        var o = Math.abs(n - e);\n        o < i && r && (o = i - o);\n        for(var s = [], u = r ? -1 : 1, c = e; o > 1e-5;){\n            var l = c + u * Math.min(o, a);\n            s.push(q.call(this, t, c, l)), o -= Math.abs(l - c), c = l;\n        }\n        return s;\n    }, q = function(t, e, n) {\n        var r = (n - e) / 2, i = t * Math.cos(r), a = t * Math.sin(r), o = i, s = -a, u = o * o + s * s, c = u + o * i + s * a, l = 4 / 3 * (Math.sqrt(2 * u * c) - c) / (o * a - s * i), h = o - l * s, f = s + l * o, d = h, p = -f, g = r + e, m = Math.cos(g), v = Math.sin(g);\n        return {\n            x1: t * Math.cos(e),\n            y1: t * Math.sin(e),\n            x2: h * m - f * v,\n            y2: h * v + f * m,\n            x3: d * m - p * v,\n            y3: d * v + p * m,\n            x4: t * Math.cos(n),\n            y4: t * Math.sin(n)\n        };\n    }, E = function(t) {\n        return 180 * t / Math.PI;\n    }, R = function(t, e, n, r, i, a) {\n        var o = t + .5 * (n - t), s = e + .5 * (r - e), u = i + .5 * (n - i), l = a + .5 * (r - a), h = Math.min(t, i, o, u), f = Math.max(t, i, o, u), d = Math.min(e, a, s, l), p = Math.max(e, a, s, l);\n        return new c(h, d, f - h, p - d);\n    }, D = function(t, e, n, r, i, a, o, s) {\n        var u, l, h, f, d, p, g, m, v, b, y, w, N, L, x = n - t, A = r - e, S = i - n, _ = a - r, P = o - i, k = s - a;\n        for(l = 0; l < 41; l++)v = (g = (h = t + (u = l / 40) * x) + u * ((d = n + u * S) - h)) + u * (d + u * (i + u * P - d) - g), b = (m = (f = e + u * A) + u * ((p = r + u * _) - f)) + u * (p + u * (a + u * k - p) - m), 0 == l ? (y = v, w = b, N = v, L = b) : (y = Math.min(y, v), w = Math.min(w, b), N = Math.max(N, v), L = Math.max(L, b));\n        return new c(Math.round(y), Math.round(w), Math.round(N - y), Math.round(L - w));\n    }, T = function() {\n        if (this.prevLineDash || this.ctx.lineDash.length || this.ctx.lineDashOffset) {\n            var t, e, n = (t = this.ctx.lineDash, e = this.ctx.lineDashOffset, JSON.stringify({\n                lineDash: t,\n                lineDashOffset: e\n            }));\n            this.prevLineDash !== n && (this.pdf.setLineDash(this.ctx.lineDash, this.ctx.lineDashOffset), this.prevLineDash = n);\n        }\n    };\n}(E.API), /**\n * @license\n * jsPDF filters PlugIn\n * Copyright (c) 2014 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var n = function(t) {\n        var e, n, r, i, a, o, s, u, c, l;\n        for(/[^\\x00-\\xFF]/.test(t), n = [], r = 0, i = (t += e = \"\\x00\\x00\\x00\\x00\".slice(t.length % 4 || 4)).length; i > r; r += 4)0 !== (a = (t.charCodeAt(r) << 24) + (t.charCodeAt(r + 1) << 16) + (t.charCodeAt(r + 2) << 8) + t.charCodeAt(r + 3)) ? (o = (a = ((a = ((a = ((a = (a - (l = a % 85)) / 85) - (c = a % 85)) / 85) - (u = a % 85)) / 85) - (s = a % 85)) / 85) % 85, n.push(o + 33, s + 33, u + 33, c + 33, l + 33)) : n.push(122);\n        return function(t, e) {\n            for(var n = e; n > 0; n--)t.pop();\n        }(n, e.length), String.fromCharCode.apply(String, n) + \"~>\";\n    }, r = function(t) {\n        var e, n, r, i, a, o = String, s = \"length\", u = 255, c = \"charCodeAt\", l = \"slice\", h = \"replace\";\n        for(t[l](-2), t = t[l](0, -2)[h](/\\s/g, \"\")[h](\"z\", \"!!!!!\"), r = [], i = 0, a = (t += e = \"uuuuu\"[l](t[s] % 5 || 5))[s]; a > i; i += 5)n = 52200625 * (t[c](i) - 33) + 614125 * (t[c](i + 1) - 33) + 7225 * (t[c](i + 2) - 33) + 85 * (t[c](i + 3) - 33) + (t[c](i + 4) - 33), r.push(u & n >> 24, u & n >> 16, u & n >> 8, u & n);\n        return function(t, e) {\n            for(var n = e; n > 0; n--)t.pop();\n        }(r, e[s]), o.fromCharCode.apply(o, r);\n    }, i = function(t) {\n        return t.split(\"\").map(function(t) {\n            return (\"0\" + t.charCodeAt().toString(16)).slice(-2);\n        }).join(\"\") + \">\";\n    }, a = function(t) {\n        var e = new RegExp(/^([0-9A-Fa-f]{2})+$/);\n        if (-1 !== (t = t.replace(/\\s/g, \"\")).indexOf(\">\") && (t = t.substr(0, t.indexOf(\">\"))), t.length % 2 && (t += \"0\"), !1 === e.test(t)) return \"\";\n        for(var n = \"\", r = 0; r < t.length; r += 2)n += String.fromCharCode(\"0x\" + (t[r] + t[r + 1]));\n        return n;\n    }, o = function(t) {\n        for(var n = new Uint8Array(t.length), r = t.length; r--;)n[r] = t.charCodeAt(r);\n        return (n = (0,fflate__WEBPACK_IMPORTED_MODULE_3__.zlibSync)(n)).reduce(function(t, e) {\n            return t + String.fromCharCode(e);\n        }, \"\");\n    };\n    t.processDataByFilters = function(t, e) {\n        var s = 0, u = t || \"\", c = [];\n        for(\"string\" == typeof (e = e || []) && (e = [\n            e\n        ]), s = 0; s < e.length; s += 1)switch(e[s]){\n            case \"ASCII85Decode\":\n            case \"/ASCII85Decode\":\n                u = r(u), c.push(\"/ASCII85Encode\");\n                break;\n            case \"ASCII85Encode\":\n            case \"/ASCII85Encode\":\n                u = n(u), c.push(\"/ASCII85Decode\");\n                break;\n            case \"ASCIIHexDecode\":\n            case \"/ASCIIHexDecode\":\n                u = a(u), c.push(\"/ASCIIHexEncode\");\n                break;\n            case \"ASCIIHexEncode\":\n            case \"/ASCIIHexEncode\":\n                u = i(u), c.push(\"/ASCIIHexDecode\");\n                break;\n            case \"FlateEncode\":\n            case \"/FlateEncode\":\n                u = o(u), c.push(\"/FlateDecode\");\n                break;\n            default:\n                throw new Error('The filter: \"' + e[s] + '\" is not implemented');\n        }\n        return {\n            data: u,\n            reverseChain: c.reverse().join(\" \")\n        };\n    };\n}(E.API), /**\n * @license\n * jsPDF fileloading PlugIn\n * Copyright (c) 2018 Aras Abbasi (aras.abbasi@gmail.com)\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    t.loadFile = function(t, e, n) {\n        return function(t, e, n) {\n            e = !1 !== e, n = \"function\" == typeof n ? n : function() {};\n            var r = void 0;\n            try {\n                r = function(t, e, n) {\n                    var r = new XMLHttpRequest, i = 0, a = function(t) {\n                        var e = t.length, n = [], r = String.fromCharCode;\n                        for(i = 0; i < e; i += 1)n.push(r(255 & t.charCodeAt(i)));\n                        return n.join(\"\");\n                    };\n                    if (r.open(\"GET\", t, !e), r.overrideMimeType(\"text/plain; charset=x-user-defined\"), !1 === e && (r.onload = function() {\n                        200 === r.status ? n(a(this.responseText)) : n(void 0);\n                    }), r.send(null), e && 200 === r.status) return a(r.responseText);\n                }(t, e, n);\n            } catch (i) {}\n            return r;\n        }(t, e, n);\n    }, t.loadImageFile = t.loadFile;\n}(E.API), function(e) {\n    function n() {\n        return (i.html2canvas ? Promise.resolve(i.html2canvas) : Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! html2canvas */ \"(ssr)/../../../../node_modules/html2canvas/dist/html2canvas.esm.js\"))).catch(function(t) {\n            return Promise.reject(new Error(\"Could not load html2canvas: \" + t));\n        }).then(function(t) {\n            return t.default ? t.default : t;\n        });\n    }\n    function r() {\n        return (i.DOMPurify ? Promise.resolve(i.DOMPurify) : __webpack_require__.e(/*! import() */ \"vendor-chunks/dompurify\").then(__webpack_require__.bind(__webpack_require__, /*! dompurify */ \"(ssr)/../../../../node_modules/dompurify/dist/purify.es.mjs\"))).catch(function(t) {\n            return Promise.reject(new Error(\"Could not load dompurify: \" + t));\n        }).then(function(t) {\n            return t.default ? t.default : t;\n        });\n    }\n    var a = function(e) {\n        var n = _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e);\n        return \"undefined\" === n ? \"undefined\" : \"string\" === n || e instanceof String ? \"string\" : \"number\" === n || e instanceof Number ? \"number\" : \"function\" === n || e instanceof Function ? \"function\" : e && e.constructor === Array ? \"array\" : e && 1 === e.nodeType ? \"element\" : \"object\" === n ? \"object\" : \"unknown\";\n    }, o = function(t, e) {\n        var n = document.createElement(t);\n        for(var r in e.className && (n.className = e.className), e.innerHTML && e.dompurify && (n.innerHTML = e.dompurify.sanitize(e.innerHTML)), e.style)n.style[r] = e.style[r];\n        return n;\n    }, s = function t(e, n) {\n        for(var r = 3 === e.nodeType ? document.createTextNode(e.nodeValue) : e.cloneNode(!1), i = e.firstChild; i; i = i.nextSibling)!0 !== n && 1 === i.nodeType && \"SCRIPT\" === i.nodeName || r.appendChild(t(i, n));\n        return 1 === e.nodeType && (\"CANVAS\" === e.nodeName ? (r.width = e.width, r.height = e.height, r.getContext(\"2d\").drawImage(e, 0, 0)) : \"TEXTAREA\" !== e.nodeName && \"SELECT\" !== e.nodeName || (r.value = e.value), r.addEventListener(\"load\", function() {\n            r.scrollTop = e.scrollTop, r.scrollLeft = e.scrollLeft;\n        }, !0)), r;\n    }, u = function t(e) {\n        var n = Object.assign(t.convert(Promise.resolve()), JSON.parse(JSON.stringify(t.template))), r = t.convert(Promise.resolve(), n);\n        return (r = r.setProgress(1, t, 1, [\n            t\n        ])).set(e);\n    };\n    (u.prototype = Object.create(Promise.prototype)).constructor = u, u.convert = function(t, e) {\n        return t.__proto__ = e || u.prototype, t;\n    }, u.template = {\n        prop: {\n            src: null,\n            container: null,\n            overlay: null,\n            canvas: null,\n            img: null,\n            pdf: null,\n            pageSize: null,\n            callback: function() {}\n        },\n        progress: {\n            val: 0,\n            state: null,\n            n: 0,\n            stack: []\n        },\n        opt: {\n            filename: \"file.pdf\",\n            margin: [\n                0,\n                0,\n                0,\n                0\n            ],\n            enableLinks: !0,\n            x: 0,\n            y: 0,\n            html2canvas: {},\n            jsPDF: {},\n            backgroundColor: \"transparent\"\n        }\n    }, u.prototype.from = function(t, e) {\n        return this.then(function() {\n            switch(e = e || function(t) {\n                switch(a(t)){\n                    case \"string\":\n                        return \"string\";\n                    case \"element\":\n                        return \"canvas\" === t.nodeName.toLowerCase() ? \"canvas\" : \"element\";\n                    default:\n                        return \"unknown\";\n                }\n            }(t), e){\n                case \"string\":\n                    return this.then(r).then(function(e) {\n                        return this.set({\n                            src: o(\"div\", {\n                                innerHTML: t,\n                                dompurify: e\n                            })\n                        });\n                    });\n                case \"element\":\n                    return this.set({\n                        src: t\n                    });\n                case \"canvas\":\n                    return this.set({\n                        canvas: t\n                    });\n                case \"img\":\n                    return this.set({\n                        img: t\n                    });\n                default:\n                    return this.error(\"Unknown source type.\");\n            }\n        });\n    }, u.prototype.to = function(t) {\n        switch(t){\n            case \"container\":\n                return this.toContainer();\n            case \"canvas\":\n                return this.toCanvas();\n            case \"img\":\n                return this.toImg();\n            case \"pdf\":\n                return this.toPdf();\n            default:\n                return this.error(\"Invalid target.\");\n        }\n    }, u.prototype.toContainer = function() {\n        return this.thenList([\n            function() {\n                return this.prop.src || this.error(\"Cannot duplicate - no source HTML.\");\n            },\n            function() {\n                return this.prop.pageSize || this.setPageSize();\n            }\n        ]).then(function() {\n            var t = {\n                position: \"relative\",\n                display: \"inline-block\",\n                width: (\"number\" != typeof this.opt.width || isNaN(this.opt.width) || \"number\" != typeof this.opt.windowWidth || isNaN(this.opt.windowWidth) ? Math.max(this.prop.src.clientWidth, this.prop.src.scrollWidth, this.prop.src.offsetWidth) : this.opt.windowWidth) + \"px\",\n                left: 0,\n                right: 0,\n                top: 0,\n                margin: \"auto\",\n                backgroundColor: this.opt.backgroundColor\n            }, e = s(this.prop.src, this.opt.html2canvas.javascriptEnabled);\n            \"BODY\" === e.tagName && (t.height = Math.max(document.body.scrollHeight, document.body.offsetHeight, document.documentElement.clientHeight, document.documentElement.scrollHeight, document.documentElement.offsetHeight) + \"px\"), this.prop.overlay = o(\"div\", {\n                className: \"html2pdf__overlay\",\n                style: {\n                    position: \"fixed\",\n                    overflow: \"hidden\",\n                    zIndex: 1e3,\n                    left: \"-100000px\",\n                    right: 0,\n                    bottom: 0,\n                    top: 0\n                }\n            }), this.prop.container = o(\"div\", {\n                className: \"html2pdf__container\",\n                style: t\n            }), this.prop.container.appendChild(e), this.prop.container.firstChild.appendChild(o(\"div\", {\n                style: {\n                    clear: \"both\",\n                    border: \"0 none transparent\",\n                    margin: 0,\n                    padding: 0,\n                    height: 0\n                }\n            })), this.prop.container.style.float = \"none\", this.prop.overlay.appendChild(this.prop.container), document.body.appendChild(this.prop.overlay), this.prop.container.firstChild.style.position = \"relative\", this.prop.container.height = Math.max(this.prop.container.firstChild.clientHeight, this.prop.container.firstChild.scrollHeight, this.prop.container.firstChild.offsetHeight) + \"px\";\n        });\n    }, u.prototype.toCanvas = function() {\n        var t = [\n            function() {\n                return document.body.contains(this.prop.container) || this.toContainer();\n            }\n        ];\n        return this.thenList(t).then(n).then(function(t) {\n            var e = Object.assign({}, this.opt.html2canvas);\n            return delete e.onrendered, t(this.prop.container, e);\n        }).then(function(t) {\n            (this.opt.html2canvas.onrendered || function() {})(t), this.prop.canvas = t, document.body.removeChild(this.prop.overlay);\n        });\n    }, u.prototype.toContext2d = function() {\n        var t = [\n            function() {\n                return document.body.contains(this.prop.container) || this.toContainer();\n            }\n        ];\n        return this.thenList(t).then(n).then(function(t) {\n            var e = this.opt.jsPDF, n = this.opt.fontFaces, r = \"number\" != typeof this.opt.width || isNaN(this.opt.width) || \"number\" != typeof this.opt.windowWidth || isNaN(this.opt.windowWidth) ? 1 : this.opt.width / this.opt.windowWidth, i = Object.assign({\n                async: !0,\n                allowTaint: !0,\n                scale: r,\n                scrollX: this.opt.scrollX || 0,\n                scrollY: this.opt.scrollY || 0,\n                backgroundColor: \"#ffffff\",\n                imageTimeout: 15e3,\n                logging: !0,\n                proxy: null,\n                removeContainer: !0,\n                foreignObjectRendering: !1,\n                useCORS: !1\n            }, this.opt.html2canvas);\n            if (delete i.onrendered, e.context2d.autoPaging = void 0 === this.opt.autoPaging || this.opt.autoPaging, e.context2d.posX = this.opt.x, e.context2d.posY = this.opt.y, e.context2d.margin = this.opt.margin, e.context2d.fontFaces = n, n) for(var a = 0; a < n.length; ++a){\n                var o = n[a], s = o.src.find(function(t) {\n                    return \"truetype\" === t.format;\n                });\n                s && e.addFont(s.url, o.ref.name, o.ref.style);\n            }\n            return i.windowHeight = i.windowHeight || 0, i.windowHeight = 0 == i.windowHeight ? Math.max(this.prop.container.clientHeight, this.prop.container.scrollHeight, this.prop.container.offsetHeight) : i.windowHeight, e.context2d.save(!0), t(this.prop.container, i);\n        }).then(function(t) {\n            this.opt.jsPDF.context2d.restore(!0), (this.opt.html2canvas.onrendered || function() {})(t), this.prop.canvas = t, document.body.removeChild(this.prop.overlay);\n        });\n    }, u.prototype.toImg = function() {\n        return this.thenList([\n            function() {\n                return this.prop.canvas || this.toCanvas();\n            }\n        ]).then(function() {\n            var t = this.prop.canvas.toDataURL(\"image/\" + this.opt.image.type, this.opt.image.quality);\n            this.prop.img = document.createElement(\"img\"), this.prop.img.src = t;\n        });\n    }, u.prototype.toPdf = function() {\n        return this.thenList([\n            function() {\n                return this.toContext2d();\n            }\n        ]).then(function() {\n            this.prop.pdf = this.prop.pdf || this.opt.jsPDF;\n        });\n    }, u.prototype.output = function(t, e, n) {\n        return \"img\" === (n = n || \"pdf\").toLowerCase() || \"image\" === n.toLowerCase() ? this.outputImg(t, e) : this.outputPdf(t, e);\n    }, u.prototype.outputPdf = function(t, e) {\n        return this.thenList([\n            function() {\n                return this.prop.pdf || this.toPdf();\n            }\n        ]).then(function() {\n            return this.prop.pdf.output(t, e);\n        });\n    }, u.prototype.outputImg = function(t) {\n        return this.thenList([\n            function() {\n                return this.prop.img || this.toImg();\n            }\n        ]).then(function() {\n            switch(t){\n                case void 0:\n                case \"img\":\n                    return this.prop.img;\n                case \"datauristring\":\n                case \"dataurlstring\":\n                    return this.prop.img.src;\n                case \"datauri\":\n                case \"dataurl\":\n                    return document.location.href = this.prop.img.src;\n                default:\n                    throw 'Image output type \"' + t + '\" is not supported.';\n            }\n        });\n    }, u.prototype.save = function(t) {\n        return this.thenList([\n            function() {\n                return this.prop.pdf || this.toPdf();\n            }\n        ]).set(t ? {\n            filename: t\n        } : null).then(function() {\n            this.prop.pdf.save(this.opt.filename);\n        });\n    }, u.prototype.doCallback = function() {\n        return this.thenList([\n            function() {\n                return this.prop.pdf || this.toPdf();\n            }\n        ]).then(function() {\n            this.prop.callback(this.prop.pdf);\n        });\n    }, u.prototype.set = function(t) {\n        if (\"object\" !== a(t)) return this;\n        var e = Object.keys(t || {}).map(function(e) {\n            if (e in u.template.prop) return function() {\n                this.prop[e] = t[e];\n            };\n            switch(e){\n                case \"margin\":\n                    return this.setMargin.bind(this, t.margin);\n                case \"jsPDF\":\n                    return function() {\n                        return this.opt.jsPDF = t.jsPDF, this.setPageSize();\n                    };\n                case \"pageSize\":\n                    return this.setPageSize.bind(this, t.pageSize);\n                default:\n                    return function() {\n                        this.opt[e] = t[e];\n                    };\n            }\n        }, this);\n        return this.then(function() {\n            return this.thenList(e);\n        });\n    }, u.prototype.get = function(t, e) {\n        return this.then(function() {\n            var n = t in u.template.prop ? this.prop[t] : this.opt[t];\n            return e ? e(n) : n;\n        });\n    }, u.prototype.setMargin = function(t) {\n        return this.then(function() {\n            switch(a(t)){\n                case \"number\":\n                    t = [\n                        t,\n                        t,\n                        t,\n                        t\n                    ];\n                case \"array\":\n                    if (2 === t.length && (t = [\n                        t[0],\n                        t[1],\n                        t[0],\n                        t[1]\n                    ]), 4 === t.length) break;\n                default:\n                    return this.error(\"Invalid margin array.\");\n            }\n            this.opt.margin = t;\n        }).then(this.setPageSize);\n    }, u.prototype.setPageSize = function(t) {\n        function e(t, e) {\n            return Math.floor(t * e / 72 * 96);\n        }\n        return this.then(function() {\n            (t = t || E.getPageSize(this.opt.jsPDF)).hasOwnProperty(\"inner\") || (t.inner = {\n                width: t.width - this.opt.margin[1] - this.opt.margin[3],\n                height: t.height - this.opt.margin[0] - this.opt.margin[2]\n            }, t.inner.px = {\n                width: e(t.inner.width, t.k),\n                height: e(t.inner.height, t.k)\n            }, t.inner.ratio = t.inner.height / t.inner.width), this.prop.pageSize = t;\n        });\n    }, u.prototype.setProgress = function(t, e, n, r) {\n        return null != t && (this.progress.val = t), null != e && (this.progress.state = e), null != n && (this.progress.n = n), null != r && (this.progress.stack = r), this.progress.ratio = this.progress.val / this.progress.state, this;\n    }, u.prototype.updateProgress = function(t, e, n, r) {\n        return this.setProgress(t ? this.progress.val + t : null, e || null, n ? this.progress.n + n : null, r ? this.progress.stack.concat(r) : null);\n    }, u.prototype.then = function(t, e) {\n        var n = this;\n        return this.thenCore(t, e, function(t, e) {\n            return n.updateProgress(null, null, 1, [\n                t\n            ]), Promise.prototype.then.call(this, function(e) {\n                return n.updateProgress(null, t), e;\n            }).then(t, e).then(function(t) {\n                return n.updateProgress(1), t;\n            });\n        });\n    }, u.prototype.thenCore = function(t, e, n) {\n        n = n || Promise.prototype.then;\n        var r = this;\n        t && (t = t.bind(r)), e && (e = e.bind(r));\n        var i = -1 !== Promise.toString().indexOf(\"[native code]\") && \"Promise\" === Promise.name ? r : u.convert(Object.assign({}, r), Promise.prototype), a = n.call(i, t, e);\n        return u.convert(a, r.__proto__);\n    }, u.prototype.thenExternal = function(t, e) {\n        return Promise.prototype.then.call(this, t, e);\n    }, u.prototype.thenList = function(t) {\n        var e = this;\n        return t.forEach(function(t) {\n            e = e.thenCore(t);\n        }), e;\n    }, u.prototype.catch = function(t) {\n        t && (t = t.bind(this));\n        var e = Promise.prototype.catch.call(this, t);\n        return u.convert(e, this);\n    }, u.prototype.catchExternal = function(t) {\n        return Promise.prototype.catch.call(this, t);\n    }, u.prototype.error = function(t) {\n        return this.then(function() {\n            throw new Error(t);\n        });\n    }, u.prototype.using = u.prototype.set, u.prototype.saveAs = u.prototype.save, u.prototype.export = u.prototype.output, u.prototype.run = u.prototype.then, E.getPageSize = function(e, n, r) {\n        if (\"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e)) {\n            var i = e;\n            e = i.orientation, n = i.unit || n, r = i.format || r;\n        }\n        n = n || \"mm\", r = r || \"a4\", e = (\"\" + (e || \"P\")).toLowerCase();\n        var a, o = (\"\" + r).toLowerCase(), s = {\n            a0: [\n                2383.94,\n                3370.39\n            ],\n            a1: [\n                1683.78,\n                2383.94\n            ],\n            a2: [\n                1190.55,\n                1683.78\n            ],\n            a3: [\n                841.89,\n                1190.55\n            ],\n            a4: [\n                595.28,\n                841.89\n            ],\n            a5: [\n                419.53,\n                595.28\n            ],\n            a6: [\n                297.64,\n                419.53\n            ],\n            a7: [\n                209.76,\n                297.64\n            ],\n            a8: [\n                147.4,\n                209.76\n            ],\n            a9: [\n                104.88,\n                147.4\n            ],\n            a10: [\n                73.7,\n                104.88\n            ],\n            b0: [\n                2834.65,\n                4008.19\n            ],\n            b1: [\n                2004.09,\n                2834.65\n            ],\n            b2: [\n                1417.32,\n                2004.09\n            ],\n            b3: [\n                1000.63,\n                1417.32\n            ],\n            b4: [\n                708.66,\n                1000.63\n            ],\n            b5: [\n                498.9,\n                708.66\n            ],\n            b6: [\n                354.33,\n                498.9\n            ],\n            b7: [\n                249.45,\n                354.33\n            ],\n            b8: [\n                175.75,\n                249.45\n            ],\n            b9: [\n                124.72,\n                175.75\n            ],\n            b10: [\n                87.87,\n                124.72\n            ],\n            c0: [\n                2599.37,\n                3676.54\n            ],\n            c1: [\n                1836.85,\n                2599.37\n            ],\n            c2: [\n                1298.27,\n                1836.85\n            ],\n            c3: [\n                918.43,\n                1298.27\n            ],\n            c4: [\n                649.13,\n                918.43\n            ],\n            c5: [\n                459.21,\n                649.13\n            ],\n            c6: [\n                323.15,\n                459.21\n            ],\n            c7: [\n                229.61,\n                323.15\n            ],\n            c8: [\n                161.57,\n                229.61\n            ],\n            c9: [\n                113.39,\n                161.57\n            ],\n            c10: [\n                79.37,\n                113.39\n            ],\n            dl: [\n                311.81,\n                623.62\n            ],\n            letter: [\n                612,\n                792\n            ],\n            \"government-letter\": [\n                576,\n                756\n            ],\n            legal: [\n                612,\n                1008\n            ],\n            \"junior-legal\": [\n                576,\n                360\n            ],\n            ledger: [\n                1224,\n                792\n            ],\n            tabloid: [\n                792,\n                1224\n            ],\n            \"credit-card\": [\n                153,\n                243\n            ]\n        };\n        switch(n){\n            case \"pt\":\n                a = 1;\n                break;\n            case \"mm\":\n                a = 72 / 25.4;\n                break;\n            case \"cm\":\n                a = 72 / 2.54;\n                break;\n            case \"in\":\n                a = 72;\n                break;\n            case \"px\":\n                a = .75;\n                break;\n            case \"pc\":\n            case \"em\":\n                a = 12;\n                break;\n            case \"ex\":\n                a = 6;\n                break;\n            default:\n                throw \"Invalid unit: \" + n;\n        }\n        var u, c = 0, l = 0;\n        if (s.hasOwnProperty(o)) c = s[o][1] / a, l = s[o][0] / a;\n        else try {\n            c = r[1], l = r[0];\n        } catch (h) {\n            throw new Error(\"Invalid format: \" + r);\n        }\n        if (\"p\" === e || \"portrait\" === e) e = \"p\", l > c && (u = l, l = c, c = u);\n        else {\n            if (\"l\" !== e && \"landscape\" !== e) throw \"Invalid orientation: \" + e;\n            e = \"l\", c > l && (u = l, l = c, c = u);\n        }\n        return {\n            width: l,\n            height: c,\n            unit: n,\n            k: a,\n            orientation: e\n        };\n    }, e.html = function(t, e) {\n        (e = e || {}).callback = e.callback || function() {}, e.html2canvas = e.html2canvas || {}, e.html2canvas.canvas = e.html2canvas.canvas || this.canvas, e.jsPDF = e.jsPDF || this, e.fontFaces = e.fontFaces ? e.fontFaces.map(Ct) : null;\n        var n = new u(e);\n        return e.worker ? n : n.from(t).doCallback();\n    };\n}(E.API), E.API.addJS = function(t) {\n    return Ut = t, this.internal.events.subscribe(\"postPutResources\", function() {\n        Tt = this.internal.newObject(), this.internal.out(\"<<\"), this.internal.out(\"/Names [(EmbeddedJS) \" + (Tt + 1) + \" 0 R]\"), this.internal.out(\">>\"), this.internal.out(\"endobj\"), zt = this.internal.newObject(), this.internal.out(\"<<\"), this.internal.out(\"/S /JavaScript\"), this.internal.out(\"/JS (\" + Ut + \")\"), this.internal.out(\">>\"), this.internal.out(\"endobj\");\n    }), this.internal.events.subscribe(\"putCatalog\", function() {\n        void 0 !== Tt && void 0 !== zt && this.internal.out(\"/Names <</JavaScript \" + Tt + \" 0 R>>\");\n    }), this;\n}, /**\n * @license\n * Copyright (c) 2014 Steven Spungin (TwelveTone LLC)  steven@twelvetone.tv\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e;\n    t.events.push([\n        \"postPutResources\",\n        function() {\n            var t = this, n = /^(\\d+) 0 obj$/;\n            if (this.outline.root.children.length > 0) for(var r = t.outline.render().split(/\\r\\n/), i = 0; i < r.length; i++){\n                var a = r[i], o = n.exec(a);\n                if (null != o) {\n                    var s = o[1];\n                    t.internal.newObjectDeferredBegin(s, !1);\n                }\n                t.internal.write(a);\n            }\n            if (this.outline.createNamedDestinations) {\n                var u = this.internal.pages.length, c = [];\n                for(i = 0; i < u; i++){\n                    var l = t.internal.newObject();\n                    c.push(l);\n                    var h = t.internal.getPageInfo(i + 1);\n                    t.internal.write(\"<< /D[\" + h.objId + \" 0 R /XYZ null null null]>> endobj\");\n                }\n                var f = t.internal.newObject();\n                for(t.internal.write(\"<< /Names [ \"), i = 0; i < c.length; i++)t.internal.write(\"(page_\" + (i + 1) + \")\" + c[i] + \" 0 R\");\n                t.internal.write(\" ] >>\", \"endobj\"), e = t.internal.newObject(), t.internal.write(\"<< /Dests \" + f + \" 0 R\"), t.internal.write(\">>\", \"endobj\");\n            }\n        }\n    ]), t.events.push([\n        \"putCatalog\",\n        function() {\n            var t = this;\n            t.outline.root.children.length > 0 && (t.internal.write(\"/Outlines\", this.outline.makeRef(this.outline.root)), this.outline.createNamedDestinations && t.internal.write(\"/Names \" + e + \" 0 R\"));\n        }\n    ]), t.events.push([\n        \"initialized\",\n        function() {\n            var t = this;\n            t.outline = {\n                createNamedDestinations: !1,\n                root: {\n                    children: []\n                }\n            }, t.outline.add = function(t, e, n) {\n                var r = {\n                    title: e,\n                    options: n,\n                    children: []\n                };\n                return null == t && (t = this.root), t.children.push(r), r;\n            }, t.outline.render = function() {\n                return this.ctx = {}, this.ctx.val = \"\", this.ctx.pdf = t, this.genIds_r(this.root), this.renderRoot(this.root), this.renderItems(this.root), this.ctx.val;\n            }, t.outline.genIds_r = function(e) {\n                e.id = t.internal.newObjectDeferred();\n                for(var n = 0; n < e.children.length; n++)this.genIds_r(e.children[n]);\n            }, t.outline.renderRoot = function(t) {\n                this.objStart(t), this.line(\"/Type /Outlines\"), t.children.length > 0 && (this.line(\"/First \" + this.makeRef(t.children[0])), this.line(\"/Last \" + this.makeRef(t.children[t.children.length - 1]))), this.line(\"/Count \" + this.count_r({\n                    count: 0\n                }, t)), this.objEnd();\n            }, t.outline.renderItems = function(e) {\n                for(var n = this.ctx.pdf.internal.getVerticalCoordinateString, r = 0; r < e.children.length; r++){\n                    var i = e.children[r];\n                    this.objStart(i), this.line(\"/Title \" + this.makeString(i.title)), this.line(\"/Parent \" + this.makeRef(e)), r > 0 && this.line(\"/Prev \" + this.makeRef(e.children[r - 1])), r < e.children.length - 1 && this.line(\"/Next \" + this.makeRef(e.children[r + 1])), i.children.length > 0 && (this.line(\"/First \" + this.makeRef(i.children[0])), this.line(\"/Last \" + this.makeRef(i.children[i.children.length - 1])));\n                    var a = this.count = this.count_r({\n                        count: 0\n                    }, i);\n                    if (a > 0 && this.line(\"/Count \" + a), i.options && i.options.pageNumber) {\n                        var o = t.internal.getPageInfo(i.options.pageNumber);\n                        this.line(\"/Dest [\" + o.objId + \" 0 R /XYZ 0 \" + n(0) + \" 0]\");\n                    }\n                    this.objEnd();\n                }\n                for(var s = 0; s < e.children.length; s++)this.renderItems(e.children[s]);\n            }, t.outline.line = function(t) {\n                this.ctx.val += t + \"\\r\\n\";\n            }, t.outline.makeRef = function(t) {\n                return t.id + \" 0 R\";\n            }, t.outline.makeString = function(e) {\n                return \"(\" + t.internal.pdfEscape(e) + \")\";\n            }, t.outline.objStart = function(t) {\n                this.ctx.val += \"\\r\\n\" + t.id + \" 0 obj\\r\\n<<\\r\\n\";\n            }, t.outline.objEnd = function() {\n                this.ctx.val += \">> \\r\\nendobj\\r\\n\";\n            }, t.outline.count_r = function(t, e) {\n                for(var n = 0; n < e.children.length; n++)t.count++, this.count_r(t, e.children[n]);\n                return t.count;\n            };\n        }\n    ]);\n}(E.API), /**\n * @license\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = [\n        192,\n        193,\n        194,\n        195,\n        196,\n        197,\n        198,\n        199\n    ];\n    t.processJPEG = function(t, n, r, i, a, o) {\n        var s, u = this.decode.DCT_DECODE, c = null;\n        if (\"string\" == typeof t || this.__addimage__.isArrayBuffer(t) || this.__addimage__.isArrayBufferView(t)) {\n            switch(t = a || t, t = this.__addimage__.isArrayBuffer(t) ? new Uint8Array(t) : t, s = function(t) {\n                for(var n, r = 256 * t.charCodeAt(4) + t.charCodeAt(5), i = t.length, a = {\n                    width: 0,\n                    height: 0,\n                    numcomponents: 1\n                }, o = 4; o < i; o += 2){\n                    if (o += r, -1 !== e.indexOf(t.charCodeAt(o + 1))) {\n                        n = 256 * t.charCodeAt(o + 5) + t.charCodeAt(o + 6), a = {\n                            width: 256 * t.charCodeAt(o + 7) + t.charCodeAt(o + 8),\n                            height: n,\n                            numcomponents: t.charCodeAt(o + 9)\n                        };\n                        break;\n                    }\n                    r = 256 * t.charCodeAt(o + 2) + t.charCodeAt(o + 3);\n                }\n                return a;\n            }(t = this.__addimage__.isArrayBufferView(t) ? this.__addimage__.arrayBufferToBinaryString(t) : t), s.numcomponents){\n                case 1:\n                    o = this.color_spaces.DEVICE_GRAY;\n                    break;\n                case 4:\n                    o = this.color_spaces.DEVICE_CMYK;\n                    break;\n                case 3:\n                    o = this.color_spaces.DEVICE_RGB;\n            }\n            c = {\n                data: t,\n                width: s.width,\n                height: s.height,\n                colorSpace: o,\n                bitsPerComponent: 8,\n                filter: u,\n                index: n,\n                alias: r\n            };\n        }\n        return c;\n    };\n}(E.API), E.API.processPNG = function(t, i, a, o) {\n    if (this.__addimage__.isArrayBuffer(t) && (t = new Uint8Array(t)), this.__addimage__.isArrayBufferView(t)) {\n        var s, u = (0,fast_png__WEBPACK_IMPORTED_MODULE_2__.decode)(t, {\n            checkCrc: !0\n        }), c = u.width, l = u.height, h = u.channels, f = u.palette, d = u.depth;\n        s = f && 1 === h ? function(t) {\n            for(var e = t.width, r = t.height, i = t.data, a = t.palette, o = t.depth, s = !1, u = [], c = [], l = void 0, h = !1, f = 0, d = 0; d < a.length; d++){\n                var p = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(a[d], 4), g = p[0], m = p[1], v = p[2], b = p[3];\n                u.push(g, m, v), null != b && (0 === b ? (f++, c.length < 1 && c.push(d)) : b < 255 && (h = !0));\n            }\n            if (h || f > 1) {\n                s = !0, c = void 0;\n                var y = e * r;\n                l = new Uint8Array(y);\n                for(var w = new DataView(i.buffer), N = 0; N < y; N++){\n                    var L = re(w, N, o), x = _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default()(a[L], 4)[3];\n                    l[N] = x;\n                }\n            } else 0 === f && (c = void 0);\n            return {\n                colorSpace: \"Indexed\",\n                colorsPerPixel: 1,\n                sMaskBitsPerComponent: s ? 8 : void 0,\n                colorBytes: i,\n                alphaBytes: l,\n                needSMask: s,\n                palette: u,\n                mask: c\n            };\n        }(u) : 2 === h || 4 === h ? function(t) {\n            for(var e = t.data, n = t.width, r = t.height, i = t.channels, a = t.depth, o = 2 === i ? \"DeviceGray\" : \"DeviceRGB\", s = i - 1, u = n * r, c = s, l = u * c, h = 1 * u, f = Math.ceil(l * a / 8), d = Math.ceil(h * a / 8), p = new Uint8Array(f), g = new Uint8Array(d), m = new DataView(e.buffer), v = new DataView(p.buffer), b = new DataView(g.buffer), y = !1, w = 0; w < u; w++){\n                for(var N = w * i, L = 0; L < c; L++)ie(v, re(m, N + L, a), w * c + L, a);\n                var x = re(m, N + c, a);\n                x < (1 << a) - 1 && (y = !0), ie(b, x, 1 * w, a);\n            }\n            return {\n                colorSpace: o,\n                colorsPerPixel: s,\n                sMaskBitsPerComponent: y ? a : void 0,\n                colorBytes: p,\n                alphaBytes: g,\n                needSMask: y\n            };\n        }(u) : function(t) {\n            var e = t.data, n = 1 === t.channels ? \"DeviceGray\" : \"DeviceRGB\";\n            return {\n                colorSpace: n,\n                colorsPerPixel: \"DeviceGray\" === n ? 1 : 3,\n                colorBytes: e instanceof Uint16Array ? function(t) {\n                    for(var e = t.length, n = new Uint8Array(2 * e), r = new DataView(n.buffer, n.byteOffset, n.byteLength), i = 0; i < e; i++)r.setUint16(2 * i, t[i], !1);\n                    return n;\n                }(e) : e,\n                needSMask: !1\n            };\n        }(u);\n        var p, g, m, v = s, b = v.colorSpace, y = v.colorsPerPixel, w = v.sMaskBitsPerComponent, N = v.colorBytes, L = v.alphaBytes, x = v.needSMask, A = v.palette, S = v.mask, _ = null;\n        return o !== E.API.image_compression.NONE && \"function\" == typeof fflate__WEBPACK_IMPORTED_MODULE_3__.zlibSync ? (_ = function(t) {\n            var e;\n            switch(t){\n                case E.API.image_compression.FAST:\n                    e = 11;\n                    break;\n                case E.API.image_compression.MEDIUM:\n                    e = 13;\n                    break;\n                case E.API.image_compression.SLOW:\n                    e = 14;\n                    break;\n                default:\n                    e = 12;\n            }\n            return e;\n        }(o), p = this.decode.FLATE_DECODE, g = \"/Predictor \".concat(_, \" /Colors \").concat(y, \" /BitsPerComponent \").concat(d, \" /Columns \").concat(c), t = Xt(N, Math.ceil(c * y * d / 8), y, d, o), x && (m = Xt(L, Math.ceil(c * w / 8), 1, w, o))) : (p = void 0, g = void 0, t = N, x && (m = L)), (this.__addimage__.isArrayBuffer(t) || this.__addimage__.isArrayBufferView(t)) && (t = this.__addimage__.arrayBufferToBinaryString(t)), (m && this.__addimage__.isArrayBuffer(m) || this.__addimage__.isArrayBufferView(m)) && (m = this.__addimage__.arrayBufferToBinaryString(m)), {\n            alias: a,\n            data: t,\n            index: i,\n            filter: p,\n            decodeParameters: g,\n            transparency: S,\n            palette: A,\n            sMask: m,\n            predictor: _,\n            width: c,\n            height: l,\n            bitsPerComponent: d,\n            sMaskBitsPerComponent: w,\n            colorSpace: b\n        };\n    }\n}, function(t) {\n    t.processGIF89A = function(e, n, r, i) {\n        var a = new oe(e), o = a.width, s = a.height, u = [];\n        a.decodeAndBlitFrameRGBA(0, u);\n        var c = {\n            data: u,\n            width: o,\n            height: s\n        }, l = new ue(100).encode(c, 100);\n        return t.processJPEG.call(this, l, n, r, i);\n    }, t.processGIF87A = t.processGIF89A;\n}(E.API), ce.prototype.parseHeader = function() {\n    if (this.fileSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.reserved = this.datav.getUint32(this.pos, !0), this.pos += 4, this.offset = this.datav.getUint32(this.pos, !0), this.pos += 4, this.headerSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.width = this.datav.getUint32(this.pos, !0), this.pos += 4, this.height = this.datav.getInt32(this.pos, !0), this.pos += 4, this.planes = this.datav.getUint16(this.pos, !0), this.pos += 2, this.bitPP = this.datav.getUint16(this.pos, !0), this.pos += 2, this.compress = this.datav.getUint32(this.pos, !0), this.pos += 4, this.rawSize = this.datav.getUint32(this.pos, !0), this.pos += 4, this.hr = this.datav.getUint32(this.pos, !0), this.pos += 4, this.vr = this.datav.getUint32(this.pos, !0), this.pos += 4, this.colors = this.datav.getUint32(this.pos, !0), this.pos += 4, this.importantColors = this.datav.getUint32(this.pos, !0), this.pos += 4, 16 === this.bitPP && this.is_with_alpha && (this.bitPP = 15), this.bitPP < 15) {\n        var t = 0 === this.colors ? 1 << this.bitPP : this.colors;\n        this.palette = new Array(t);\n        for(var e = 0; e < t; e++){\n            var n = this.datav.getUint8(this.pos++, !0), r = this.datav.getUint8(this.pos++, !0), i = this.datav.getUint8(this.pos++, !0), a = this.datav.getUint8(this.pos++, !0);\n            this.palette[e] = {\n                red: i,\n                green: r,\n                blue: n,\n                quad: a\n            };\n        }\n    }\n    this.height < 0 && (this.height *= -1, this.bottom_up = !1);\n}, ce.prototype.parseBGR = function() {\n    this.pos = this.offset;\n    try {\n        var t = \"bit\" + this.bitPP, e = this.width * this.height * 4;\n        this.data = new Uint8Array(e), this[t]();\n    } catch (n) {\n        o.log(\"bit decode error:\" + n);\n    }\n}, ce.prototype.bit1 = function() {\n    var t, e = Math.ceil(this.width / 8), n = e % 4;\n    for(t = this.height - 1; t >= 0; t--){\n        for(var r = this.bottom_up ? t : this.height - 1 - t, i = 0; i < e; i++)for(var a = this.datav.getUint8(this.pos++, !0), o = r * this.width * 4 + 8 * i * 4, s = 0; s < 8 && 8 * i + s < this.width; s++){\n            var u = this.palette[a >> 7 - s & 1];\n            this.data[o + 4 * s] = u.blue, this.data[o + 4 * s + 1] = u.green, this.data[o + 4 * s + 2] = u.red, this.data[o + 4 * s + 3] = 255;\n        }\n        0 !== n && (this.pos += 4 - n);\n    }\n}, ce.prototype.bit4 = function() {\n    for(var t = Math.ceil(this.width / 2), e = t % 4, n = this.height - 1; n >= 0; n--){\n        for(var r = this.bottom_up ? n : this.height - 1 - n, i = 0; i < t; i++){\n            var a = this.datav.getUint8(this.pos++, !0), o = r * this.width * 4 + 2 * i * 4, s = a >> 4, u = 15 & a, c = this.palette[s];\n            if (this.data[o] = c.blue, this.data[o + 1] = c.green, this.data[o + 2] = c.red, this.data[o + 3] = 255, 2 * i + 1 >= this.width) break;\n            c = this.palette[u], this.data[o + 4] = c.blue, this.data[o + 4 + 1] = c.green, this.data[o + 4 + 2] = c.red, this.data[o + 4 + 3] = 255;\n        }\n        0 !== e && (this.pos += 4 - e);\n    }\n}, ce.prototype.bit8 = function() {\n    for(var t = this.width % 4, e = this.height - 1; e >= 0; e--){\n        for(var n = this.bottom_up ? e : this.height - 1 - e, r = 0; r < this.width; r++){\n            var i = this.datav.getUint8(this.pos++, !0), a = n * this.width * 4 + 4 * r;\n            if (i < this.palette.length) {\n                var o = this.palette[i];\n                this.data[a] = o.red, this.data[a + 1] = o.green, this.data[a + 2] = o.blue, this.data[a + 3] = 255;\n            } else this.data[a] = 255, this.data[a + 1] = 255, this.data[a + 2] = 255, this.data[a + 3] = 255;\n        }\n        0 !== t && (this.pos += 4 - t);\n    }\n}, ce.prototype.bit15 = function() {\n    for(var t = this.width % 3, e = parseInt(\"11111\", 2), n = this.height - 1; n >= 0; n--){\n        for(var r = this.bottom_up ? n : this.height - 1 - n, i = 0; i < this.width; i++){\n            var a = this.datav.getUint16(this.pos, !0);\n            this.pos += 2;\n            var o = (a & e) / e * 255 | 0, s = (a >> 5 & e) / e * 255 | 0, u = (a >> 10 & e) / e * 255 | 0, c = a >> 15 ? 255 : 0, l = r * this.width * 4 + 4 * i;\n            this.data[l] = u, this.data[l + 1] = s, this.data[l + 2] = o, this.data[l + 3] = c;\n        }\n        this.pos += t;\n    }\n}, ce.prototype.bit16 = function() {\n    for(var t = this.width % 3, e = parseInt(\"11111\", 2), n = parseInt(\"111111\", 2), r = this.height - 1; r >= 0; r--){\n        for(var i = this.bottom_up ? r : this.height - 1 - r, a = 0; a < this.width; a++){\n            var o = this.datav.getUint16(this.pos, !0);\n            this.pos += 2;\n            var s = (o & e) / e * 255 | 0, u = (o >> 5 & n) / n * 255 | 0, c = (o >> 11) / e * 255 | 0, l = i * this.width * 4 + 4 * a;\n            this.data[l] = c, this.data[l + 1] = u, this.data[l + 2] = s, this.data[l + 3] = 255;\n        }\n        this.pos += t;\n    }\n}, ce.prototype.bit24 = function() {\n    for(var t = this.height - 1; t >= 0; t--){\n        for(var e = this.bottom_up ? t : this.height - 1 - t, n = 0; n < this.width; n++){\n            var r = this.datav.getUint8(this.pos++, !0), i = this.datav.getUint8(this.pos++, !0), a = this.datav.getUint8(this.pos++, !0), o = e * this.width * 4 + 4 * n;\n            this.data[o] = a, this.data[o + 1] = i, this.data[o + 2] = r, this.data[o + 3] = 255;\n        }\n        this.pos += this.width % 4;\n    }\n}, ce.prototype.bit32 = function() {\n    for(var t = this.height - 1; t >= 0; t--)for(var e = this.bottom_up ? t : this.height - 1 - t, n = 0; n < this.width; n++){\n        var r = this.datav.getUint8(this.pos++, !0), i = this.datav.getUint8(this.pos++, !0), a = this.datav.getUint8(this.pos++, !0), o = this.datav.getUint8(this.pos++, !0), s = e * this.width * 4 + 4 * n;\n        this.data[s] = a, this.data[s + 1] = i, this.data[s + 2] = r, this.data[s + 3] = o;\n    }\n}, ce.prototype.getData = function() {\n    return this.data;\n}, /**\n * @license\n * Copyright (c) 2018 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    t.processBMP = function(e, n, r, i) {\n        var a = new ce(e, !1), o = a.width, s = a.height, u = {\n            data: a.getData(),\n            width: o,\n            height: s\n        }, c = new ue(100).encode(u, 100);\n        return t.processJPEG.call(this, c, n, r, i);\n    };\n}(E.API), le.prototype.getData = function() {\n    return this.data;\n}, /**\n * @license\n * Copyright (c) 2019 Aras Abbasi\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    t.processWEBP = function(e, n, r, i) {\n        var a = new le(e), o = a.width, s = a.height, u = {\n            data: a.getData(),\n            width: o,\n            height: s\n        }, c = new ue(100).encode(u, 100);\n        return t.processJPEG.call(this, c, n, r, i);\n    };\n}(E.API), E.API.processRGBA = function(t, e, n) {\n    for(var r = t.data, i = r.length, a = new Uint8Array(i / 4 * 3), o = new Uint8Array(i / 4), s = 0, u = 0, c = 0; c < i; c += 4){\n        var l = r[c], h = r[c + 1], f = r[c + 2], d = r[c + 3];\n        a[s++] = l, a[s++] = h, a[s++] = f, o[u++] = d;\n    }\n    var p = this.__addimage__.arrayBufferToBinaryString(a);\n    return {\n        alpha: this.__addimage__.arrayBufferToBinaryString(o),\n        data: p,\n        index: e,\n        alias: n,\n        colorSpace: \"DeviceRGB\",\n        bitsPerComponent: 8,\n        width: t.width,\n        height: t.height\n    };\n}, E.API.setLanguage = function(t) {\n    return void 0 === this.internal.languageSettings && (this.internal.languageSettings = {}, this.internal.languageSettings.isSubscribed = !1), void 0 !== ({\n        af: \"Afrikaans\",\n        sq: \"Albanian\",\n        ar: \"Arabic (Standard)\",\n        \"ar-DZ\": \"Arabic (Algeria)\",\n        \"ar-BH\": \"Arabic (Bahrain)\",\n        \"ar-EG\": \"Arabic (Egypt)\",\n        \"ar-IQ\": \"Arabic (Iraq)\",\n        \"ar-JO\": \"Arabic (Jordan)\",\n        \"ar-KW\": \"Arabic (Kuwait)\",\n        \"ar-LB\": \"Arabic (Lebanon)\",\n        \"ar-LY\": \"Arabic (Libya)\",\n        \"ar-MA\": \"Arabic (Morocco)\",\n        \"ar-OM\": \"Arabic (Oman)\",\n        \"ar-QA\": \"Arabic (Qatar)\",\n        \"ar-SA\": \"Arabic (Saudi Arabia)\",\n        \"ar-SY\": \"Arabic (Syria)\",\n        \"ar-TN\": \"Arabic (Tunisia)\",\n        \"ar-AE\": \"Arabic (U.A.E.)\",\n        \"ar-YE\": \"Arabic (Yemen)\",\n        an: \"Aragonese\",\n        hy: \"Armenian\",\n        as: \"Assamese\",\n        ast: \"Asturian\",\n        az: \"Azerbaijani\",\n        eu: \"Basque\",\n        be: \"Belarusian\",\n        bn: \"Bengali\",\n        bs: \"Bosnian\",\n        br: \"Breton\",\n        bg: \"Bulgarian\",\n        my: \"Burmese\",\n        ca: \"Catalan\",\n        ch: \"Chamorro\",\n        ce: \"Chechen\",\n        zh: \"Chinese\",\n        \"zh-HK\": \"Chinese (Hong Kong)\",\n        \"zh-CN\": \"Chinese (PRC)\",\n        \"zh-SG\": \"Chinese (Singapore)\",\n        \"zh-TW\": \"Chinese (Taiwan)\",\n        cv: \"Chuvash\",\n        co: \"Corsican\",\n        cr: \"Cree\",\n        hr: \"Croatian\",\n        cs: \"Czech\",\n        da: \"Danish\",\n        nl: \"Dutch (Standard)\",\n        \"nl-BE\": \"Dutch (Belgian)\",\n        en: \"English\",\n        \"en-AU\": \"English (Australia)\",\n        \"en-BZ\": \"English (Belize)\",\n        \"en-CA\": \"English (Canada)\",\n        \"en-IE\": \"English (Ireland)\",\n        \"en-JM\": \"English (Jamaica)\",\n        \"en-NZ\": \"English (New Zealand)\",\n        \"en-PH\": \"English (Philippines)\",\n        \"en-ZA\": \"English (South Africa)\",\n        \"en-TT\": \"English (Trinidad & Tobago)\",\n        \"en-GB\": \"English (United Kingdom)\",\n        \"en-US\": \"English (United States)\",\n        \"en-ZW\": \"English (Zimbabwe)\",\n        eo: \"Esperanto\",\n        et: \"Estonian\",\n        fo: \"Faeroese\",\n        fj: \"Fijian\",\n        fi: \"Finnish\",\n        fr: \"French (Standard)\",\n        \"fr-BE\": \"French (Belgium)\",\n        \"fr-CA\": \"French (Canada)\",\n        \"fr-FR\": \"French (France)\",\n        \"fr-LU\": \"French (Luxembourg)\",\n        \"fr-MC\": \"French (Monaco)\",\n        \"fr-CH\": \"French (Switzerland)\",\n        fy: \"Frisian\",\n        fur: \"Friulian\",\n        gd: \"Gaelic (Scots)\",\n        \"gd-IE\": \"Gaelic (Irish)\",\n        gl: \"Galacian\",\n        ka: \"Georgian\",\n        de: \"German (Standard)\",\n        \"de-AT\": \"German (Austria)\",\n        \"de-DE\": \"German (Germany)\",\n        \"de-LI\": \"German (Liechtenstein)\",\n        \"de-LU\": \"German (Luxembourg)\",\n        \"de-CH\": \"German (Switzerland)\",\n        el: \"Greek\",\n        gu: \"Gujurati\",\n        ht: \"Haitian\",\n        he: \"Hebrew\",\n        hi: \"Hindi\",\n        hu: \"Hungarian\",\n        is: \"Icelandic\",\n        id: \"Indonesian\",\n        iu: \"Inuktitut\",\n        ga: \"Irish\",\n        it: \"Italian (Standard)\",\n        \"it-CH\": \"Italian (Switzerland)\",\n        ja: \"Japanese\",\n        kn: \"Kannada\",\n        ks: \"Kashmiri\",\n        kk: \"Kazakh\",\n        km: \"Khmer\",\n        ky: \"Kirghiz\",\n        tlh: \"Klingon\",\n        ko: \"Korean\",\n        \"ko-KP\": \"Korean (North Korea)\",\n        \"ko-KR\": \"Korean (South Korea)\",\n        la: \"Latin\",\n        lv: \"Latvian\",\n        lt: \"Lithuanian\",\n        lb: \"Luxembourgish\",\n        mk: \"North Macedonia\",\n        ms: \"Malay\",\n        ml: \"Malayalam\",\n        mt: \"Maltese\",\n        mi: \"Maori\",\n        mr: \"Marathi\",\n        mo: \"Moldavian\",\n        nv: \"Navajo\",\n        ng: \"Ndonga\",\n        ne: \"Nepali\",\n        no: \"Norwegian\",\n        nb: \"Norwegian (Bokmal)\",\n        nn: \"Norwegian (Nynorsk)\",\n        oc: \"Occitan\",\n        or: \"Oriya\",\n        om: \"Oromo\",\n        fa: \"Persian\",\n        \"fa-IR\": \"Persian/Iran\",\n        pl: \"Polish\",\n        pt: \"Portuguese\",\n        \"pt-BR\": \"Portuguese (Brazil)\",\n        pa: \"Punjabi\",\n        \"pa-IN\": \"Punjabi (India)\",\n        \"pa-PK\": \"Punjabi (Pakistan)\",\n        qu: \"Quechua\",\n        rm: \"Rhaeto-Romanic\",\n        ro: \"Romanian\",\n        \"ro-MO\": \"Romanian (Moldavia)\",\n        ru: \"Russian\",\n        \"ru-MO\": \"Russian (Moldavia)\",\n        sz: \"Sami (Lappish)\",\n        sg: \"Sango\",\n        sa: \"Sanskrit\",\n        sc: \"Sardinian\",\n        sd: \"Sindhi\",\n        si: \"Singhalese\",\n        sr: \"Serbian\",\n        sk: \"Slovak\",\n        sl: \"Slovenian\",\n        so: \"Somani\",\n        sb: \"Sorbian\",\n        es: \"Spanish\",\n        \"es-AR\": \"Spanish (Argentina)\",\n        \"es-BO\": \"Spanish (Bolivia)\",\n        \"es-CL\": \"Spanish (Chile)\",\n        \"es-CO\": \"Spanish (Colombia)\",\n        \"es-CR\": \"Spanish (Costa Rica)\",\n        \"es-DO\": \"Spanish (Dominican Republic)\",\n        \"es-EC\": \"Spanish (Ecuador)\",\n        \"es-SV\": \"Spanish (El Salvador)\",\n        \"es-GT\": \"Spanish (Guatemala)\",\n        \"es-HN\": \"Spanish (Honduras)\",\n        \"es-MX\": \"Spanish (Mexico)\",\n        \"es-NI\": \"Spanish (Nicaragua)\",\n        \"es-PA\": \"Spanish (Panama)\",\n        \"es-PY\": \"Spanish (Paraguay)\",\n        \"es-PE\": \"Spanish (Peru)\",\n        \"es-PR\": \"Spanish (Puerto Rico)\",\n        \"es-ES\": \"Spanish (Spain)\",\n        \"es-UY\": \"Spanish (Uruguay)\",\n        \"es-VE\": \"Spanish (Venezuela)\",\n        sx: \"Sutu\",\n        sw: \"Swahili\",\n        sv: \"Swedish\",\n        \"sv-FI\": \"Swedish (Finland)\",\n        \"sv-SV\": \"Swedish (Sweden)\",\n        ta: \"Tamil\",\n        tt: \"Tatar\",\n        te: \"Teluga\",\n        th: \"Thai\",\n        tig: \"Tigre\",\n        ts: \"Tsonga\",\n        tn: \"Tswana\",\n        tr: \"Turkish\",\n        tk: \"Turkmen\",\n        uk: \"Ukrainian\",\n        hsb: \"Upper Sorbian\",\n        ur: \"Urdu\",\n        ve: \"Venda\",\n        vi: \"Vietnamese\",\n        vo: \"Volapuk\",\n        wa: \"Walloon\",\n        cy: \"Welsh\",\n        xh: \"Xhosa\",\n        ji: \"Yiddish\",\n        zu: \"Zulu\"\n    })[t] && (this.internal.languageSettings.languageCode = t, !1 === this.internal.languageSettings.isSubscribed && (this.internal.events.subscribe(\"putCatalog\", function() {\n        this.internal.write(\"/Lang (\" + this.internal.languageSettings.languageCode + \")\");\n    }), this.internal.languageSettings.isSubscribed = !0)), this;\n}, Ht = E.API, Wt = Ht.getCharWidthsArray = function(e, n) {\n    var r, i, a = (n = n || {}).font || this.internal.getFont(), o = n.fontSize || this.internal.getFontSize(), s = n.charSpace || this.internal.getCharSpace(), u = n.widths ? n.widths : a.metadata.Unicode.widths, c = u.fof ? u.fof : 1, l = n.kerning ? n.kerning : a.metadata.Unicode.kerning, h = l.fof ? l.fof : 1, f = !1 !== n.doKerning, d = 0, p = e.length, g = 0, m = u[0] || c, v = [];\n    for(r = 0; r < p; r++)i = e.charCodeAt(r), \"function\" == typeof a.metadata.widthOfString ? v.push((a.metadata.widthOfGlyph(a.metadata.characterToGlyph(i)) + s * (1e3 / o) || 0) / 1e3) : (d = f && \"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(l[i]) && !isNaN(parseInt(l[i][g], 10)) ? l[i][g] / h : 0, v.push((u[i] || m) / c + d)), g = i;\n    return v;\n}, Vt = Ht.getStringUnitWidth = function(t, e) {\n    var n = (e = e || {}).fontSize || this.internal.getFontSize(), r = e.font || this.internal.getFont(), i = e.charSpace || this.internal.getCharSpace();\n    return Ht.processArabic && (t = Ht.processArabic(t)), \"function\" == typeof r.metadata.widthOfString ? r.metadata.widthOfString(t, n, i) / n : Wt.apply(this, arguments).reduce(function(t, e) {\n        return t + e;\n    }, 0);\n}, Gt = function(t, e, n, r) {\n    for(var i = [], a = 0, o = t.length, s = 0; a !== o && s + e[a] < n;)s += e[a], a++;\n    i.push(t.slice(0, a));\n    var u = a;\n    for(s = 0; a !== o;)s + e[a] > r && (i.push(t.slice(u, a)), s = 0, u = a), s += e[a], a++;\n    return u !== a && i.push(t.slice(u, a)), i;\n}, Yt = function(t, e, n) {\n    n || (n = {});\n    var r, i, a, o, s, u, c, l = [], h = [\n        l\n    ], f = n.textIndent || 0, d = 0, p = 0, g = t.split(\" \"), m = Wt.apply(this, [\n        \" \",\n        n\n    ])[0];\n    if (u = -1 === n.lineIndent ? g[0].length + 2 : n.lineIndent || 0) {\n        var v = Array(u).join(\" \"), b = [];\n        g.map(function(t) {\n            (t = t.split(/\\s*\\n/)).length > 1 ? b = b.concat(t.map(function(t, e) {\n                return (e && t.length ? \"\\n\" : \"\") + t;\n            })) : b.push(t[0]);\n        }), g = b, u = Vt.apply(this, [\n            v,\n            n\n        ]);\n    }\n    for(a = 0, o = g.length; a < o; a++){\n        var y = 0;\n        if (r = g[a], u && \"\\n\" == r[0] && (r = r.substr(1), y = 1), f + d + (p = (i = Wt.apply(this, [\n            r,\n            n\n        ])).reduce(function(t, e) {\n            return t + e;\n        }, 0)) > e || y) {\n            if (p > e) {\n                for(s = Gt.apply(this, [\n                    r,\n                    i,\n                    e - (f + d),\n                    e\n                ]), l.push(s.shift()), l = [\n                    s.pop()\n                ]; s.length;)h.push([\n                    s.shift()\n                ]);\n                p = i.slice(r.length - (l[0] ? l[0].length : 0)).reduce(function(t, e) {\n                    return t + e;\n                }, 0);\n            } else l = [\n                r\n            ];\n            h.push(l), f = p + u, d = m;\n        } else l.push(r), f += d + p, d = m;\n    }\n    return c = u ? function(t, e) {\n        return (e ? v : \"\") + t.join(\" \");\n    } : function(t) {\n        return t.join(\" \");\n    }, h.map(c);\n}, Ht.splitTextToSize = function(t, e, n) {\n    var r, i = (n = n || {}).fontSize || this.internal.getFontSize(), a = (function(t) {\n        if (t.widths && t.kerning) return {\n            widths: t.widths,\n            kerning: t.kerning\n        };\n        var e = this.internal.getFont(t.fontName, t.fontStyle), n = \"Unicode\";\n        return e.metadata[n] ? {\n            widths: e.metadata[n].widths || {\n                0: 1\n            },\n            kerning: e.metadata[n].kerning || {}\n        } : {\n            font: e.metadata,\n            fontSize: this.internal.getFontSize(),\n            charSpace: this.internal.getCharSpace()\n        };\n    }).call(this, n);\n    r = Array.isArray(t) ? t : String(t).split(/\\r?\\n/);\n    var o = 1 * this.internal.scaleFactor * e / i;\n    a.textIndent = n.textIndent ? 1 * n.textIndent * this.internal.scaleFactor / i : 0, a.lineIndent = n.lineIndent;\n    var s, u, c = [];\n    for(s = 0, u = r.length; s < u; s++)c = c.concat(Yt.apply(this, [\n        r[s],\n        o,\n        a\n    ]));\n    return c;\n}, function(e) {\n    e.__fontmetrics__ = e.__fontmetrics__ || {};\n    for(var n = \"0123456789abcdef\", r = \"klmnopqrstuvwxyz\", i = {}, a = {}, o = 0; o < 16; o++)i[r[o]] = n[o], a[n[o]] = r[o];\n    var s = function(t) {\n        return \"0x\" + parseInt(t, 10).toString(16);\n    }, u = e.__fontmetrics__.compress = function(e) {\n        var n, r, i, o, c = [\n            \"{\"\n        ];\n        for(var l in e){\n            if (n = e[l], isNaN(parseInt(l, 10)) ? r = \"'\" + l + \"'\" : (l = parseInt(l, 10), r = (r = s(l).slice(2)).slice(0, -1) + a[r.slice(-1)]), \"number\" == typeof n) n < 0 ? (i = s(n).slice(3), o = \"-\") : (i = s(n).slice(2), o = \"\"), i = o + i.slice(0, -1) + a[i.slice(-1)];\n            else {\n                if (\"object\" !== _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(n)) throw new Error(\"Don't know what to do with value type \" + _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(n) + \".\");\n                i = u(n);\n            }\n            c.push(r + i);\n        }\n        return c.push(\"}\"), c.join(\"\");\n    }, c = e.__fontmetrics__.uncompress = function(t) {\n        if (\"string\" != typeof t) throw new Error(\"Invalid argument passed to uncompress.\");\n        for(var e, n, r, a, o = {}, s = 1, u = o, c = [], l = \"\", h = \"\", f = t.length - 1, d = 1; d < f; d += 1)\"'\" == (a = t[d]) ? e ? (r = e.join(\"\"), e = void 0) : e = [] : e ? e.push(a) : \"{\" == a ? (c.push([\n            u,\n            r\n        ]), u = {}, r = void 0) : \"}\" == a ? ((n = c.pop())[0][n[1]] = u, r = void 0, u = n[0]) : \"-\" == a ? s = -1 : void 0 === r ? i.hasOwnProperty(a) ? (l += i[a], r = parseInt(l, 16) * s, s = 1, l = \"\") : l += a : i.hasOwnProperty(a) ? (h += i[a], u[r] = parseInt(h, 16) * s, s = 1, r = void 0, h = \"\") : h += a;\n        return o;\n    }, l = {\n        codePages: [\n            \"WinAnsiEncoding\"\n        ],\n        WinAnsiEncoding: c(\"{19m8n201n9q201o9r201s9l201t9m201u8m201w9n201x9o201y8o202k8q202l8r202m9p202q8p20aw8k203k8t203t8v203u9v2cq8s212m9t15m8w15n9w2dw9s16k8u16l9u17s9z17x8y17y9y}\")\n    }, h = {\n        Unicode: {\n            Courier: l,\n            \"Courier-Bold\": l,\n            \"Courier-BoldOblique\": l,\n            \"Courier-Oblique\": l,\n            Helvetica: l,\n            \"Helvetica-Bold\": l,\n            \"Helvetica-BoldOblique\": l,\n            \"Helvetica-Oblique\": l,\n            \"Times-Roman\": l,\n            \"Times-Bold\": l,\n            \"Times-BoldItalic\": l,\n            \"Times-Italic\": l\n        }\n    }, f = {\n        Unicode: {\n            \"Courier-Oblique\": c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Times-BoldItalic\": c(\"{'widths'{k3o2q4ycx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2r202m2n2n3m2o3m2p5n202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5n4l4m4m4m4n4m4o4s4p4m4q4m4r4s4s4y4t2r4u3m4v4m4w3x4x5t4y4s4z4s5k3x5l4s5m4m5n3r5o3x5p4s5q4m5r5t5s4m5t3x5u3x5v2l5w1w5x2l5y3t5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q2l6r3m6s3r6t1w6u1w6v3m6w1w6x4y6y3r6z3m7k3m7l3m7m2r7n2r7o1w7p3r7q2w7r4m7s3m7t2w7u2r7v2n7w1q7x2n7y3t202l3mcl4mal2ram3man3mao3map3mar3mas2lat4uau1uav3maw3way4uaz2lbk2sbl3t'fof'6obo2lbp3tbq3mbr1tbs2lbu1ybv3mbz3mck4m202k3mcm4mcn4mco4mcp4mcq5ycr4mcs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz2w203k6o212m6o2dw2l2cq2l3t3m3u2l17s3x19m3m}'kerning'{cl{4qu5kt5qt5rs17ss5ts}201s{201ss}201t{cks4lscmscnscoscpscls2wu2yu201ts}201x{2wu2yu}2k{201ts}2w{4qx5kx5ou5qx5rs17su5tu}2x{17su5tu5ou}2y{4qx5kx5ou5qx5rs17ss5ts}'fof'-6ofn{17sw5tw5ou5qw5rs}7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qs}3v{17su5tu5os5qs}7p{17su5tu}ck{4qu5kt5qt5rs17ss5ts}4l{4qu5kt5qt5rs17ss5ts}cm{4qu5kt5qt5rs17ss5ts}cn{4qu5kt5qt5rs17ss5ts}co{4qu5kt5qt5rs17ss5ts}cp{4qu5kt5qt5rs17ss5ts}6l{4qu5ou5qw5rt17su5tu}5q{ckuclucmucnucoucpu4lu}5r{ckuclucmucnucoucpu4lu}7q{cksclscmscnscoscps4ls}6p{4qu5ou5qw5rt17sw5tw}ek{4qu5ou5qw5rt17su5tu}el{4qu5ou5qw5rt17su5tu}em{4qu5ou5qw5rt17su5tu}en{4qu5ou5qw5rt17su5tu}eo{4qu5ou5qw5rt17su5tu}ep{4qu5ou5qw5rt17su5tu}es{17ss5ts5qs4qu}et{4qu5ou5qw5rt17sw5tw}eu{4qu5ou5qw5rt17ss5ts}ev{17ss5ts5qs4qu}6z{17sw5tw5ou5qw5rs}fm{17sw5tw5ou5qw5rs}7n{201ts}fo{17sw5tw5ou5qw5rs}fp{17sw5tw5ou5qw5rs}fq{17sw5tw5ou5qw5rs}7r{cksclscmscnscoscps4ls}fs{17sw5tw5ou5qw5rs}ft{17su5tu}fu{17su5tu}fv{17su5tu}fw{17su5tu}fz{cksclscmscnscoscps4ls}}}\"),\n            \"Helvetica-Bold\": c(\"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"),\n            Courier: c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Courier-BoldOblique\": c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Times-Bold\": c(\"{'widths'{k3q2q5ncx2r201n3m201o6o201s2l201t2l201u2l201w3m201x3m201y3m2k1t2l2l202m2n2n3m2o3m2p6o202q6o2r1w2s2l2t2l2u3m2v3t2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w3t3x3t3y3t3z3m4k5x4l4s4m4m4n4s4o4s4p4m4q3x4r4y4s4y4t2r4u3m4v4y4w4m4x5y4y4s4z4y5k3x5l4y5m4s5n3r5o4m5p4s5q4s5r6o5s4s5t4s5u4m5v2l5w1w5x2l5y3u5z3m6k2l6l3m6m3r6n2w6o3r6p2w6q2l6r3m6s3r6t1w6u2l6v3r6w1w6x5n6y3r6z3m7k3r7l3r7m2w7n2r7o2l7p3r7q3m7r4s7s3m7t3m7u2w7v2r7w1q7x2r7y3o202l3mcl4sal2lam3man3mao3map3mar3mas2lat4uau1yav3maw3tay4uaz2lbk2sbl3t'fof'6obo2lbp3rbr1tbs2lbu2lbv3mbz3mck4s202k3mcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw2r2m3rcy2rcz2rdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3rek3mel3mem3men3meo3mep3meq4ser2wes2wet2weu2wev2wew1wex1wey1wez1wfl3rfm3mfn3mfo3mfp3mfq3mfr3tfs3mft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3m3u2l17s4s19m3m}'kerning'{cl{4qt5ks5ot5qy5rw17sv5tv}201t{cks4lscmscnscoscpscls4wv}2k{201ts}2w{4qu5ku7mu5os5qx5ru17su5tu}2x{17su5tu5ou5qs}2y{4qv5kv7mu5ot5qz5ru17su5tu}'fof'-6o7t{cksclscmscnscoscps4ls}3u{17su5tu5os5qu}3v{17su5tu5os5qu}fu{17su5tu5ou5qu}7p{17su5tu5ou5qu}ck{4qt5ks5ot5qy5rw17sv5tv}4l{4qt5ks5ot5qy5rw17sv5tv}cm{4qt5ks5ot5qy5rw17sv5tv}cn{4qt5ks5ot5qy5rw17sv5tv}co{4qt5ks5ot5qy5rw17sv5tv}cp{4qt5ks5ot5qy5rw17sv5tv}6l{17st5tt5ou5qu}17s{ckuclucmucnucoucpu4lu4wu}5o{ckuclucmucnucoucpu4lu4wu}5q{ckzclzcmzcnzcozcpz4lz4wu}5r{ckxclxcmxcnxcoxcpx4lx4wu}5t{ckuclucmucnucoucpu4lu4wu}7q{ckuclucmucnucoucpu4lu}6p{17sw5tw5ou5qu}ek{17st5tt5qu}el{17st5tt5ou5qu}em{17st5tt5qu}en{17st5tt5qu}eo{17st5tt5qu}ep{17st5tt5ou5qu}es{17ss5ts5qu}et{17sw5tw5ou5qu}eu{17sw5tw5ou5qu}ev{17ss5ts5qu}6z{17sw5tw5ou5qu5rs}fm{17sw5tw5ou5qu5rs}fn{17sw5tw5ou5qu5rs}fo{17sw5tw5ou5qu5rs}fp{17sw5tw5ou5qu5rs}fq{17sw5tw5ou5qu5rs}7r{cktcltcmtcntcotcpt4lt5os}fs{17sw5tw5ou5qu5rs}ft{17su5tu5ou5qu}7m{5os}fv{17su5tu5ou5qu}fw{17su5tu5ou5qu}fz{cksclscmscnscoscps4ls}}}\"),\n            Symbol: c(\"{'widths'{k3uaw4r19m3m2k1t2l2l202m2y2n3m2p5n202q6o3k3m2s2l2t2l2v3r2w1t3m3m2y1t2z1wbk2sbl3r'fof'6o3n3m3o3m3p3m3q3m3r3m3s3m3t3m3u1w3v1w3w3r3x3r3y3r3z2wbp3t3l3m5v2l5x2l5z3m2q4yfr3r7v3k7w1o7x3k}'kerning'{'fof'-6o}}\"),\n            Helvetica: c(\"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\"),\n            \"Helvetica-BoldOblique\": c(\"{'widths'{k3s2q4scx1w201n3r201o6o201s1w201t1w201u1w201w3m201x3m201y3m2k1w2l2l202m2n2n3r2o3r2p5t202q6o2r1s2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v2l3w3u3x3u3y3u3z3x4k6l4l4s4m4s4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3r4v4s4w3x4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v2l5w1w5x2l5y3u5z3r6k2l6l3r6m3x6n3r6o3x6p3r6q2l6r3x6s3x6t1w6u1w6v3r6w1w6x5t6y3x6z3x7k3x7l3x7m2r7n3r7o2l7p3x7q3r7r4y7s3r7t3r7u3m7v2r7w1w7x2r7y3u202l3rcl4sal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3xbq3rbr1wbs2lbu2obv3rbz3xck4s202k3rcm4scn4sco4scp4scq6ocr4scs4mct4mcu4mcv4mcw1w2m2zcy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3res3ret3reu3rev3rew1wex1wey1wez1wfl3xfm3xfn3xfo3xfp3xfq3xfr3ufs3xft3xfu3xfv3xfw3xfz3r203k6o212m6o2dw2l2cq2l3t3r3u2l17s4m19m3r}'kerning'{cl{4qs5ku5ot5qs17sv5tv}201t{2ww4wy2yw}201w{2ks}201x{2ww4wy2yw}2k{201ts201xs}2w{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}2x{5ow5qs}2y{7qs4qu5kw5os5qw5rs17su5tu7tsfzs}'fof'-6o7p{17su5tu5ot}ck{4qs5ku5ot5qs17sv5tv}4l{4qs5ku5ot5qs17sv5tv}cm{4qs5ku5ot5qs17sv5tv}cn{4qs5ku5ot5qs17sv5tv}co{4qs5ku5ot5qs17sv5tv}cp{4qs5ku5ot5qs17sv5tv}6l{17st5tt5os}17s{2kwclvcmvcnvcovcpv4lv4wwckv}5o{2kucltcmtcntcotcpt4lt4wtckt}5q{2ksclscmscnscoscps4ls4wvcks}5r{2ks4ws}5t{2kwclvcmvcnvcovcpv4lv4wwckv}eo{17st5tt5os}fu{17su5tu5ot}6p{17ss5ts}ek{17st5tt5os}el{17st5tt5os}em{17st5tt5os}en{17st5tt5os}6o{201ts}ep{17st5tt5os}es{17ss5ts}et{17ss5ts}eu{17ss5ts}ev{17ss5ts}6z{17su5tu5os5qt}fm{17su5tu5os5qt}fn{17su5tu5os5qt}fo{17su5tu5os5qt}fp{17su5tu5os5qt}fq{17su5tu5os5qt}fs{17su5tu5os5qt}ft{17su5tu5ot}7m{5os}fv{17su5tu5ot}fw{17su5tu5ot}}}\"),\n            ZapfDingbats: c(\"{'widths'{k4u2k1w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Courier-Bold\": c(\"{'widths'{k3w'fof'6o}'kerning'{'fof'-6o}}\"),\n            \"Times-Italic\": c(\"{'widths'{k3n2q4ycx2l201n3m201o5t201s2l201t2l201u2l201w3r201x3r201y3r2k1t2l2l202m2n2n3m2o3m2p5n202q5t2r1p2s2l2t2l2u3m2v4n2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v2l3w4n3x4n3y4n3z3m4k5w4l3x4m3x4n4m4o4s4p3x4q3x4r4s4s4s4t2l4u2w4v4m4w3r4x5n4y4m4z4s5k3x5l4s5m3x5n3m5o3r5p4s5q3x5r5n5s3x5t3r5u3r5v2r5w1w5x2r5y2u5z3m6k2l6l3m6m3m6n2w6o3m6p2w6q1w6r3m6s3m6t1w6u1w6v2w6w1w6x4s6y3m6z3m7k3m7l3m7m2r7n2r7o1w7p3m7q2w7r4m7s2w7t2w7u2r7v2s7w1v7x2s7y3q202l3mcl3xal2ram3man3mao3map3mar3mas2lat4wau1vav3maw4nay4waz2lbk2sbl4n'fof'6obo2lbp3mbq3obr1tbs2lbu1zbv3mbz3mck3x202k3mcm3xcn3xco3xcp3xcq5tcr4mcs3xct3xcu3xcv3xcw2l2m2ucy2lcz2ldl4mdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek3mel3mem3men3meo3mep3meq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr4nfs3mft3mfu3mfv3mfw3mfz2w203k6o212m6m2dw2l2cq2l3t3m3u2l17s3r19m3m}'kerning'{cl{5kt4qw}201s{201sw}201t{201tw2wy2yy6q-t}201x{2wy2yy}2k{201tw}2w{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}2x{17ss5ts5os}2y{7qs4qy7rs5ky7mw5os5qx5ru17su5tu}'fof'-6o6t{17ss5ts5qs}7t{5os}3v{5qs}7p{17su5tu5qs}ck{5kt4qw}4l{5kt4qw}cm{5kt4qw}cn{5kt4qw}co{5kt4qw}cp{5kt4qw}6l{4qs5ks5ou5qw5ru17su5tu}17s{2ks}5q{ckvclvcmvcnvcovcpv4lv}5r{ckuclucmucnucoucpu4lu}5t{2ks}6p{4qs5ks5ou5qw5ru17su5tu}ek{4qs5ks5ou5qw5ru17su5tu}el{4qs5ks5ou5qw5ru17su5tu}em{4qs5ks5ou5qw5ru17su5tu}en{4qs5ks5ou5qw5ru17su5tu}eo{4qs5ks5ou5qw5ru17su5tu}ep{4qs5ks5ou5qw5ru17su5tu}es{5ks5qs4qs}et{4qs5ks5ou5qw5ru17su5tu}eu{4qs5ks5qw5ru17su5tu}ev{5ks5qs4qs}ex{17ss5ts5qs}6z{4qv5ks5ou5qw5ru17su5tu}fm{4qv5ks5ou5qw5ru17su5tu}fn{4qv5ks5ou5qw5ru17su5tu}fo{4qv5ks5ou5qw5ru17su5tu}fp{4qv5ks5ou5qw5ru17su5tu}fq{4qv5ks5ou5qw5ru17su5tu}7r{5os}fs{4qv5ks5ou5qw5ru17su5tu}ft{17su5tu5qs}fu{17su5tu5qs}fv{17su5tu5qs}fw{17su5tu5qs}}}\"),\n            \"Times-Roman\": c(\"{'widths'{k3n2q4ycx2l201n3m201o6o201s2l201t2l201u2l201w2w201x2w201y2w2k1t2l2l202m2n2n3m2o3m2p5n202q6o2r1m2s2l2t2l2u3m2v3s2w1t2x2l2y1t2z1w3k3m3l3m3m3m3n3m3o3m3p3m3q3m3r3m3s3m203t2l203u2l3v1w3w3s3x3s3y3s3z2w4k5w4l4s4m4m4n4m4o4s4p3x4q3r4r4s4s4s4t2l4u2r4v4s4w3x4x5t4y4s4z4s5k3r5l4s5m4m5n3r5o3x5p4s5q4s5r5y5s4s5t4s5u3x5v2l5w1w5x2l5y2z5z3m6k2l6l2w6m3m6n2w6o3m6p2w6q2l6r3m6s3m6t1w6u1w6v3m6w1w6x4y6y3m6z3m7k3m7l3m7m2l7n2r7o1w7p3m7q3m7r4s7s3m7t3m7u2w7v3k7w1o7x3k7y3q202l3mcl4sal2lam3man3mao3map3mar3mas2lat4wau1vav3maw3say4waz2lbk2sbl3s'fof'6obo2lbp3mbq2xbr1tbs2lbu1zbv3mbz2wck4s202k3mcm4scn4sco4scp4scq5tcr4mcs3xct3xcu3xcv3xcw2l2m2tcy2lcz2ldl4sdm4sdn4sdo4sdp4sdq4sds4sdt4sdu4sdv4sdw4sdz3mek2wel2wem2wen2weo2wep2weq4mer2wes2wet2weu2wev2wew1wex1wey1wez1wfl3mfm3mfn3mfo3mfp3mfq3mfr3sfs3mft3mfu3mfv3mfw3mfz3m203k6o212m6m2dw2l2cq2l3t3m3u1w17s4s19m3m}'kerning'{cl{4qs5ku17sw5ou5qy5rw201ss5tw201ws}201s{201ss}201t{ckw4lwcmwcnwcowcpwclw4wu201ts}2k{201ts}2w{4qs5kw5os5qx5ru17sx5tx}2x{17sw5tw5ou5qu}2y{4qs5kw5os5qx5ru17sx5tx}'fof'-6o7t{ckuclucmucnucoucpu4lu5os5rs}3u{17su5tu5qs}3v{17su5tu5qs}7p{17sw5tw5qs}ck{4qs5ku17sw5ou5qy5rw201ss5tw201ws}4l{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cm{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cn{4qs5ku17sw5ou5qy5rw201ss5tw201ws}co{4qs5ku17sw5ou5qy5rw201ss5tw201ws}cp{4qs5ku17sw5ou5qy5rw201ss5tw201ws}6l{17su5tu5os5qw5rs}17s{2ktclvcmvcnvcovcpv4lv4wuckv}5o{ckwclwcmwcnwcowcpw4lw4wu}5q{ckyclycmycnycoycpy4ly4wu5ms}5r{cktcltcmtcntcotcpt4lt4ws}5t{2ktclvcmvcnvcovcpv4lv4wuckv}7q{cksclscmscnscoscps4ls}6p{17su5tu5qw5rs}ek{5qs5rs}el{17su5tu5os5qw5rs}em{17su5tu5os5qs5rs}en{17su5qs5rs}eo{5qs5rs}ep{17su5tu5os5qw5rs}es{5qs}et{17su5tu5qw5rs}eu{17su5tu5qs5rs}ev{5qs}6z{17sv5tv5os5qx5rs}fm{5os5qt5rs}fn{17sv5tv5os5qx5rs}fo{17sv5tv5os5qx5rs}fp{5os5qt5rs}fq{5os5qt5rs}7r{ckuclucmucnucoucpu4lu5os}fs{17sv5tv5os5qx5rs}ft{17ss5ts5qs}fu{17sw5tw5qs}fv{17sw5tw5qs}fw{17ss5ts5qs}fz{ckuclucmucnucoucpu4lu5os5rs}}}\"),\n            \"Helvetica-Oblique\": c(\"{'widths'{k3p2q4mcx1w201n3r201o6o201s1q201t1q201u1q201w2l201x2l201y2l2k1w2l1w202m2n2n3r2o3r2p5t202q6o2r1n2s2l2t2l2u2r2v3u2w1w2x2l2y1w2z1w3k3r3l3r3m3r3n3r3o3r3p3r3q3r3r3r3s3r203t2l203u2l3v1w3w3u3x3u3y3u3z3r4k6p4l4m4m4m4n4s4o4s4p4m4q3x4r4y4s4s4t1w4u3m4v4m4w3r4x5n4y4s4z4y5k4m5l4y5m4s5n4m5o3x5p4s5q4m5r5y5s4m5t4m5u3x5v1w5w1w5x1w5y2z5z3r6k2l6l3r6m3r6n3m6o3r6p3r6q1w6r3r6s3r6t1q6u1q6v3m6w1q6x5n6y3r6z3r7k3r7l3r7m2l7n3m7o1w7p3r7q3m7r4s7s3m7t3m7u3m7v2l7w1u7x2l7y3u202l3rcl4mal2lam3ran3rao3rap3rar3ras2lat4tau2pav3raw3uay4taz2lbk2sbl3u'fof'6obo2lbp3rbr1wbs2lbu2obv3rbz3xck4m202k3rcm4mcn4mco4mcp4mcq6ocr4scs4mct4mcu4mcv4mcw1w2m2ncy1wcz1wdl4sdm4ydn4ydo4ydp4ydq4yds4ydt4sdu4sdv4sdw4sdz3xek3rel3rem3ren3reo3rep3req5ter3mes3ret3reu3rev3rew1wex1wey1wez1wfl3rfm3rfn3rfo3rfp3rfq3rfr3ufs3xft3rfu3rfv3rfw3rfz3m203k6o212m6o2dw2l2cq2l3t3r3u1w17s4m19m3r}'kerning'{5q{4wv}cl{4qs5kw5ow5qs17sv5tv}201t{2wu4w1k2yu}201x{2wu4wy2yu}17s{2ktclucmucnu4otcpu4lu4wycoucku}2w{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}2x{17sy5ty5oy5qs}2y{7qs4qz5k1m17sy5ow5qx5rsfsu5ty7tufzu}'fof'-6o7p{17sv5tv5ow}ck{4qs5kw5ow5qs17sv5tv}4l{4qs5kw5ow5qs17sv5tv}cm{4qs5kw5ow5qs17sv5tv}cn{4qs5kw5ow5qs17sv5tv}co{4qs5kw5ow5qs17sv5tv}cp{4qs5kw5ow5qs17sv5tv}6l{17sy5ty5ow}do{17st5tt}4z{17st5tt}7s{fst}dm{17st5tt}dn{17st5tt}5o{ckwclwcmwcnwcowcpw4lw4wv}dp{17st5tt}dq{17st5tt}7t{5ow}ds{17st5tt}5t{2ktclucmucnu4otcpu4lu4wycoucku}fu{17sv5tv5ow}6p{17sy5ty5ow5qs}ek{17sy5ty5ow}el{17sy5ty5ow}em{17sy5ty5ow}en{5ty}eo{17sy5ty5ow}ep{17sy5ty5ow}es{17sy5ty5qs}et{17sy5ty5ow5qs}eu{17sy5ty5ow5qs}ev{17sy5ty5ow5qs}6z{17sy5ty5ow5qs}fm{17sy5ty5ow5qs}fn{17sy5ty5ow5qs}fo{17sy5ty5ow5qs}fp{17sy5ty5qs}fq{17sy5ty5ow5qs}7r{5ow}fs{17sy5ty5ow5qs}ft{17sv5tv5ow}7m{5ow}fv{17sv5tv5ow}fw{17sv5tv5ow}}}\")\n        }\n    };\n    e.events.push([\n        \"addFont\",\n        function(t) {\n            var e = t.font, n = f.Unicode[e.postScriptName];\n            n && (e.metadata.Unicode = {}, e.metadata.Unicode.widths = n.widths, e.metadata.Unicode.kerning = n.kerning);\n            var r = h.Unicode[e.postScriptName];\n            r && (e.metadata.Unicode.encoding = r, e.encoding = r.codePages[0]);\n        }\n    ]);\n}(E.API), /**\n * @license\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = function(t) {\n        for(var e = t.length, n = new Uint8Array(e), r = 0; r < e; r++)n[r] = t.charCodeAt(r);\n        return n;\n    };\n    t.API.events.push([\n        \"addFont\",\n        function(n) {\n            var r = void 0, i = n.font, a = n.instance;\n            if (!i.isStandardFont) {\n                if (void 0 === a) throw new Error(\"Font does not exist in vFS, import fonts or remove declaration doc.addFont('\" + i.postScriptName + \"').\");\n                if (\"string\" != typeof (r = !1 === a.existsFileInVFS(i.postScriptName) ? a.loadFile(i.postScriptName) : a.getFileFromVFS(i.postScriptName))) throw new Error(\"Font is not stored as string-data in vFS, import fonts or remove declaration doc.addFont('\" + i.postScriptName + \"').\");\n                !function(n, r) {\n                    r = /^\\x00\\x01\\x00\\x00/.test(r) ? e(r) : e(f(r)), n.metadata = t.API.TTFFont.open(r), n.metadata.Unicode = n.metadata.Unicode || {\n                        encoding: {},\n                        kerning: {},\n                        widths: []\n                    }, n.metadata.glyIdsUsed = [\n                        0\n                    ];\n                }(i, r);\n            }\n        }\n    ]);\n}(E), E.API.addSvgAsImage = function(t, e, n, r, a, s, u, c) {\n    if (isNaN(e) || isNaN(n)) throw o.error(\"jsPDF.addSvgAsImage: Invalid coordinates\", arguments), new Error(\"Invalid coordinates passed to jsPDF.addSvgAsImage\");\n    if (isNaN(r) || isNaN(a)) throw o.error(\"jsPDF.addSvgAsImage: Invalid measurements\", arguments), new Error(\"Invalid measurements (width and/or height) passed to jsPDF.addSvgAsImage\");\n    var l = document.createElement(\"canvas\");\n    l.width = r, l.height = a;\n    var h = l.getContext(\"2d\");\n    h.fillStyle = \"#fff\", h.fillRect(0, 0, l.width, l.height);\n    var f = {\n        ignoreMouse: !0,\n        ignoreAnimation: !0,\n        ignoreDimensions: !0\n    }, d = this;\n    return (i.canvg ? Promise.resolve(i.canvg) : Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@babel\"), __webpack_require__.e(\"vendor-chunks/core-js\"), __webpack_require__.e(\"vendor-chunks/svg-pathdata\"), __webpack_require__.e(\"vendor-chunks/canvg\"), __webpack_require__.e(\"vendor-chunks/stackblur-canvas\"), __webpack_require__.e(\"vendor-chunks/rgbcolor\"), __webpack_require__.e(\"vendor-chunks/raf\"), __webpack_require__.e(\"vendor-chunks/performance-now\")]).then(__webpack_require__.bind(__webpack_require__, /*! canvg */ \"(ssr)/../../../../node_modules/canvg/lib/index.es.js\"))).catch(function(t) {\n        return Promise.reject(new Error(\"Could not load canvg: \" + t));\n    }).then(function(t) {\n        return t.default ? t.default : t;\n    }).then(function(e) {\n        return e.fromString(h, t, f);\n    }, function() {\n        return Promise.reject(new Error(\"Could not load canvg.\"));\n    }).then(function(t) {\n        return t.render(f);\n    }).then(function() {\n        d.addImage(l.toDataURL(\"image/jpeg\", 1), e, n, r, a, u, c);\n    });\n}, E.API.putTotalPages = function(t) {\n    var e, n = 0;\n    parseInt(this.internal.getFont().id.substr(1), 10) < 15 ? (e = new RegExp(t, \"g\"), n = this.internal.getNumberOfPages()) : (e = new RegExp(this.pdfEscape16(t, this.internal.getFont()), \"g\"), n = this.pdfEscape16(this.internal.getNumberOfPages() + \"\", this.internal.getFont()));\n    for(var r = 1; r <= this.internal.getNumberOfPages(); r++)for(var i = 0; i < this.internal.pages[r].length; i++)this.internal.pages[r][i] = this.internal.pages[r][i].replace(e, n);\n    return this;\n}, E.API.viewerPreferences = function(e, n) {\n    var r;\n    e = e || {}, n = n || !1;\n    var i, a, o, s = {\n        HideToolbar: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        HideMenubar: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        HideWindowUI: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        FitWindow: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        CenterWindow: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.3\n        },\n        DisplayDocTitle: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.4\n        },\n        NonFullScreenPageMode: {\n            defaultValue: \"UseNone\",\n            value: \"UseNone\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"UseNone\",\n                \"UseOutlines\",\n                \"UseThumbs\",\n                \"UseOC\"\n            ],\n            pdfVersion: 1.3\n        },\n        Direction: {\n            defaultValue: \"L2R\",\n            value: \"L2R\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"L2R\",\n                \"R2L\"\n            ],\n            pdfVersion: 1.3\n        },\n        ViewArea: {\n            defaultValue: \"CropBox\",\n            value: \"CropBox\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"MediaBox\",\n                \"CropBox\",\n                \"TrimBox\",\n                \"BleedBox\",\n                \"ArtBox\"\n            ],\n            pdfVersion: 1.4\n        },\n        ViewClip: {\n            defaultValue: \"CropBox\",\n            value: \"CropBox\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"MediaBox\",\n                \"CropBox\",\n                \"TrimBox\",\n                \"BleedBox\",\n                \"ArtBox\"\n            ],\n            pdfVersion: 1.4\n        },\n        PrintArea: {\n            defaultValue: \"CropBox\",\n            value: \"CropBox\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"MediaBox\",\n                \"CropBox\",\n                \"TrimBox\",\n                \"BleedBox\",\n                \"ArtBox\"\n            ],\n            pdfVersion: 1.4\n        },\n        PrintClip: {\n            defaultValue: \"CropBox\",\n            value: \"CropBox\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"MediaBox\",\n                \"CropBox\",\n                \"TrimBox\",\n                \"BleedBox\",\n                \"ArtBox\"\n            ],\n            pdfVersion: 1.4\n        },\n        PrintScaling: {\n            defaultValue: \"AppDefault\",\n            value: \"AppDefault\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"AppDefault\",\n                \"None\"\n            ],\n            pdfVersion: 1.6\n        },\n        Duplex: {\n            defaultValue: \"\",\n            value: \"none\",\n            type: \"name\",\n            explicitSet: !1,\n            valueSet: [\n                \"Simplex\",\n                \"DuplexFlipShortEdge\",\n                \"DuplexFlipLongEdge\",\n                \"none\"\n            ],\n            pdfVersion: 1.7\n        },\n        PickTrayByPDFSize: {\n            defaultValue: !1,\n            value: !1,\n            type: \"boolean\",\n            explicitSet: !1,\n            valueSet: [\n                !0,\n                !1\n            ],\n            pdfVersion: 1.7\n        },\n        PrintPageRange: {\n            defaultValue: \"\",\n            value: \"\",\n            type: \"array\",\n            explicitSet: !1,\n            valueSet: null,\n            pdfVersion: 1.7\n        },\n        NumCopies: {\n            defaultValue: 1,\n            value: 1,\n            type: \"integer\",\n            explicitSet: !1,\n            valueSet: null,\n            pdfVersion: 1.7\n        }\n    }, u = Object.keys(s), c = [], l = 0, h = 0, f = 0;\n    function d(t, e) {\n        var n, r = !1;\n        for(n = 0; n < t.length; n += 1)t[n] === e && (r = !0);\n        return r;\n    }\n    if (void 0 === this.internal.viewerpreferences && (this.internal.viewerpreferences = {}, this.internal.viewerpreferences.configuration = JSON.parse(JSON.stringify(s)), this.internal.viewerpreferences.isSubscribed = !1), r = this.internal.viewerpreferences.configuration, \"reset\" === e || !0 === n) {\n        var p = u.length;\n        for(f = 0; f < p; f += 1)r[u[f]].value = r[u[f]].defaultValue, r[u[f]].explicitSet = !1;\n    }\n    if (\"object\" === _babel_runtime_helpers_typeof__WEBPACK_IMPORTED_MODULE_0___default()(e)) {\n        for(a in e)if (o = e[a], d(u, a) && void 0 !== o) {\n            if (\"boolean\" === r[a].type && \"boolean\" == typeof o) r[a].value = o;\n            else if (\"name\" === r[a].type && d(r[a].valueSet, o)) r[a].value = o;\n            else if (\"integer\" === r[a].type && Number.isInteger(o)) r[a].value = o;\n            else if (\"array\" === r[a].type) {\n                for(l = 0; l < o.length; l += 1)if (i = !0, 1 === o[l].length && \"number\" == typeof o[l][0]) c.push(String(o[l] - 1));\n                else if (o[l].length > 1) {\n                    for(h = 0; h < o[l].length; h += 1)\"number\" != typeof o[l][h] && (i = !1);\n                    !0 === i && c.push([\n                        o[l][0] - 1,\n                        o[l][1] - 1\n                    ].join(\" \"));\n                }\n                r[a].value = \"[\" + c.join(\" \") + \"]\";\n            } else r[a].value = r[a].defaultValue;\n            r[a].explicitSet = !0;\n        }\n    }\n    return !1 === this.internal.viewerpreferences.isSubscribed && (this.internal.events.subscribe(\"putCatalog\", function() {\n        var t, e = [];\n        for(t in r)!0 === r[t].explicitSet && (\"name\" === r[t].type ? e.push(\"/\" + t + \" /\" + r[t].value) : e.push(\"/\" + t + \" \" + r[t].value));\n        0 !== e.length && this.internal.write(\"/ViewerPreferences\\n<<\\n\" + e.join(\"\\n\") + \"\\n>>\");\n    }), this.internal.viewerpreferences.isSubscribed = !0), this.internal.viewerpreferences.configuration = r, this;\n}, /** ====================================================================\n * @license\n * jsPDF XMP metadata plugin\n * Copyright (c) 2016 Jussi Utunen, u-jussi@suomi24.fi\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n * ====================================================================\n */ function(t) {\n    var e = function() {\n        var t = '<rdf:RDF xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"><rdf:Description rdf:about=\"\" xmlns:jspdf=\"' + this.internal.__metadata__.namespaceuri + '\"><jspdf:metadata>', e = unescape(encodeURIComponent('<x:xmpmeta xmlns:x=\"adobe:ns:meta/\">')), n = unescape(encodeURIComponent(t)), r = unescape(encodeURIComponent(this.internal.__metadata__.metadata)), i = unescape(encodeURIComponent(\"</jspdf:metadata></rdf:Description></rdf:RDF>\")), a = unescape(encodeURIComponent(\"</x:xmpmeta>\")), o = n.length + r.length + i.length + e.length + a.length;\n        this.internal.__metadata__.metadata_object_number = this.internal.newObject(), this.internal.write(\"<< /Type /Metadata /Subtype /XML /Length \" + o + \" >>\"), this.internal.write(\"stream\"), this.internal.write(e + n + r + i + a), this.internal.write(\"endstream\"), this.internal.write(\"endobj\");\n    }, n = function() {\n        this.internal.__metadata__.metadata_object_number && this.internal.write(\"/Metadata \" + this.internal.__metadata__.metadata_object_number + \" 0 R\");\n    };\n    t.addMetadata = function(t, r) {\n        return void 0 === this.internal.__metadata__ && (this.internal.__metadata__ = {\n            metadata: t,\n            namespaceuri: r || \"http://jspdf.default.namespaceuri/\"\n        }, this.internal.events.subscribe(\"putCatalog\", n), this.internal.events.subscribe(\"postPutResources\", e)), this;\n    };\n}(E.API), function(t) {\n    var e = t.API, n = e.pdfEscape16 = function(t, e) {\n        for(var n, r = e.metadata.Unicode.widths, i = [\n            \"\",\n            \"0\",\n            \"00\",\n            \"000\",\n            \"0000\"\n        ], a = [\n            \"\"\n        ], o = 0, s = t.length; o < s; ++o){\n            if (n = e.metadata.characterToGlyph(t.charCodeAt(o)), e.metadata.glyIdsUsed.push(n), e.metadata.toUnicode[n] = t.charCodeAt(o), -1 == r.indexOf(n) && (r.push(n), r.push([\n                parseInt(e.metadata.widthOfGlyph(n), 10)\n            ])), \"0\" == n) return a.join(\"\");\n            n = n.toString(16), a.push(i[4 - n.length], n);\n        }\n        return a.join(\"\");\n    }, r = function(t) {\n        var e, n, r, i, a, o, s;\n        for(a = \"/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap\\n/CIDSystemInfo <<\\n  /Registry (Adobe)\\n  /Ordering (UCS)\\n  /Supplement 0\\n>> def\\n/CMapName /Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange\\n<0000><ffff>\\nendcodespacerange\", r = [], o = 0, s = (n = Object.keys(t).sort(function(t, e) {\n            return t - e;\n        })).length; o < s; o++)e = n[o], r.length >= 100 && (a += \"\\n\" + r.length + \" beginbfchar\\n\" + r.join(\"\\n\") + \"\\nendbfchar\", r = []), void 0 !== t[e] && null !== t[e] && \"function\" == typeof t[e].toString && (i = (\"0000\" + t[e].toString(16)).slice(-4), e = (\"0000\" + (+e).toString(16)).slice(-4), r.push(\"<\" + e + \"><\" + i + \">\"));\n        return r.length && (a += \"\\n\" + r.length + \" beginbfchar\\n\" + r.join(\"\\n\") + \"\\nendbfchar\\n\"), a + \"endcmap\\nCMapName currentdict /CMap defineresource pop\\nend\\nend\";\n    };\n    e.events.push([\n        \"putFont\",\n        function(e) {\n            !function(e) {\n                var n = e.font, i = e.out, a = e.newObject, o = e.putStream;\n                if (n.metadata instanceof t.API.TTFFont && \"Identity-H\" === n.encoding) {\n                    for(var s = n.metadata.Unicode.widths, u = n.metadata.subset.encode(n.metadata.glyIdsUsed, 1), c = \"\", l = 0; l < u.length; l++)c += String.fromCharCode(u[l]);\n                    var h = a();\n                    o({\n                        data: c,\n                        addLength1: !0,\n                        objectId: h\n                    }), i(\"endobj\");\n                    var f = a();\n                    o({\n                        data: r(n.metadata.toUnicode),\n                        addLength1: !0,\n                        objectId: f\n                    }), i(\"endobj\");\n                    var d = a();\n                    i(\"<<\"), i(\"/Type /FontDescriptor\"), i(\"/FontName /\" + j(n.fontName)), i(\"/FontFile2 \" + h + \" 0 R\"), i(\"/FontBBox \" + t.API.PDFObject.convert(n.metadata.bbox)), i(\"/Flags \" + n.metadata.flags), i(\"/StemV \" + n.metadata.stemV), i(\"/ItalicAngle \" + n.metadata.italicAngle), i(\"/Ascent \" + n.metadata.ascender), i(\"/Descent \" + n.metadata.decender), i(\"/CapHeight \" + n.metadata.capHeight), i(\">>\"), i(\"endobj\");\n                    var p = a();\n                    i(\"<<\"), i(\"/Type /Font\"), i(\"/BaseFont /\" + j(n.fontName)), i(\"/FontDescriptor \" + d + \" 0 R\"), i(\"/W \" + t.API.PDFObject.convert(s)), i(\"/CIDToGIDMap /Identity\"), i(\"/DW 1000\"), i(\"/Subtype /CIDFontType2\"), i(\"/CIDSystemInfo\"), i(\"<<\"), i(\"/Supplement 0\"), i(\"/Registry (Adobe)\"), i(\"/Ordering (\" + n.encoding + \")\"), i(\">>\"), i(\">>\"), i(\"endobj\"), n.objectNumber = a(), i(\"<<\"), i(\"/Type /Font\"), i(\"/Subtype /Type0\"), i(\"/ToUnicode \" + f + \" 0 R\"), i(\"/BaseFont /\" + j(n.fontName)), i(\"/Encoding /\" + n.encoding), i(\"/DescendantFonts [\" + p + \" 0 R]\"), i(\">>\"), i(\"endobj\"), n.isAlreadyPutted = !0;\n                }\n            }(e);\n        }\n    ]), e.events.push([\n        \"putFont\",\n        function(e) {\n            !function(e) {\n                var n = e.font, i = e.out, a = e.newObject, o = e.putStream;\n                if (n.metadata instanceof t.API.TTFFont && \"WinAnsiEncoding\" === n.encoding) {\n                    for(var s = n.metadata.rawData, u = \"\", c = 0; c < s.length; c++)u += String.fromCharCode(s[c]);\n                    var l = a();\n                    o({\n                        data: u,\n                        addLength1: !0,\n                        objectId: l\n                    }), i(\"endobj\");\n                    var h = a();\n                    o({\n                        data: r(n.metadata.toUnicode),\n                        addLength1: !0,\n                        objectId: h\n                    }), i(\"endobj\");\n                    var f = a();\n                    i(\"<<\"), i(\"/Descent \" + n.metadata.decender), i(\"/CapHeight \" + n.metadata.capHeight), i(\"/StemV \" + n.metadata.stemV), i(\"/Type /FontDescriptor\"), i(\"/FontFile2 \" + l + \" 0 R\"), i(\"/Flags 96\"), i(\"/FontBBox \" + t.API.PDFObject.convert(n.metadata.bbox)), i(\"/FontName /\" + j(n.fontName)), i(\"/ItalicAngle \" + n.metadata.italicAngle), i(\"/Ascent \" + n.metadata.ascender), i(\">>\"), i(\"endobj\"), n.objectNumber = a();\n                    for(var d = 0; d < n.metadata.hmtx.widths.length; d++)n.metadata.hmtx.widths[d] = parseInt(n.metadata.hmtx.widths[d] * (1e3 / n.metadata.head.unitsPerEm));\n                    i(\"<</Subtype/TrueType/Type/Font/ToUnicode \" + h + \" 0 R/BaseFont/\" + j(n.fontName) + \"/FontDescriptor \" + f + \" 0 R/Encoding/\" + n.encoding + \" /FirstChar 29 /LastChar 255 /Widths \" + t.API.PDFObject.convert(n.metadata.hmtx.widths) + \">>\"), i(\"endobj\"), n.isAlreadyPutted = !0;\n                }\n            }(e);\n        }\n    ]);\n    var i = function(t) {\n        var e, r = t.text || \"\", i = t.x, a = t.y, o = t.options || {}, s = t.mutex || {}, u = s.pdfEscape, c = s.activeFontKey, l = s.fonts, h = c, f = \"\", d = 0, p = \"\", g = l[h].encoding;\n        if (\"Identity-H\" !== l[h].encoding) return {\n            text: r,\n            x: i,\n            y: a,\n            options: o,\n            mutex: s\n        };\n        for(p = r, h = c, Array.isArray(r) && (p = r[0]), d = 0; d < p.length; d += 1)l[h].metadata.hasOwnProperty(\"cmap\") && (e = l[h].metadata.cmap.unicode.codeMap[p[d].charCodeAt(0)]), e || p[d].charCodeAt(0) < 256 && l[h].metadata.hasOwnProperty(\"Unicode\") ? f += p[d] : f += \"\";\n        var m = \"\";\n        return parseInt(h.slice(1)) < 14 || \"WinAnsiEncoding\" === g ? m = u(f, h).split(\"\").map(function(t) {\n            return t.charCodeAt(0).toString(16);\n        }).join(\"\") : \"Identity-H\" === g && (m = n(f, l[h])), s.isHex = !0, {\n            text: m,\n            x: i,\n            y: a,\n            options: o,\n            mutex: s\n        };\n    };\n    e.events.push([\n        \"postProcessText\",\n        function(t) {\n            var e = t.text || \"\", n = [], r = {\n                text: e,\n                x: t.x,\n                y: t.y,\n                options: t.options,\n                mutex: t.mutex\n            };\n            if (Array.isArray(e)) {\n                var a = 0;\n                for(a = 0; a < e.length; a += 1)Array.isArray(e[a]) && 3 === e[a].length ? n.push([\n                    i(Object.assign({}, r, {\n                        text: e[a][0]\n                    })).text,\n                    e[a][1],\n                    e[a][2]\n                ]) : n.push(i(Object.assign({}, r, {\n                    text: e[a]\n                })).text);\n                t.text = n;\n            } else t.text = i(Object.assign({}, r, {\n                text: e\n            })).text;\n        }\n    ]);\n}(E), /**\n * @license\n * jsPDF virtual FileSystem functionality\n *\n * Licensed under the MIT License.\n * http://opensource.org/licenses/mit-license\n */ function(t) {\n    var e = function() {\n        return void 0 === this.internal.vFS && (this.internal.vFS = {}), !0;\n    };\n    t.existsFileInVFS = function(t) {\n        return e.call(this), void 0 !== this.internal.vFS[t];\n    }, t.addFileToVFS = function(t, n) {\n        return e.call(this), this.internal.vFS[t] = n, this;\n    }, t.getFileFromVFS = function(t) {\n        return e.call(this), void 0 !== this.internal.vFS[t] ? this.internal.vFS[t] : null;\n    };\n}(E.API), /**\n * @license\n * Unicode Bidi Engine based on the work of Alex Shensis (@asthensis)\n * MIT License\n */ function(t) {\n    t.__bidiEngine__ = t.prototype.__bidiEngine__ = function(t) {\n        var n, r, i, a, o, s, u, c = e, l = [\n            [\n                0,\n                3,\n                0,\n                1,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                3,\n                0,\n                1,\n                2,\n                2,\n                0\n            ],\n            [\n                0,\n                3,\n                0,\n                17,\n                2,\n                0,\n                1\n            ],\n            [\n                0,\n                3,\n                5,\n                5,\n                4,\n                1,\n                0\n            ],\n            [\n                0,\n                3,\n                21,\n                21,\n                4,\n                0,\n                1\n            ],\n            [\n                0,\n                3,\n                5,\n                5,\n                4,\n                2,\n                0\n            ]\n        ], h = [\n            [\n                2,\n                0,\n                1,\n                1,\n                0,\n                1,\n                0\n            ],\n            [\n                2,\n                0,\n                1,\n                1,\n                0,\n                2,\n                0\n            ],\n            [\n                2,\n                0,\n                2,\n                1,\n                3,\n                2,\n                0\n            ],\n            [\n                2,\n                0,\n                2,\n                33,\n                3,\n                1,\n                1\n            ]\n        ], f = {\n            L: 0,\n            R: 1,\n            EN: 2,\n            AN: 3,\n            N: 4,\n            B: 5,\n            S: 6\n        }, d = {\n            0: 0,\n            5: 1,\n            6: 2,\n            7: 3,\n            32: 4,\n            251: 5,\n            254: 6,\n            255: 7\n        }, p = [\n            \"(\",\n            \")\",\n            \"(\",\n            \"<\",\n            \">\",\n            \"<\",\n            \"[\",\n            \"]\",\n            \"[\",\n            \"{\",\n            \"}\",\n            \"{\",\n            \"\\xab\",\n            \"\\xbb\",\n            \"\\xab\",\n            \"‚Äπ\",\n            \"‚Ä∫\",\n            \"‚Äπ\",\n            \"‚ÅÖ\",\n            \"‚ÅÜ\",\n            \"‚ÅÖ\",\n            \"‚ÅΩ\",\n            \"‚Åæ\",\n            \"‚ÅΩ\",\n            \"‚Çç\",\n            \"‚Çé\",\n            \"‚Çç\",\n            \"‚â§\",\n            \"‚â•\",\n            \"‚â§\",\n            \"‚å©\",\n            \"‚å™\",\n            \"‚å©\",\n            \"Ôπô\",\n            \"Ôπö\",\n            \"Ôπô\",\n            \"Ôπõ\",\n            \"Ôπú\",\n            \"Ôπõ\",\n            \"Ôπù\",\n            \"Ôπû\",\n            \"Ôπù\",\n            \"Ôπ§\",\n            \"Ôπ•\",\n            \"Ôπ§\"\n        ], g = new RegExp(/^([1-4|9]|1[0-9]|2[0-9]|3[0168]|4[04589]|5[012]|7[78]|159|16[0-9]|17[0-2]|21[569]|22[03489]|250)$/), m = !1, v = 0;\n        this.__bidiEngine__ = {};\n        var b = function(t) {\n            var e = t.charCodeAt(), n = e >> 8, r = d[n];\n            return void 0 !== r ? c[256 * r + (255 & e)] : 252 === n || 253 === n ? \"AL\" : g.test(n) ? \"L\" : 8 === n ? \"R\" : \"N\";\n        }, y = function(t) {\n            for(var e, n = 0; n < t.length; n++){\n                if (\"L\" === (e = b(t.charAt(n)))) return !1;\n                if (\"R\" === e) return !0;\n            }\n            return !1;\n        }, w = function(t, e, o, s) {\n            var u, c, l, h, f = e[s];\n            switch(f){\n                case \"L\":\n                case \"R\":\n                case \"LRE\":\n                case \"RLE\":\n                case \"LRO\":\n                case \"RLO\":\n                case \"PDF\":\n                    m = !1;\n                    break;\n                case \"N\":\n                case \"AN\":\n                    break;\n                case \"EN\":\n                    m && (f = \"AN\");\n                    break;\n                case \"AL\":\n                    m = !0, f = \"R\";\n                    break;\n                case \"WS\":\n                case \"BN\":\n                    f = \"N\";\n                    break;\n                case \"CS\":\n                    s < 1 || s + 1 >= e.length || \"EN\" !== (u = o[s - 1]) && \"AN\" !== u || \"EN\" !== (c = e[s + 1]) && \"AN\" !== c ? f = \"N\" : m && (c = \"AN\"), f = c === u ? c : \"N\";\n                    break;\n                case \"ES\":\n                    f = \"EN\" === (u = s > 0 ? o[s - 1] : \"B\") && s + 1 < e.length && \"EN\" === e[s + 1] ? \"EN\" : \"N\";\n                    break;\n                case \"ET\":\n                    if (s > 0 && \"EN\" === o[s - 1]) {\n                        f = \"EN\";\n                        break;\n                    }\n                    if (m) {\n                        f = \"N\";\n                        break;\n                    }\n                    for(l = s + 1, h = e.length; l < h && \"ET\" === e[l];)l++;\n                    f = l < h && \"EN\" === e[l] ? \"EN\" : \"N\";\n                    break;\n                case \"NSM\":\n                    if (i && !a) {\n                        for(h = e.length, l = s + 1; l < h && \"NSM\" === e[l];)l++;\n                        if (l < h) {\n                            var d = t[s], p = d >= 1425 && d <= 2303 || 64286 === d;\n                            if (u = e[l], p && (\"R\" === u || \"AL\" === u)) {\n                                f = \"R\";\n                                break;\n                            }\n                        }\n                    }\n                    f = s < 1 || \"B\" === (u = e[s - 1]) ? \"N\" : o[s - 1];\n                    break;\n                case \"B\":\n                    m = !1, n = !0, f = v;\n                    break;\n                case \"S\":\n                    r = !0, f = \"N\";\n            }\n            return f;\n        }, N = function(t, e, n) {\n            var r = t.split(\"\");\n            return n && L(r, n, {\n                hiLevel: v\n            }), r.reverse(), e && e.reverse(), r.join(\"\");\n        }, L = function(t, e, i) {\n            var a, o, s, u, c, d = -1, p = t.length, g = 0, y = [], N = v ? h : l, L = [];\n            for(m = !1, n = !1, r = !1, o = 0; o < p; o++)L[o] = b(t[o]);\n            for(s = 0; s < p; s++){\n                if (c = g, y[s] = w(t, L, y, s), a = 240 & (g = N[c][f[y[s]]]), g &= 15, e[s] = u = N[g][5], a > 0) if (16 === a) {\n                    for(o = d; o < s; o++)e[o] = 1;\n                    d = -1;\n                } else d = -1;\n                if (N[g][6]) -1 === d && (d = s);\n                else if (d > -1) {\n                    for(o = d; o < s; o++)e[o] = u;\n                    d = -1;\n                }\n                \"B\" === L[s] && (e[s] = 0), i.hiLevel |= u;\n            }\n            r && function(t, e, n) {\n                for(var r = 0; r < n; r++)if (\"S\" === t[r]) {\n                    e[r] = v;\n                    for(var i = r - 1; i >= 0 && \"WS\" === t[i]; i--)e[i] = v;\n                }\n            }(L, e, p);\n        }, x = function(t, e, r, i, a) {\n            if (!(a.hiLevel < t)) {\n                if (1 === t && 1 === v && !n) return e.reverse(), void (r && r.reverse());\n                for(var o, s, u, c, l = e.length, h = 0; h < l;){\n                    if (i[h] >= t) {\n                        for(u = h + 1; u < l && i[u] >= t;)u++;\n                        for(c = h, s = u - 1; c < s; c++, s--)o = e[c], e[c] = e[s], e[s] = o, r && (o = r[c], r[c] = r[s], r[s] = o);\n                        h = u;\n                    }\n                    h++;\n                }\n            }\n        }, A = function(t, e, n) {\n            var r = t.split(\"\"), i = {\n                hiLevel: v\n            };\n            return n || (n = []), L(r, n, i), function(t, e, n) {\n                if (0 !== n.hiLevel && u) for(var r, i = 0; i < t.length; i++)1 === e[i] && (r = p.indexOf(t[i])) >= 0 && (t[i] = p[r + 1]);\n            }(r, n, i), x(2, r, e, n, i), x(1, r, e, n, i), r.join(\"\");\n        };\n        return this.__bidiEngine__.doBidiReorder = function(t, e, n) {\n            if (function(t, e) {\n                if (e) for(var n = 0; n < t.length; n++)e[n] = n;\n                void 0 === a && (a = y(t)), void 0 === s && (s = y(t));\n            }(t, e), i || !o || s) if (i && o && a ^ s) v = a ? 1 : 0, t = N(t, e, n);\n            else if (!i && o && s) v = a ? 1 : 0, t = A(t, e, n), t = N(t, e);\n            else if (!i || a || o || s) {\n                if (i && !o && a ^ s) t = N(t, e), a ? (v = 0, t = A(t, e, n)) : (v = 1, t = A(t, e, n), t = N(t, e));\n                else if (i && a && !o && s) v = 1, t = A(t, e, n), t = N(t, e);\n                else if (!i && !o && a ^ s) {\n                    var r = u;\n                    a ? (v = 1, t = A(t, e, n), v = 0, u = !1, t = A(t, e, n), u = r) : (v = 0, t = A(t, e, n), t = N(t, e), v = 1, u = !1, t = A(t, e, n), u = r, t = N(t, e));\n                }\n            } else v = 0, t = A(t, e, n);\n            else v = a ? 1 : 0, t = A(t, e, n);\n            return t;\n        }, this.__bidiEngine__.setOptions = function(t) {\n            t && (i = t.isInputVisual, o = t.isOutputVisual, a = t.isInputRtl, s = t.isOutputRtl, u = t.isSymmetricSwapping);\n        }, this.__bidiEngine__.setOptions(t), this.__bidiEngine__;\n    };\n    var e = [\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"S\",\n        \"B\",\n        \"S\",\n        \"WS\",\n        \"B\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"B\",\n        \"B\",\n        \"B\",\n        \"S\",\n        \"WS\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ES\",\n        \"CS\",\n        \"ES\",\n        \"CS\",\n        \"CS\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"B\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"CS\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"BN\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"EN\",\n        \"EN\",\n        \"N\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"EN\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"R\",\n        \"NSM\",\n        \"R\",\n        \"NSM\",\n        \"NSM\",\n        \"R\",\n        \"NSM\",\n        \"NSM\",\n        \"R\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"N\",\n        \"N\",\n        \"AL\",\n        \"ET\",\n        \"ET\",\n        \"AL\",\n        \"CS\",\n        \"AL\",\n        \"N\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"AN\",\n        \"ET\",\n        \"AN\",\n        \"AN\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AN\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"AL\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"WS\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"L\",\n        \"R\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"WS\",\n        \"B\",\n        \"LRE\",\n        \"RLE\",\n        \"PDF\",\n        \"LRO\",\n        \"RLO\",\n        \"CS\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"WS\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"N\",\n        \"LRI\",\n        \"RLI\",\n        \"FSI\",\n        \"PDI\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"BN\",\n        \"EN\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"ES\",\n        \"ES\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"ES\",\n        \"ES\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"R\",\n        \"NSM\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"ES\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"N\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"R\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"NSM\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"CS\",\n        \"N\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"ES\",\n        \"ES\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"AL\",\n        \"N\",\n        \"N\",\n        \"BN\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ES\",\n        \"CS\",\n        \"ES\",\n        \"CS\",\n        \"CS\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"EN\",\n        \"CS\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"L\",\n        \"L\",\n        \"L\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"ET\",\n        \"ET\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\",\n        \"N\"\n    ], n = new t.__bidiEngine__({\n        isInputVisual: !0\n    });\n    t.API.events.push([\n        \"postProcessText\",\n        function(t) {\n            var e = t.text;\n            t.x, t.y;\n            var r = t.options || {};\n            t.mutex, r.lang;\n            var i = [];\n            if (r.isInputVisual = \"boolean\" != typeof r.isInputVisual || r.isInputVisual, n.setOptions(r), \"[object Array]\" === Object.prototype.toString.call(e)) {\n                var a = 0;\n                for(i = [], a = 0; a < e.length; a += 1)\"[object Array]\" === Object.prototype.toString.call(e[a]) ? i.push([\n                    n.doBidiReorder(e[a][0]),\n                    e[a][1],\n                    e[a][2]\n                ]) : i.push([\n                    n.doBidiReorder(e[a])\n                ]);\n                t.text = i;\n            } else t.text = n.doBidiReorder(e);\n            n.setOptions({\n                isInputVisual: !0\n            });\n        }\n    ]);\n}(E), E.API.TTFFont = function() {\n    function t(t) {\n        var e;\n        if (this.rawData = t, e = this.contents = new fe(t), this.contents.pos = 4, \"ttcf\" === e.readString(4)) throw new Error(\"TTCF not supported.\");\n        e.pos = 0, this.parse(), this.subset = new je(this), this.registerTTF();\n    }\n    return t.open = function(e) {\n        return new t(e);\n    }, t.prototype.parse = function() {\n        return this.directory = new de(this.contents), this.head = new me(this), this.name = new xe(this), this.cmap = new be(this), this.toUnicode = {}, this.hhea = new ye(this), this.maxp = new Ae(this), this.hmtx = new Se(this), this.post = new Ne(this), this.os2 = new we(this), this.loca = new Ie(this), this.glyf = new Pe(this), this.ascender = this.os2.exists && this.os2.ascender || this.hhea.ascender, this.decender = this.os2.exists && this.os2.decender || this.hhea.decender, this.lineGap = this.os2.exists && this.os2.lineGap || this.hhea.lineGap, this.bbox = [\n            this.head.xMin,\n            this.head.yMin,\n            this.head.xMax,\n            this.head.yMax\n        ];\n    }, t.prototype.registerTTF = function() {\n        var t, e, n, r, i;\n        if (this.scaleFactor = 1e3 / this.head.unitsPerEm, this.bbox = (function() {\n            var e, n, r, i;\n            for(i = [], e = 0, n = (r = this.bbox).length; e < n; e++)t = r[e], i.push(Math.round(t * this.scaleFactor));\n            return i;\n        }).call(this), this.stemV = 0, this.post.exists ? (n = 255 & (r = this.post.italic_angle), 32768 & (e = r >> 16) && (e = -(1 + (65535 ^ e))), this.italicAngle = +(e + \".\" + n)) : this.italicAngle = 0, this.ascender = Math.round(this.ascender * this.scaleFactor), this.decender = Math.round(this.decender * this.scaleFactor), this.lineGap = Math.round(this.lineGap * this.scaleFactor), this.capHeight = this.os2.exists && this.os2.capHeight || this.ascender, this.xHeight = this.os2.exists && this.os2.xHeight || 0, this.familyClass = (this.os2.exists && this.os2.familyClass || 0) >> 8, this.isSerif = 1 === (i = this.familyClass) || 2 === i || 3 === i || 4 === i || 5 === i || 7 === i, this.isScript = 10 === this.familyClass, this.flags = 0, this.post.isFixedPitch && (this.flags |= 1), this.isSerif && (this.flags |= 2), this.isScript && (this.flags |= 8), 0 !== this.italicAngle && (this.flags |= 64), this.flags |= 32, !this.cmap.unicode) throw new Error(\"No unicode cmap for font\");\n    }, t.prototype.characterToGlyph = function(t) {\n        var e;\n        return (null != (e = this.cmap.unicode) ? e.codeMap[t] : void 0) || 0;\n    }, t.prototype.widthOfGlyph = function(t) {\n        var e;\n        return e = 1e3 / this.head.unitsPerEm, this.hmtx.forGlyph(t).advance * e;\n    }, t.prototype.widthOfString = function(t, e, n) {\n        var r, i, a, o;\n        for(a = 0, i = 0, o = (t = \"\" + t).length; 0 <= o ? i < o : i > o; i = 0 <= o ? ++i : --i)r = t.charCodeAt(i), a += this.widthOfGlyph(this.characterToGlyph(r)) + n * (1e3 / e) || 0;\n        return a * (e / 1e3);\n    }, t.prototype.lineHeight = function(t, e) {\n        var n;\n        return null == e && (e = !1), n = e ? this.lineGap : 0, (this.ascender + n - this.decender) / 1e3 * t;\n    }, t;\n}();\nvar he, fe = function() {\n    function t(t) {\n        this.data = null != t ? t : [], this.pos = 0, this.length = this.data.length;\n    }\n    return t.prototype.readByte = function() {\n        return this.data[this.pos++];\n    }, t.prototype.writeByte = function(t) {\n        return this.data[this.pos++] = t;\n    }, t.prototype.readUInt32 = function() {\n        return 16777216 * this.readByte() + (this.readByte() << 16) + (this.readByte() << 8) + this.readByte();\n    }, t.prototype.writeUInt32 = function(t) {\n        return this.writeByte(t >>> 24 & 255), this.writeByte(t >> 16 & 255), this.writeByte(t >> 8 & 255), this.writeByte(255 & t);\n    }, t.prototype.readInt32 = function() {\n        var t;\n        return (t = this.readUInt32()) >= 2147483648 ? t - 4294967296 : t;\n    }, t.prototype.writeInt32 = function(t) {\n        return t < 0 && (t += 4294967296), this.writeUInt32(t);\n    }, t.prototype.readUInt16 = function() {\n        return this.readByte() << 8 | this.readByte();\n    }, t.prototype.writeUInt16 = function(t) {\n        return this.writeByte(t >> 8 & 255), this.writeByte(255 & t);\n    }, t.prototype.readInt16 = function() {\n        var t;\n        return (t = this.readUInt16()) >= 32768 ? t - 65536 : t;\n    }, t.prototype.writeInt16 = function(t) {\n        return t < 0 && (t += 65536), this.writeUInt16(t);\n    }, t.prototype.readString = function(t) {\n        var e, n;\n        for(n = [], e = 0; 0 <= t ? e < t : e > t; e = 0 <= t ? ++e : --e)n[e] = String.fromCharCode(this.readByte());\n        return n.join(\"\");\n    }, t.prototype.writeString = function(t) {\n        var e, n, r;\n        for(r = [], e = 0, n = t.length; 0 <= n ? e < n : e > n; e = 0 <= n ? ++e : --e)r.push(this.writeByte(t.charCodeAt(e)));\n        return r;\n    }, t.prototype.readShort = function() {\n        return this.readInt16();\n    }, t.prototype.writeShort = function(t) {\n        return this.writeInt16(t);\n    }, t.prototype.readLongLong = function() {\n        var t, e, n, r, i, a, o, s;\n        return t = this.readByte(), e = this.readByte(), n = this.readByte(), r = this.readByte(), i = this.readByte(), a = this.readByte(), o = this.readByte(), s = this.readByte(), 128 & t ? -1 * (72057594037927940 * (255 ^ t) + 281474976710656 * (255 ^ e) + 1099511627776 * (255 ^ n) + 4294967296 * (255 ^ r) + 16777216 * (255 ^ i) + 65536 * (255 ^ a) + 256 * (255 ^ o) + (255 ^ s) + 1) : 72057594037927940 * t + 281474976710656 * e + 1099511627776 * n + 4294967296 * r + 16777216 * i + 65536 * a + 256 * o + s;\n    }, t.prototype.writeLongLong = function(t) {\n        var e, n;\n        return e = Math.floor(t / 4294967296), n = 4294967295 & t, this.writeByte(e >> 24 & 255), this.writeByte(e >> 16 & 255), this.writeByte(e >> 8 & 255), this.writeByte(255 & e), this.writeByte(n >> 24 & 255), this.writeByte(n >> 16 & 255), this.writeByte(n >> 8 & 255), this.writeByte(255 & n);\n    }, t.prototype.readInt = function() {\n        return this.readInt32();\n    }, t.prototype.writeInt = function(t) {\n        return this.writeInt32(t);\n    }, t.prototype.read = function(t) {\n        var e, n;\n        for(e = [], n = 0; 0 <= t ? n < t : n > t; n = 0 <= t ? ++n : --n)e.push(this.readByte());\n        return e;\n    }, t.prototype.write = function(t) {\n        var e, n, r, i;\n        for(i = [], n = 0, r = t.length; n < r; n++)e = t[n], i.push(this.writeByte(e));\n        return i;\n    }, t;\n}(), de = function() {\n    var t;\n    function e(t) {\n        var e, n, r;\n        for(this.scalarType = t.readInt(), this.tableCount = t.readShort(), this.searchRange = t.readShort(), this.entrySelector = t.readShort(), this.rangeShift = t.readShort(), this.tables = {}, n = 0, r = this.tableCount; 0 <= r ? n < r : n > r; n = 0 <= r ? ++n : --n)e = {\n            tag: t.readString(4),\n            checksum: t.readInt(),\n            offset: t.readInt(),\n            length: t.readInt()\n        }, this.tables[e.tag] = e;\n    }\n    return e.prototype.encode = function(e) {\n        var n, r, i, a, o, s, u, c, l, h, f, d, p;\n        for(p in f = Object.keys(e).length, s = Math.log(2), l = 16 * Math.floor(Math.log(f) / s), a = Math.floor(l / s), c = 16 * f - l, (r = new fe).writeInt(this.scalarType), r.writeShort(f), r.writeShort(l), r.writeShort(a), r.writeShort(c), i = 16 * f, u = r.pos + i, o = null, d = [], e)for(h = e[p], r.writeString(p), r.writeInt(t(h)), r.writeInt(u), r.writeInt(h.length), d = d.concat(h), \"head\" === p && (o = u), u += h.length; u % 4;)d.push(0), u++;\n        return r.write(d), n = 2981146554 - t(r.data), r.pos = o + 8, r.writeUInt32(n), r.data;\n    }, t = function(t) {\n        var e, n, r, i;\n        for(t = _e.call(t); t.length % 4;)t.push(0);\n        for(r = new fe(t), n = 0, e = 0, i = t.length; e < i; e = e += 4)n += r.readUInt32();\n        return 4294967295 & n;\n    }, e;\n}(), pe = {}.hasOwnProperty, ge = function(t, e) {\n    for(var n in e)pe.call(e, n) && (t[n] = e[n]);\n    function r() {\n        this.constructor = t;\n    }\n    return r.prototype = e.prototype, t.prototype = new r, t.__super__ = e.prototype, t;\n};\nhe = function() {\n    function t(t) {\n        var e;\n        this.file = t, e = this.file.directory.tables[this.tag], this.exists = !!e, e && (this.offset = e.offset, this.length = e.length, this.parse(this.file.contents));\n    }\n    return t.prototype.parse = function() {}, t.prototype.encode = function() {}, t.prototype.raw = function() {\n        return this.exists ? (this.file.contents.pos = this.offset, this.file.contents.read(this.length)) : null;\n    }, t;\n}();\nvar me = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"head\", t.prototype.parse = function(t) {\n        return t.pos = this.offset, this.version = t.readInt(), this.revision = t.readInt(), this.checkSumAdjustment = t.readInt(), this.magicNumber = t.readInt(), this.flags = t.readShort(), this.unitsPerEm = t.readShort(), this.created = t.readLongLong(), this.modified = t.readLongLong(), this.xMin = t.readShort(), this.yMin = t.readShort(), this.xMax = t.readShort(), this.yMax = t.readShort(), this.macStyle = t.readShort(), this.lowestRecPPEM = t.readShort(), this.fontDirectionHint = t.readShort(), this.indexToLocFormat = t.readShort(), this.glyphDataFormat = t.readShort();\n    }, t.prototype.encode = function(t) {\n        var e;\n        return (e = new fe).writeInt(this.version), e.writeInt(this.revision), e.writeInt(this.checkSumAdjustment), e.writeInt(this.magicNumber), e.writeShort(this.flags), e.writeShort(this.unitsPerEm), e.writeLongLong(this.created), e.writeLongLong(this.modified), e.writeShort(this.xMin), e.writeShort(this.yMin), e.writeShort(this.xMax), e.writeShort(this.yMax), e.writeShort(this.macStyle), e.writeShort(this.lowestRecPPEM), e.writeShort(this.fontDirectionHint), e.writeShort(t), e.writeShort(this.glyphDataFormat), e.data;\n    }, t;\n}(), ve = function() {\n    function t(t, e) {\n        var n, r, i, a, o, s, u, c, l, h, f, d, p, g, m, v, b;\n        switch(this.platformID = t.readUInt16(), this.encodingID = t.readShort(), this.offset = e + t.readInt(), l = t.pos, t.pos = this.offset, this.format = t.readUInt16(), this.length = t.readUInt16(), this.language = t.readUInt16(), this.isUnicode = 3 === this.platformID && 1 === this.encodingID && 4 === this.format || 0 === this.platformID && 4 === this.format, this.codeMap = {}, this.format){\n            case 0:\n                for(s = 0; s < 256; ++s)this.codeMap[s] = t.readByte();\n                break;\n            case 4:\n                for(f = t.readUInt16(), h = f / 2, t.pos += 6, i = function() {\n                    var e, n;\n                    for(n = [], s = e = 0; 0 <= h ? e < h : e > h; s = 0 <= h ? ++e : --e)n.push(t.readUInt16());\n                    return n;\n                }(), t.pos += 2, p = function() {\n                    var e, n;\n                    for(n = [], s = e = 0; 0 <= h ? e < h : e > h; s = 0 <= h ? ++e : --e)n.push(t.readUInt16());\n                    return n;\n                }(), u = function() {\n                    var e, n;\n                    for(n = [], s = e = 0; 0 <= h ? e < h : e > h; s = 0 <= h ? ++e : --e)n.push(t.readUInt16());\n                    return n;\n                }(), c = function() {\n                    var e, n;\n                    for(n = [], s = e = 0; 0 <= h ? e < h : e > h; s = 0 <= h ? ++e : --e)n.push(t.readUInt16());\n                    return n;\n                }(), r = (this.length - t.pos + this.offset) / 2, o = function() {\n                    var e, n;\n                    for(n = [], s = e = 0; 0 <= r ? e < r : e > r; s = 0 <= r ? ++e : --e)n.push(t.readUInt16());\n                    return n;\n                }(), s = m = 0, b = i.length; m < b; s = ++m)for(g = i[s], n = v = d = p[s]; d <= g ? v <= g : v >= g; n = d <= g ? ++v : --v)0 === c[s] ? a = n + u[s] : 0 !== (a = o[c[s] / 2 + (n - d) - (h - s)] || 0) && (a += u[s]), this.codeMap[n] = 65535 & a;\n        }\n        t.pos = l;\n    }\n    return t.encode = function(t, e) {\n        var n, r, i, a, o, s, u, c, l, h, f, d, p, g, m, v, b, y, w, N, L, x, A, S, _, P, k, F, I, j, C, O, B, M, q, E, R, D, T, z, U, H, W, V, G, Y;\n        switch(F = new fe, a = Object.keys(t).sort(function(t, e) {\n            return t - e;\n        }), e){\n            case \"macroman\":\n                for(p = 0, g = function() {\n                    var t = [];\n                    for(d = 0; d < 256; ++d)t.push(0);\n                    return t;\n                }(), v = {\n                    0: 0\n                }, i = {}, I = 0, B = a.length; I < B; I++)null == v[W = t[r = a[I]]] && (v[W] = ++p), i[r] = {\n                    old: t[r],\n                    new: v[t[r]]\n                }, g[r] = v[t[r]];\n                return F.writeUInt16(1), F.writeUInt16(0), F.writeUInt32(12), F.writeUInt16(0), F.writeUInt16(262), F.writeUInt16(0), F.write(g), {\n                    charMap: i,\n                    subtable: F.data,\n                    maxGlyphID: p + 1\n                };\n            case \"unicode\":\n                for(P = [], l = [], b = 0, v = {}, n = {}, m = u = null, j = 0, M = a.length; j < M; j++)null == v[w = t[r = a[j]]] && (v[w] = ++b), n[r] = {\n                    old: w,\n                    new: v[w]\n                }, o = v[w] - r, null != m && o === u || (m && l.push(m), P.push(r), u = o), m = r;\n                for(m && l.push(m), l.push(65535), P.push(65535), S = 2 * (A = P.length), x = 2 * Math.pow(Math.log(A) / Math.LN2, 2), h = Math.log(x / 2) / Math.LN2, L = 2 * A - x, s = [], N = [], f = [], d = C = 0, q = P.length; C < q; d = ++C){\n                    if (_ = P[d], c = l[d], 65535 === _) {\n                        s.push(0), N.push(0);\n                        break;\n                    }\n                    if (_ - (k = n[_].new) >= 32768) for(s.push(0), N.push(2 * (f.length + A - d)), r = O = _; _ <= c ? O <= c : O >= c; r = _ <= c ? ++O : --O)f.push(n[r].new);\n                    else s.push(k - _), N.push(0);\n                }\n                for(F.writeUInt16(3), F.writeUInt16(1), F.writeUInt32(12), F.writeUInt16(4), F.writeUInt16(16 + 8 * A + 2 * f.length), F.writeUInt16(0), F.writeUInt16(S), F.writeUInt16(x), F.writeUInt16(h), F.writeUInt16(L), U = 0, E = l.length; U < E; U++)r = l[U], F.writeUInt16(r);\n                for(F.writeUInt16(0), H = 0, R = P.length; H < R; H++)r = P[H], F.writeUInt16(r);\n                for(V = 0, D = s.length; V < D; V++)o = s[V], F.writeUInt16(o);\n                for(G = 0, T = N.length; G < T; G++)y = N[G], F.writeUInt16(y);\n                for(Y = 0, z = f.length; Y < z; Y++)p = f[Y], F.writeUInt16(p);\n                return {\n                    charMap: n,\n                    subtable: F.data,\n                    maxGlyphID: b + 1\n                };\n        }\n    }, t;\n}(), be = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"cmap\", t.prototype.parse = function(t) {\n        var e, n, r;\n        for(t.pos = this.offset, this.version = t.readUInt16(), r = t.readUInt16(), this.tables = [], this.unicode = null, n = 0; 0 <= r ? n < r : n > r; n = 0 <= r ? ++n : --n)e = new ve(t, this.offset), this.tables.push(e), e.isUnicode && null == this.unicode && (this.unicode = e);\n        return !0;\n    }, t.encode = function(t, e) {\n        var n, r;\n        return null == e && (e = \"macroman\"), n = ve.encode(t, e), (r = new fe).writeUInt16(0), r.writeUInt16(1), n.table = r.data.concat(n.subtable), n;\n    }, t;\n}(), ye = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"hhea\", t.prototype.parse = function(t) {\n        return t.pos = this.offset, this.version = t.readInt(), this.ascender = t.readShort(), this.decender = t.readShort(), this.lineGap = t.readShort(), this.advanceWidthMax = t.readShort(), this.minLeftSideBearing = t.readShort(), this.minRightSideBearing = t.readShort(), this.xMaxExtent = t.readShort(), this.caretSlopeRise = t.readShort(), this.caretSlopeRun = t.readShort(), this.caretOffset = t.readShort(), t.pos += 8, this.metricDataFormat = t.readShort(), this.numberOfMetrics = t.readUInt16();\n    }, t;\n}(), we = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"OS/2\", t.prototype.parse = function(t) {\n        if (t.pos = this.offset, this.version = t.readUInt16(), this.averageCharWidth = t.readShort(), this.weightClass = t.readUInt16(), this.widthClass = t.readUInt16(), this.type = t.readShort(), this.ySubscriptXSize = t.readShort(), this.ySubscriptYSize = t.readShort(), this.ySubscriptXOffset = t.readShort(), this.ySubscriptYOffset = t.readShort(), this.ySuperscriptXSize = t.readShort(), this.ySuperscriptYSize = t.readShort(), this.ySuperscriptXOffset = t.readShort(), this.ySuperscriptYOffset = t.readShort(), this.yStrikeoutSize = t.readShort(), this.yStrikeoutPosition = t.readShort(), this.familyClass = t.readShort(), this.panose = function() {\n            var e, n;\n            for(n = [], e = 0; e < 10; ++e)n.push(t.readByte());\n            return n;\n        }(), this.charRange = function() {\n            var e, n;\n            for(n = [], e = 0; e < 4; ++e)n.push(t.readInt());\n            return n;\n        }(), this.vendorID = t.readString(4), this.selection = t.readShort(), this.firstCharIndex = t.readShort(), this.lastCharIndex = t.readShort(), this.version > 0 && (this.ascent = t.readShort(), this.descent = t.readShort(), this.lineGap = t.readShort(), this.winAscent = t.readShort(), this.winDescent = t.readShort(), this.codePageRange = function() {\n            var e, n;\n            for(n = [], e = 0; e < 2; e = ++e)n.push(t.readInt());\n            return n;\n        }(), this.version > 1)) return this.xHeight = t.readShort(), this.capHeight = t.readShort(), this.defaultChar = t.readShort(), this.breakChar = t.readShort(), this.maxContext = t.readShort();\n    }, t;\n}(), Ne = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"post\", t.prototype.parse = function(t) {\n        var e, n, r;\n        switch(t.pos = this.offset, this.format = t.readInt(), this.italicAngle = t.readInt(), this.underlinePosition = t.readShort(), this.underlineThickness = t.readShort(), this.isFixedPitch = t.readInt(), this.minMemType42 = t.readInt(), this.maxMemType42 = t.readInt(), this.minMemType1 = t.readInt(), this.maxMemType1 = t.readInt(), this.format){\n            case 65536:\n            case 196608:\n                break;\n            case 131072:\n                var i;\n                for(n = t.readUInt16(), this.glyphNameIndex = [], i = 0; 0 <= n ? i < n : i > n; i = 0 <= n ? ++i : --i)this.glyphNameIndex.push(t.readUInt16());\n                for(this.names = [], r = []; t.pos < this.offset + this.length;)e = t.readByte(), r.push(this.names.push(t.readString(e)));\n                return r;\n            case 151552:\n                return n = t.readUInt16(), this.offsets = t.read(n);\n            case 262144:\n                return this.map = (function() {\n                    var e, n, r;\n                    for(r = [], i = e = 0, n = this.file.maxp.numGlyphs; 0 <= n ? e < n : e > n; i = 0 <= n ? ++e : --e)r.push(t.readUInt32());\n                    return r;\n                }).call(this);\n        }\n    }, t;\n}(), Le = function(t, e) {\n    this.raw = t, this.length = t.length, this.platformID = e.platformID, this.encodingID = e.encodingID, this.languageID = e.languageID;\n}, xe = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"name\", t.prototype.parse = function(t) {\n        var e, n, r, i, a, o, s, u, c, l, h;\n        for(t.pos = this.offset, t.readShort(), e = t.readShort(), o = t.readShort(), n = [], i = 0; 0 <= e ? i < e : i > e; i = 0 <= e ? ++i : --i)n.push({\n            platformID: t.readShort(),\n            encodingID: t.readShort(),\n            languageID: t.readShort(),\n            nameID: t.readShort(),\n            length: t.readShort(),\n            offset: this.offset + o + t.readShort()\n        });\n        for(s = {}, i = c = 0, l = n.length; c < l; i = ++c)r = n[i], t.pos = r.offset, u = t.readString(r.length), a = new Le(u, r), null == s[h = r.nameID] && (s[h] = []), s[r.nameID].push(a);\n        this.strings = s, this.copyright = s[0], this.fontFamily = s[1], this.fontSubfamily = s[2], this.uniqueSubfamily = s[3], this.fontName = s[4], this.version = s[5];\n        try {\n            this.postscriptName = s[6][0].raw.replace(/[\\x00-\\x19\\x80-\\xff]/g, \"\");\n        } catch (f) {\n            this.postscriptName = s[4][0].raw.replace(/[\\x00-\\x19\\x80-\\xff]/g, \"\");\n        }\n        return this.trademark = s[7], this.manufacturer = s[8], this.designer = s[9], this.description = s[10], this.vendorUrl = s[11], this.designerUrl = s[12], this.license = s[13], this.licenseUrl = s[14], this.preferredFamily = s[15], this.preferredSubfamily = s[17], this.compatibleFull = s[18], this.sampleText = s[19];\n    }, t;\n}(), Ae = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"maxp\", t.prototype.parse = function(t) {\n        return t.pos = this.offset, this.version = t.readInt(), this.numGlyphs = t.readUInt16(), this.maxPoints = t.readUInt16(), this.maxContours = t.readUInt16(), this.maxCompositePoints = t.readUInt16(), this.maxComponentContours = t.readUInt16(), this.maxZones = t.readUInt16(), this.maxTwilightPoints = t.readUInt16(), this.maxStorage = t.readUInt16(), this.maxFunctionDefs = t.readUInt16(), this.maxInstructionDefs = t.readUInt16(), this.maxStackElements = t.readUInt16(), this.maxSizeOfInstructions = t.readUInt16(), this.maxComponentElements = t.readUInt16(), this.maxComponentDepth = t.readUInt16();\n    }, t;\n}(), Se = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"hmtx\", t.prototype.parse = function(t) {\n        var e, n, r, i, a, o, s;\n        for(t.pos = this.offset, this.metrics = [], e = 0, o = this.file.hhea.numberOfMetrics; 0 <= o ? e < o : e > o; e = 0 <= o ? ++e : --e)this.metrics.push({\n            advance: t.readUInt16(),\n            lsb: t.readInt16()\n        });\n        for(r = this.file.maxp.numGlyphs - this.file.hhea.numberOfMetrics, this.leftSideBearings = function() {\n            var n, i;\n            for(i = [], e = n = 0; 0 <= r ? n < r : n > r; e = 0 <= r ? ++n : --n)i.push(t.readInt16());\n            return i;\n        }(), this.widths = (function() {\n            var t, e, n, r;\n            for(r = [], t = 0, e = (n = this.metrics).length; t < e; t++)i = n[t], r.push(i.advance);\n            return r;\n        }).call(this), n = this.widths[this.widths.length - 1], s = [], e = a = 0; 0 <= r ? a < r : a > r; e = 0 <= r ? ++a : --a)s.push(this.widths.push(n));\n        return s;\n    }, t.prototype.forGlyph = function(t) {\n        return t in this.metrics ? this.metrics[t] : {\n            advance: this.metrics[this.metrics.length - 1].advance,\n            lsb: this.leftSideBearings[t - this.metrics.length]\n        };\n    }, t;\n}(), _e = [].slice, Pe = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"glyf\", t.prototype.parse = function() {\n        return this.cache = {};\n    }, t.prototype.glyphFor = function(t) {\n        var e, n, r, i, a, o, s, u, c, l;\n        return t in this.cache ? this.cache[t] : (i = this.file.loca, e = this.file.contents, n = i.indexOf(t), 0 === (r = i.lengthOf(t)) ? this.cache[t] = null : (e.pos = this.offset + n, a = (o = new fe(e.read(r))).readShort(), u = o.readShort(), l = o.readShort(), s = o.readShort(), c = o.readShort(), this.cache[t] = -1 === a ? new Fe(o, u, l, s, c) : new ke(o, a, u, l, s, c), this.cache[t]));\n    }, t.prototype.encode = function(t, e, n) {\n        var r, i, a, o, s;\n        for(a = [], i = [], o = 0, s = e.length; o < s; o++)r = t[e[o]], i.push(a.length), r && (a = a.concat(r.encode(n)));\n        return i.push(a.length), {\n            table: a,\n            offsets: i\n        };\n    }, t;\n}(), ke = function() {\n    function t(t, e, n, r, i, a) {\n        this.raw = t, this.numberOfContours = e, this.xMin = n, this.yMin = r, this.xMax = i, this.yMax = a, this.compound = !1;\n    }\n    return t.prototype.encode = function() {\n        return this.raw.data;\n    }, t;\n}(), Fe = function() {\n    function t(t, e, n, r, i) {\n        var a, o;\n        for(this.raw = t, this.xMin = e, this.yMin = n, this.xMax = r, this.yMax = i, this.compound = !0, this.glyphIDs = [], this.glyphOffsets = [], a = this.raw; o = a.readShort(), this.glyphOffsets.push(a.pos), this.glyphIDs.push(a.readUInt16()), 32 & o;)a.pos += 1 & o ? 4 : 2, 128 & o ? a.pos += 8 : 64 & o ? a.pos += 4 : 8 & o && (a.pos += 2);\n    }\n    return t.prototype.encode = function() {\n        var t, e, n;\n        for(e = new fe(_e.call(this.raw.data)), t = 0, n = this.glyphIDs.length; t < n; ++t)e.pos = this.glyphOffsets[t];\n        return e.data;\n    }, t;\n}(), Ie = function() {\n    function t() {\n        return t.__super__.constructor.apply(this, arguments);\n    }\n    return ge(t, he), t.prototype.tag = \"loca\", t.prototype.parse = function(t) {\n        var e, n;\n        return t.pos = this.offset, e = this.file.head.indexToLocFormat, this.offsets = 0 === e ? (function() {\n            var e, r;\n            for(r = [], n = 0, e = this.length; n < e; n += 2)r.push(2 * t.readUInt16());\n            return r;\n        }).call(this) : (function() {\n            var e, r;\n            for(r = [], n = 0, e = this.length; n < e; n += 4)r.push(t.readUInt32());\n            return r;\n        }).call(this);\n    }, t.prototype.indexOf = function(t) {\n        return this.offsets[t];\n    }, t.prototype.lengthOf = function(t) {\n        return this.offsets[t + 1] - this.offsets[t];\n    }, t.prototype.encode = function(t, e) {\n        for(var n = new Uint32Array(this.offsets.length), r = 0, i = 0, a = 0; a < n.length; ++a)if (n[a] = r, i < e.length && e[i] == a) {\n            ++i, n[a] = r;\n            var o = this.offsets[a], s = this.offsets[a + 1] - o;\n            s > 0 && (r += s);\n        }\n        for(var u = new Array(4 * n.length), c = 0; c < n.length; ++c)u[4 * c + 3] = 255 & n[c], u[4 * c + 2] = (65280 & n[c]) >> 8, u[4 * c + 1] = (16711680 & n[c]) >> 16, u[4 * c] = (4278190080 & n[c]) >> 24;\n        return u;\n    }, t;\n}(), je = function() {\n    function t(t) {\n        this.font = t, this.subset = {}, this.unicodes = {}, this.next = 33;\n    }\n    return t.prototype.generateCmap = function() {\n        var t, e, n, r, i;\n        for(e in r = this.font.cmap.tables[0].codeMap, t = {}, i = this.subset)n = i[e], t[e] = r[n];\n        return t;\n    }, t.prototype.glyphsFor = function(t) {\n        var e, n, r, i, a, o, s;\n        for(r = {}, a = 0, o = t.length; a < o; a++)r[i = t[a]] = this.font.glyf.glyphFor(i);\n        for(i in e = [], r)(null != (n = r[i]) ? n.compound : void 0) && e.push.apply(e, n.glyphIDs);\n        if (e.length > 0) for(i in s = this.glyphsFor(e))n = s[i], r[i] = n;\n        return r;\n    }, t.prototype.encode = function(t, e) {\n        var n, r, i, a, o, s, u, c, l, h, f, d, p, g, m;\n        for(r in n = be.encode(this.generateCmap(), \"unicode\"), a = this.glyphsFor(t), f = {\n            0: 0\n        }, m = n.charMap)f[(s = m[r]).old] = s.new;\n        for(d in h = n.maxGlyphID, a)d in f || (f[d] = h++);\n        return c = function(t) {\n            var e, n;\n            for(e in n = {}, t)n[t[e]] = e;\n            return n;\n        }(f), l = Object.keys(c).sort(function(t, e) {\n            return t - e;\n        }), p = function() {\n            var t, e, n;\n            for(n = [], t = 0, e = l.length; t < e; t++)o = l[t], n.push(c[o]);\n            return n;\n        }(), i = this.font.glyf.encode(a, p, f), u = this.font.loca.encode(i.offsets, p), g = {\n            cmap: this.font.cmap.raw(),\n            glyf: i.table,\n            loca: u,\n            hmtx: this.font.hmtx.raw(),\n            hhea: this.font.hhea.raw(),\n            maxp: this.font.maxp.raw(),\n            post: this.font.post.raw(),\n            name: this.font.name.raw(),\n            head: this.font.head.encode(e)\n        }, this.font.os2.exists && (g[\"OS/2\"] = this.font.os2.raw()), this.font.directory.encode(g);\n    }, t;\n}();\nE.API.PDFObject = function() {\n    var t;\n    function e() {}\n    return t = function(t, e) {\n        return (Array(e + 1).join(\"0\") + t).slice(-e);\n    }, e.convert = function(n) {\n        var r, i, a, o;\n        if (Array.isArray(n)) return \"[\" + (function() {\n            var t, i, a;\n            for(a = [], t = 0, i = n.length; t < i; t++)r = n[t], a.push(e.convert(r));\n            return a;\n        })().join(\" \") + \"]\";\n        if (\"string\" == typeof n) return \"/\" + n;\n        if (null != n ? n.isString : void 0) return \"(\" + n + \")\";\n        if (n instanceof Date) return \"(D:\" + t(n.getUTCFullYear(), 4) + t(n.getUTCMonth(), 2) + t(n.getUTCDate(), 2) + t(n.getUTCHours(), 2) + t(n.getUTCMinutes(), 2) + t(n.getUTCSeconds(), 2) + \"Z)\";\n        if (\"[object Object]\" === ({}).toString.call(n)) {\n            for(i in a = [\n                \"<<\"\n            ], n)o = n[i], a.push(\"/\" + i + \" \" + e.convert(o));\n            return a.push(\">>\"), a.join(\"\\n\");\n        }\n        return \"\" + n;\n    }, e;\n}();\n //# sourceMappingURL=jspdf.es.min.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../../../node_modules/jspdf/dist/jspdf.es.min.js\n");

/***/ })

};
;